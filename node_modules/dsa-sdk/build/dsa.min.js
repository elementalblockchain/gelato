/*!
 * 
 *   dsa-sdk v1.5.2
 *   https://github.com/instadapp/dsa-sdk
 * 
 *   Copyright (c) INSTADAPP LABS LLC 
 * 
 *   This source code is licensed under the MIT license found in the
 *   LICENSE file in the root directory of this source tree.
 * 
 */
!function(f,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.DSA=e():f.DSA=e()}(this,(function(){return function(f){var e={};function t(n){if(e[n])return e[n].exports;var a=e[n]={i:n,l:!1,exports:{}};return f[n].call(a.exports,a,a.exports,t),a.l=!0,a.exports}return t.m=f,t.c=e,t.d=function(f,e,n){t.o(f,e)||Object.defineProperty(f,e,{enumerable:!0,get:n})},t.r=function(f){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(f,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(f,"__esModule",{value:!0})},t.t=function(f,e){if(1&e&&(f=t(f)),8&e)return f;if(4&e&&"object"==typeof f&&f&&f.__esModule)return f;var n=Object.create(null);if(t.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:f}),2&e&&"string"!=typeof f)for(var a in f)t.d(n,a,function(e){return f[e]}.bind(null,a));return n},t.n=function(f){var e=f&&f.__esModule?function(){return f.default}:function(){return f};return t.d(e,"a",e),e},t.o=function(f,e){return Object.prototype.hasOwnProperty.call(f,e)},t.p="",t(t.s=22)}([function(f,e,t){"use strict";var n=t(14),a=Object.prototype.toString;function i(f){return"[object Array]"===a.call(f)}function s(f){return void 0===f}function r(f){return null!==f&&"object"==typeof f}function o(f){return"[object Function]"===a.call(f)}function d(f,e){if(null!=f)if("object"!=typeof f&&(f=[f]),i(f))for(var t=0,n=f.length;t<n;t++)e.call(null,f[t],t,f);else for(var a in f)Object.prototype.hasOwnProperty.call(f,a)&&e.call(null,f[a],a,f)}f.exports={isArray:i,isArrayBuffer:function(f){return"[object ArrayBuffer]"===a.call(f)},isBuffer:function(f){return null!==f&&!s(f)&&null!==f.constructor&&!s(f.constructor)&&"function"==typeof f.constructor.isBuffer&&f.constructor.isBuffer(f)},isFormData:function(f){return"undefined"!=typeof FormData&&f instanceof FormData},isArrayBufferView:function(f){return"undefined"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(f):f&&f.buffer&&f.buffer instanceof ArrayBuffer},isString:function(f){return"string"==typeof f},isNumber:function(f){return"number"==typeof f},isObject:r,isUndefined:s,isDate:function(f){return"[object Date]"===a.call(f)},isFile:function(f){return"[object File]"===a.call(f)},isBlob:function(f){return"[object Blob]"===a.call(f)},isFunction:o,isStream:function(f){return r(f)&&o(f.pipe)},isURLSearchParams:function(f){return"undefined"!=typeof URLSearchParams&&f instanceof URLSearchParams},isStandardBrowserEnv:function(){return("undefined"==typeof navigator||"ReactNative"!==navigator.product&&"NativeScript"!==navigator.product&&"NS"!==navigator.product)&&("undefined"!=typeof window&&"undefined"!=typeof document)},forEach:d,merge:function f(){var e={};function t(t,n){"object"==typeof e[n]&&"object"==typeof t?e[n]=f(e[n],t):e[n]=t}for(var n=0,a=arguments.length;n<a;n++)d(arguments[n],t);return e},deepMerge:function f(){var e={};function t(t,n){"object"==typeof e[n]&&"object"==typeof t?e[n]=f(e[n],t):e[n]="object"==typeof t?f({},t):t}for(var n=0,a=arguments.length;n<a;n++)d(arguments[n],t);return e},extend:function(f,e,t){return d(e,(function(e,a){f[a]=t&&"function"==typeof e?n(e,t):e})),f},trim:function(f){return f.replace(/^\s*/,"").replace(/\s*$/,"")}}},function(f,e,t){const n=t(5);f.exports=(f,e,t)=>new n(f,t).compare(new n(e,t))},function(f){f.exports=JSON.parse('[{"inputs":[],"name":"connectorID","outputs":[{"internalType":"uint256","name":"model","type":"uint256"},{"internalType":"uint256","name":"id","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amt","type":"uint256"},{"internalType":"uint256","name":"unitAmt","type":"uint256"},{"internalType":"uint256","name":"getId","type":"uint256"},{"internalType":"uint256","name":"setId","type":"uint256"}],"name":"deposit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"buyAddr","type":"address"},{"internalType":"address","name":"sellAddr","type":"address"},{"internalType":"uint256","name":"sellAmt","type":"uint256"},{"internalType":"uint256","name":"unitAmt","type":"uint256"},{"internalType":"uint256","name":"getId","type":"uint256"},{"internalType":"uint256","name":"setId","type":"uint256"}],"name":"sell","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amt","type":"uint256"},{"internalType":"uint256","name":"unitAmt","type":"uint256"},{"internalType":"uint256","name":"getId","type":"uint256"},{"internalType":"uint256","name":"setId","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"payable","type":"function"}]')},function(f,e,t){(function(e){const t="object"==typeof e&&e.env&&e.env.NODE_DEBUG&&/\bsemver\b/i.test(e.env.NODE_DEBUG)?(...f)=>console.error("SEMVER",...f):()=>{};f.exports=t}).call(this,t(12))},function(f,e,t){const{MAX_SAFE_COMPONENT_LENGTH:n}=t(11),a=t(3),i=(e=f.exports={}).re=[],s=e.src=[],r=e.t={};let o=0;const d=(f,e,t)=>{const n=o++;a(n,e),r[f]=n,s[n]=e,i[n]=new RegExp(e,t?"g":void 0)};d("NUMERICIDENTIFIER","0|[1-9]\\d*"),d("NUMERICIDENTIFIERLOOSE","[0-9]+"),d("NONNUMERICIDENTIFIER","\\d*[a-zA-Z-][a-zA-Z0-9-]*"),d("MAINVERSION",`(${s[r.NUMERICIDENTIFIER]})\\.`+`(${s[r.NUMERICIDENTIFIER]})\\.`+`(${s[r.NUMERICIDENTIFIER]})`),d("MAINVERSIONLOOSE",`(${s[r.NUMERICIDENTIFIERLOOSE]})\\.`+`(${s[r.NUMERICIDENTIFIERLOOSE]})\\.`+`(${s[r.NUMERICIDENTIFIERLOOSE]})`),d("PRERELEASEIDENTIFIER",`(?:${s[r.NUMERICIDENTIFIER]}|${s[r.NONNUMERICIDENTIFIER]})`),d("PRERELEASEIDENTIFIERLOOSE",`(?:${s[r.NUMERICIDENTIFIERLOOSE]}|${s[r.NONNUMERICIDENTIFIER]})`),d("PRERELEASE",`(?:-(${s[r.PRERELEASEIDENTIFIER]}(?:\\.${s[r.PRERELEASEIDENTIFIER]})*))`),d("PRERELEASELOOSE",`(?:-?(${s[r.PRERELEASEIDENTIFIERLOOSE]}(?:\\.${s[r.PRERELEASEIDENTIFIERLOOSE]})*))`),d("BUILDIDENTIFIER","[0-9A-Za-z-]+"),d("BUILD",`(?:\\+(${s[r.BUILDIDENTIFIER]}(?:\\.${s[r.BUILDIDENTIFIER]})*))`),d("FULLPLAIN",`v?${s[r.MAINVERSION]}${s[r.PRERELEASE]}?${s[r.BUILD]}?`),d("FULL",`^${s[r.FULLPLAIN]}$`),d("LOOSEPLAIN",`[v=\\s]*${s[r.MAINVERSIONLOOSE]}${s[r.PRERELEASELOOSE]}?${s[r.BUILD]}?`),d("LOOSE",`^${s[r.LOOSEPLAIN]}$`),d("GTLT","((?:<|>)?=?)"),d("XRANGEIDENTIFIERLOOSE",`${s[r.NUMERICIDENTIFIERLOOSE]}|x|X|\\*`),d("XRANGEIDENTIFIER",`${s[r.NUMERICIDENTIFIER]}|x|X|\\*`),d("XRANGEPLAIN",`[v=\\s]*(${s[r.XRANGEIDENTIFIER]})`+`(?:\\.(${s[r.XRANGEIDENTIFIER]})`+`(?:\\.(${s[r.XRANGEIDENTIFIER]})`+`(?:${s[r.PRERELEASE]})?${s[r.BUILD]}?`+")?)?"),d("XRANGEPLAINLOOSE",`[v=\\s]*(${s[r.XRANGEIDENTIFIERLOOSE]})`+`(?:\\.(${s[r.XRANGEIDENTIFIERLOOSE]})`+`(?:\\.(${s[r.XRANGEIDENTIFIERLOOSE]})`+`(?:${s[r.PRERELEASELOOSE]})?${s[r.BUILD]}?`+")?)?"),d("XRANGE",`^${s[r.GTLT]}\\s*${s[r.XRANGEPLAIN]}$`),d("XRANGELOOSE",`^${s[r.GTLT]}\\s*${s[r.XRANGEPLAINLOOSE]}$`),d("COERCE",`(^|[^\\d])(\\d{1,${n}})`+`(?:\\.(\\d{1,${n}}))?`+`(?:\\.(\\d{1,${n}}))?`+"(?:$|[^\\d])"),d("COERCERTL",s[r.COERCE],!0),d("LONETILDE","(?:~>?)"),d("TILDETRIM",`(\\s*)${s[r.LONETILDE]}\\s+`,!0),e.tildeTrimReplace="$1~",d("TILDE",`^${s[r.LONETILDE]}${s[r.XRANGEPLAIN]}$`),d("TILDELOOSE",`^${s[r.LONETILDE]}${s[r.XRANGEPLAINLOOSE]}$`),d("LONECARET","(?:\\^)"),d("CARETTRIM",`(\\s*)${s[r.LONECARET]}\\s+`,!0),e.caretTrimReplace="$1^",d("CARET",`^${s[r.LONECARET]}${s[r.XRANGEPLAIN]}$`),d("CARETLOOSE",`^${s[r.LONECARET]}${s[r.XRANGEPLAINLOOSE]}$`),d("COMPARATORLOOSE",`^${s[r.GTLT]}\\s*(${s[r.LOOSEPLAIN]})$|^$`),d("COMPARATOR",`^${s[r.GTLT]}\\s*(${s[r.FULLPLAIN]})$|^$`),d("COMPARATORTRIM",`(\\s*)${s[r.GTLT]}\\s*(${s[r.LOOSEPLAIN]}|${s[r.XRANGEPLAIN]})`,!0),e.comparatorTrimReplace="$1$2$3",d("HYPHENRANGE",`^\\s*(${s[r.XRANGEPLAIN]})`+"\\s+-\\s+"+`(${s[r.XRANGEPLAIN]})`+"\\s*$"),d("HYPHENRANGELOOSE",`^\\s*(${s[r.XRANGEPLAINLOOSE]})`+"\\s+-\\s+"+`(${s[r.XRANGEPLAINLOOSE]})`+"\\s*$"),d("STAR","(<|>)?=?\\s*\\*"),d("GTE0","^\\s*>=\\s*0.0.0\\s*$"),d("GTE0PRE","^\\s*>=\\s*0.0.0-0\\s*$")},function(f,e,t){const n=t(3),{MAX_LENGTH:a,MAX_SAFE_INTEGER:i}=t(11),{re:s,t:r}=t(4),{compareIdentifiers:o}=t(105);class d{constructor(f,e){if(e&&"object"==typeof e||(e={loose:!!e,includePrerelease:!1}),f instanceof d){if(f.loose===!!e.loose&&f.includePrerelease===!!e.includePrerelease)return f;f=f.version}else if("string"!=typeof f)throw new TypeError(`Invalid Version: ${f}`);if(f.length>a)throw new TypeError(`version is longer than ${a} characters`);n("SemVer",f,e),this.options=e,this.loose=!!e.loose,this.includePrerelease=!!e.includePrerelease;const t=f.trim().match(e.loose?s[r.LOOSE]:s[r.FULL]);if(!t)throw new TypeError(`Invalid Version: ${f}`);if(this.raw=f,this.major=+t[1],this.minor=+t[2],this.patch=+t[3],this.major>i||this.major<0)throw new TypeError("Invalid major version");if(this.minor>i||this.minor<0)throw new TypeError("Invalid minor version");if(this.patch>i||this.patch<0)throw new TypeError("Invalid patch version");t[4]?this.prerelease=t[4].split(".").map(f=>{if(/^[0-9]+$/.test(f)){const e=+f;if(e>=0&&e<i)return e}return f}):this.prerelease=[],this.build=t[5]?t[5].split("."):[],this.format()}format(){return this.version=`${this.major}.${this.minor}.${this.patch}`,this.prerelease.length&&(this.version+=`-${this.prerelease.join(".")}`),this.version}toString(){return this.version}compare(f){if(n("SemVer.compare",this.version,this.options,f),!(f instanceof d)){if("string"==typeof f&&f===this.version)return 0;f=new d(f,this.options)}return f.version===this.version?0:this.compareMain(f)||this.comparePre(f)}compareMain(f){return f instanceof d||(f=new d(f,this.options)),o(this.major,f.major)||o(this.minor,f.minor)||o(this.patch,f.patch)}comparePre(f){if(f instanceof d||(f=new d(f,this.options)),this.prerelease.length&&!f.prerelease.length)return-1;if(!this.prerelease.length&&f.prerelease.length)return 1;if(!this.prerelease.length&&!f.prerelease.length)return 0;let e=0;do{const t=this.prerelease[e],a=f.prerelease[e];if(n("prerelease compare",e,t,a),void 0===t&&void 0===a)return 0;if(void 0===a)return 1;if(void 0===t)return-1;if(t!==a)return o(t,a)}while(++e)}compareBuild(f){f instanceof d||(f=new d(f,this.options));let e=0;do{const t=this.build[e],a=f.build[e];if(n("prerelease compare",e,t,a),void 0===t&&void 0===a)return 0;if(void 0===a)return 1;if(void 0===t)return-1;if(t!==a)return o(t,a)}while(++e)}inc(f,e){switch(f){case"premajor":this.prerelease.length=0,this.patch=0,this.minor=0,this.major++,this.inc("pre",e);break;case"preminor":this.prerelease.length=0,this.patch=0,this.minor++,this.inc("pre",e);break;case"prepatch":this.prerelease.length=0,this.inc("patch",e),this.inc("pre",e);break;case"prerelease":0===this.prerelease.length&&this.inc("patch",e),this.inc("pre",e);break;case"major":0===this.minor&&0===this.patch&&0!==this.prerelease.length||this.major++,this.minor=0,this.patch=0,this.prerelease=[];break;case"minor":0===this.patch&&0!==this.prerelease.length||this.minor++,this.patch=0,this.prerelease=[];break;case"patch":0===this.prerelease.length&&this.patch++,this.prerelease=[];break;case"pre":if(0===this.prerelease.length)this.prerelease=[0];else{let f=this.prerelease.length;for(;--f>=0;)"number"==typeof this.prerelease[f]&&(this.prerelease[f]++,f=-2);-1===f&&this.prerelease.push(0)}e&&(this.prerelease[0]===e?isNaN(this.prerelease[1])&&(this.prerelease=[e,0]):this.prerelease=[e,0]);break;default:throw new Error(`invalid increment argument: ${f}`)}return this.format(),this.raw=this.version,this}}f.exports=d},function(f){f.exports=JSON.parse('[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_msgSender","type":"address"},{"indexed":true,"internalType":"address","name":"_authority","type":"address"}],"name":"LogAddAuth","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_msgSender","type":"address"},{"indexed":true,"internalType":"address","name":"_authority","type":"address"}],"name":"LogRemoveAuth","type":"event"},{"inputs":[{"internalType":"address","name":"authority","type":"address"}],"name":"add","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"connectorID","outputs":[{"internalType":"uint256","name":"_type","type":"uint256"},{"internalType":"uint256","name":"_id","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"authority","type":"address"}],"name":"remove","outputs":[],"stateMutability":"payable","type":"function"}]')},function(f){f.exports=JSON.parse('[{"inputs":[{"internalType":"address","name":"buyAddr","type":"address"},{"internalType":"address","name":"sellAddr","type":"address"},{"internalType":"uint256","name":"sellAmt","type":"uint256"},{"internalType":"uint256","name":"slippage","type":"uint256"}],"name":"getBuyAmount","outputs":[{"internalType":"uint256","name":"buyAmt","type":"uint256"},{"internalType":"uint256","name":"unitAmt","type":"uint256"},{"internalType":"uint256","name":"virtualPrice","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"depositAmt","type":"uint256"},{"internalType":"uint256","name":"slippage","type":"uint256"}],"name":"getDepositAmount","outputs":[{"internalType":"uint256","name":"curveAmt","type":"uint256"},{"internalType":"uint256","name":"unitAmt","type":"uint256"},{"internalType":"uint256","name":"virtualPrice","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getPosition","outputs":[{"internalType":"uint256","name":"userBal","type":"uint256"},{"internalType":"uint256","name":"totalSupply","type":"uint256"},{"internalType":"uint256","name":"virtualPrice","type":"uint256"},{"internalType":"uint256","name":"userShare","type":"uint256"},{"internalType":"uint256","name":"poolDaiBal","type":"uint256"},{"internalType":"uint256","name":"poolUsdcBal","type":"uint256"},{"internalType":"uint256","name":"poolUsdtBal","type":"uint256"},{"internalType":"uint256","name":"poolSusdBal","type":"uint256"},{"internalType":"uint256","name":"stakedBal","type":"uint256"},{"internalType":"uint256","name":"rewardsEarned","type":"uint256"},{"internalType":"uint256","name":"snxBal","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getStakingPosition","outputs":[{"internalType":"uint256","name":"stakedBal","type":"uint256"},{"internalType":"uint256","name":"rewardsEarned","type":"uint256"},{"internalType":"uint256","name":"snxBal","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"withdrawAmt","type":"uint256"},{"internalType":"uint256","name":"slippage","type":"uint256"}],"name":"getWithdrawCurveAmount","outputs":[{"internalType":"uint256","name":"curveAmt","type":"uint256"},{"internalType":"uint256","name":"unitAmt","type":"uint256"},{"internalType":"uint256","name":"virtualPrice","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"curveAmt","type":"uint256"},{"internalType":"uint256","name":"slippage","type":"uint256"}],"name":"getWithdrawTokenAmount","outputs":[{"internalType":"uint256","name":"tokenAmt","type":"uint256"},{"internalType":"uint256","name":"unitAmt","type":"uint256"},{"internalType":"uint256","name":"virtualPrice","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}]')},function(f){f.exports=JSON.parse('{"eth":{"type":"token","symbol":"ETH","name":"Ethereum","address":"0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee","decimals":18},"dai":{"type":"token","symbol":"DAI","name":"DAI Stable","address":"0x6B175474E89094C44Da98b954EedeAC495271d0F","decimals":18},"usdc":{"type":"token","symbol":"USDC","name":"USD Coin","address":"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48","decimals":6},"usdt":{"type":"token","symbol":"USDT","name":"Tether USD Coin","address":"0xdAC17F958D2ee523a2206206994597C13D831ec7","decimals":6},"mkr":{"type":"token","symbol":"MKR","name":"MakerDAO","address":"0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2","decimals":18},"comp":{"type":"token","symbol":"COMP","name":"Compound","address":"0xc00e94Cb662C3520282E6f5717214004A7f26888","decimals":18},"zrx":{"type":"token","symbol":"ZRX","name":"0x Protocol","address":"0xe41d2489571d322189246dafa5ebde1f4699f498","decimals":18},"rep":{"type":"token","symbol":"REP","name":"Augur","address":"0x1985365e9f78359a9b6ad760e32412f4a445e862","decimals":18},"tusd":{"type":"token","symbol":"TUSD","name":"TrueUSD","address":"0x0000000000085d4780B73119b644AE5ecd22b376","decimals":18},"pax":{"type":"token","symbol":"PAX","name":"Paxos Standard Coin","address":"0x8E870D67F660D95d5be530380D0eC0bd388289E1","decimals":18},"bat":{"type":"token","symbol":"BAT","name":"Basic Attention","address":"0x0d8775f648430679a709e98d2b0cb6250d2887ef","decimals":18},"knc":{"type":"token","symbol":"KNC","name":"Kyber Network","address":"0xdd974d5c2e2928dea5f71b9825b8b646686bd200","decimals":18},"wbtc":{"type":"token","symbol":"WBTC","name":"Wrapped BTC","address":"0x2260fac5e5542a773aa44fbcfedf7c193bc2c599","decimals":8},"susd":{"type":"token","symbol":"SUSD","name":"Synthetix USD","address":"0x57ab1ec28d129707052df4df418d58a2d46d5f51","decimals":18},"sbtc":{"type":"token","symbol":"SBTC","name":"Synthetix BTC","address":"0xfE18be6b3Bd88A2D2A7f928d00292E7a9963CfC6","decimals":18},"ren":{"type":"token","symbol":"REN","name":"Republic Token","address":"0x408e41876cccdc0f92210600ef50372656052a38","decimals":18},"renbtc":{"type":"token","symbol":"renBTC","name":"Ren BTC","address":"0xEB4C2781e4ebA804CE9a9803C67d0893436bB27D","decimals":8},"busd":{"type":"token","symbol":"BUSD","name":"Binance USD","address":"0x4Fabb145d64652a948d72533023f6E7A623C7C53","decimals":18},"lend":{"type":"token","symbol":"LEND","name":"ETH LEND","address":"0x80fB784B7eD66730e8b1DBd9820aFD29931aab03","decimals":18},"aave":{"type":"token","symbol":"AAVE","name":"AAVE Token","address":"0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9","decimals":18},"link":{"type":"token","symbol":"LINK","name":"ChainLink Token","address":"0x514910771AF9Ca656af840dff83E8264EcF986CA","decimals":18},"mana":{"type":"token","symbol":"MANA","name":"Decentraland","address":"0x0F5D2fB29fb7d3CFeE444a200298f468908cC942","decimals":18},"snx":{"type":"token","symbol":"SNX","name":"Synthetix Network Token","address":"0xC011a73ee8576Fb46F5E1c5751cA3B9Fe0af2a6F","decimals":18},"uni":{"type":"token","symbol":"UNI","name":"Uniswap Token","address":"0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984","decimals":18},"yfi":{"type":"token","symbol":"YFI","name":"YEARN","address":"0x0bc529c00C6401aEF6D220BE8C6Ea1667F6Ad93e","decimals":18},"chi":{"type":"token","symbol":"CHI","name":"CHI Gas Token","address":"0x0000000000004946c0e9F43F4Dee607b0eF1fA1c","decimals":0},"lrc":{"type":"token","symbol":"LRC","name":"Loopring Coin V2","address":"0xBBbbCA6A901c926F240b89EacB641d8Aec7AEafD","decimals":18},"enj":{"type":"token","symbol":"ENJ","name":"Enjin Coin","address":"0xf629cbd94d3791c9250152bd8dfbdf380e2a3b9c","decimals":18},"ceth":{"type":"ctoken","symbol":"CETH","name":"Compound ETH","address":"0x4ddc2d193948926d02f9b1fe9e1daa0718270ed5","decimals":8,"factor":0.75,"root":"eth"},"cdai":{"type":"ctoken","symbol":"CDAI","name":"Compound DAI","address":"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643","decimals":8,"factor":0.75,"root":"dai"},"cusdc":{"type":"ctoken","symbol":"CUSDC","name":"Compound USDC","address":"0x39aa39c021dfbae8fac545936693ac917d5e7563","decimals":8,"factor":0.75,"root":"usdc"},"cusdt":{"type":"ctoken","symbol":"CUSDT","name":"Compound USDT","address":"0xf650C3d88D12dB855b8bf7D11Be6C55A4e07dCC9","decimals":8,"factor":0,"root":"usdt"},"ccomp":{"type":"ctoken","symbol":"CCOMP","name":"Compound COMP","address":"0x70e36f6BF80a52b3B46b3aF8e106CC0ed743E8e4","decimals":8,"factor":0.6,"root":"comp"},"czrx":{"type":"ctoken","symbol":"CZRX","name":"Compound ZRX","address":"0xb3319f5d18bc0d84dd1b4825dcde5d5f7266d407","decimals":8,"factor":0.6,"root":"zrx"},"crep":{"type":"ctoken","symbol":"CREP","name":"Compound REP","address":"0x158079ee67fce2f58472a96584a73c7ab9ac95c1","decimals":8,"factor":0.4,"root":"rep"},"cbat":{"type":"ctoken","symbol":"CBAT","name":"Compound BAT","address":"0x6c8c6b02e7b2be14d4fa6022dfd6d75921d90e4e","decimals":8,"factor":0.6,"root":"bat"},"cuni":{"type":"ctoken","symbol":"CUNI","name":"Compound UNI","address":"0x35A18000230DA775CAc24873d00Ff85BccdeD550","decimals":8,"factor":0.6,"root":"uni"},"cwbtc":{"type":"ctoken","symbol":"CWBTC","name":"Compound WBTC","address":"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4","decimals":8,"factor":0.6,"root":"wbtc"},"curvesusd":{"type":"curvetoken","symbol":"CSUSD","name":"Curve SUSD","address":"0xC25a3A3b969415c80451098fa907EC722572917F","decimals":18},"curvesbtc":{"type":"curvetoken","symbol":"CSBTC","name":"Curve SBTC","address":"0x075b1bb99792c9E1041bA13afEf80C91a1e70fB3","decimals":18},"curvey":{"type":"curvetoken","symbol":"CY","name":"Curve Y","address":"0xdF5e0e81Dff6FAF3A7e52BA697820c5e32D806A8","decimals":18},"crv":{"type":"token","symbol":"CRV","name":"Curve token","address":"0xD533a949740bb3306d119CC777fa900bA034cd52","decimals":18},"swusd":{"type":"swervetoken","symbol":"swUSD","name":"Swerve token","address":"0x77C6E4a580c0dCE4E5c7a17d0bc077188a83A059","decimals":18},"aeth":{"type":"atoken","symbol":"AETH","name":"Aave ETH","address":"0x3a3A65aAb0dd2A17E3F1947bA16138cd37d08c04","decimals":18,"factor":0.75,"root":"eth"},"adai":{"type":"atoken","symbol":"ADAI","name":"Aave DAI","address":"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d","decimals":18,"factor":0.75,"root":"dai"},"ausdc":{"type":"atoken","symbol":"AUSDC","name":"Aave USDC","address":"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E","decimals":6,"factor":0.75,"root":"usdc"},"ausdt":{"type":"atoken","symbol":"AUSDT","name":"Aave USDT","address":"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8","decimals":6,"factor":0,"root":"usdt"},"aaave":{"type":"atoken","symbol":"AAAVE","name":"aAAVE Token","address":"0xba3D9687Cf50fE253cd2e1cFeEdE1d6787344Ed5","decimals":18,"factor":0.5,"root":"aave"},"asusd":{"type":"atoken","symbol":"ASUSD","name":"Aave SUSD","address":"0x625aE63000f46200499120B906716420bd059240","decimals":18,"factor":0,"root":"susd"},"atusd":{"type":"atoken","symbol":"ATUSD","name":"Aave TUSD","address":"0x4DA9b813057D04BAef4e5800E36083717b4a0341","decimals":18,"factor":0.75,"root":"tusd"},"abusd":{"type":"atoken","symbol":"ABUSD","name":"Aave BUSD","address":"0x6Ee0f7BB50a54AB5253dA0667B0Dc2ee526C30a8","decimals":18,"factor":0,"root":"busd"},"abat":{"type":"atoken","symbol":"ABAT","name":"Aave BAT","address":"0xE1BA0FB44CCb0D11b80F92f4f8Ed94CA3fF51D00","decimals":18,"factor":0.6,"root":"bat"},"aknc":{"type":"atoken","symbol":"AKNC","name":"Aave KNC","address":"0x9D91BE44C06d373a8a226E1f3b146956083803eB","decimals":18,"factor":0.6,"root":"knc"},"alend":{"type":"atoken","symbol":"ALEND","name":"Aave LEND","address":"0x7D2D3688Df45Ce7C552E19c27e007673da9204B8","decimals":18,"factor":0.4,"root":"lend"},"alink":{"type":"atoken","symbol":"ALINK","name":"Aave LINK","address":"0xA64BD6C70Cb9051F6A9ba1F163Fdc07E0DfB5F84","decimals":18,"factor":0.65,"root":"link"},"amana":{"type":"atoken","symbol":"AMANA","name":"Aave MANA","address":"0x6FCE4A401B6B80ACe52baAefE4421Bd188e76F6f","decimals":18,"factor":0.6,"root":"mana"},"amkr":{"type":"atoken","symbol":"AMKR","name":"Aave MKR","address":"0x7deB5e830be29F91E298ba5FF1356BB7f8146998","decimals":18,"factor":0.35,"root":"mkr"},"aren":{"type":"atoken","symbol":"AREN","name":"Aave REN","address":"0x69948cc03f478b95283f7dbf1ce764d0fc7ec54c","decimals":18,"factor":0.5,"root":"ren"},"asnx":{"type":"atoken","symbol":"ASNX","name":"Aave SNX","address":"0x328C4c80BC7aCa0834Db37e6600A6c49E12Da4DE","decimals":18,"factor":0,"root":"snx"},"awbtc":{"type":"atoken","symbol":"AWBTC","name":"Aave WBTC","address":"0xFC4B8ED459e00e5400be803A9BB3954234FD50e3","decimals":8,"factor":0.6,"root":"wbtc"},"ayfi":{"type":"atoken","symbol":"AYFI","name":"Aave YFI","address":"0x12e51E77DAAA58aA0E9247db7510Ea4B46F9bEAd","decimals":18,"factor":0.4,"root":"yfi"},"auni":{"type":"atoken","symbol":"AUNI","name":"Aave UNI","address":"0xB124541127A0A657f056D9Dd06188c4F1b0e5aab","decimals":18,"factor":0.4,"root":"uni"},"azrx":{"type":"atoken","symbol":"AZRX","name":"Aave ZRX","address":"0x6Fb0855c404E09c47C3fBCA25f08d4E41f9F062f","decimals":18,"factor":0.6,"root":"zrx"},"arep":{"type":"atoken","symbol":"AREP","name":"Aave REP","address":"0x71010A9D003445aC60C4e6A7017c1E89A477B438","decimals":18,"factor":0.35,"root":"rep"},"aenj":{"type":"atoken","symbol":"AENJ","name":"Aave ENJ","address":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","decimals":18,"factor":0.55,"root":"enj"},"snx_ren":{"type":"bptoken","symbol":"SNX_REN","name":"Balancer SNX_REN","address":"0x330416c863f2acce7af9c9314b422d24c672534a","decimals":18}}')},function(f,e){f.exports=class{constructor(f){this.ABI=f.ABI,this.address=f.address,this.tokens=f.tokens,this.web3=f.web3,this.instance=f.instance,this.dsa=f}async getBalances(f,e){var t=f||this.instance.address,n=e||"token";const a=this.tokens.getTokenByType(n);var i=this.tokens.getTokensField("address",a),s={protocol:"erc20",method:"getBalances",args:[t,Object.values(i)]};return new Promise((f,e)=>this.dsa.read(s).then(e=>{var t={};Object.keys(a).forEach((f,n)=>{t[f]=e[n]/10**a[f].decimals}),f(t)}).catch(f=>{e(f)}))}async getAllowances(f,e,t){var n=f||this.instance.address;if(!e)throw new Error("`spender` not defined.");var a=t||"token";const i=this.tokens.getTokenByType(a);var s=this.tokens.getTokensField("address",i),r={protocol:"erc20",method:"getAllowances",args:[n,e,Object.values(s)]};return new Promise((f,e)=>this.dsa.read(r).then(e=>{var t={};Object.keys(i).forEach((f,n)=>{t[f]=e[n]/10**i[f].decimals}),f(t)}).catch(f=>{e(f)}))}}},function(f,e,t){class n{constructor(f,e){if(e&&"object"==typeof e||(e={loose:!!e,includePrerelease:!1}),f instanceof n)return f.loose===!!e.loose&&f.includePrerelease===!!e.includePrerelease?f:new n(f.raw,e);if(f instanceof a)return this.raw=f.value,this.set=[[f]],this.format(),this;if(this.options=e,this.loose=!!e.loose,this.includePrerelease=!!e.includePrerelease,this.raw=f,this.set=f.split(/\s*\|\|\s*/).map(f=>this.parseRange(f.trim())).filter(f=>f.length),!this.set.length)throw new TypeError(`Invalid SemVer Range: ${f}`);this.format()}format(){return this.range=this.set.map(f=>f.join(" ").trim()).join("||").trim(),this.range}toString(){return this.range}parseRange(f){const e=this.options.loose;f=f.trim();const t=e?r[o.HYPHENRANGELOOSE]:r[o.HYPHENRANGE];f=f.replace(t,k(this.options.includePrerelease)),i("hyphen replace",f),f=f.replace(r[o.COMPARATORTRIM],d),i("comparator trim",f,r[o.COMPARATORTRIM]),f=(f=(f=f.replace(r[o.TILDETRIM],u)).replace(r[o.CARETTRIM],p)).split(/\s+/).join(" ");const n=e?r[o.COMPARATORLOOSE]:r[o.COMPARATOR];return f.split(" ").map(f=>y(f,this.options)).join(" ").split(/\s+/).map(f=>A(f,this.options)).filter(this.options.loose?f=>!!f.match(n):()=>!0).map(f=>new a(f,this.options))}intersects(f,e){if(!(f instanceof n))throw new TypeError("a Range is required");return this.set.some(t=>l(t,e)&&f.set.some(f=>l(f,e)&&t.every(t=>f.every(f=>t.intersects(f,e)))))}test(f){if(!f)return!1;if("string"==typeof f)try{f=new s(f,this.options)}catch(f){return!1}for(let e=0;e<this.set.length;e++)if(x(this.set[e],f,this.options))return!0;return!1}}f.exports=n;const a=t(102),i=t(3),s=t(5),{re:r,t:o,comparatorTrimReplace:d,tildeTrimReplace:u,caretTrimReplace:p}=t(4),l=(f,e)=>{let t=!0;const n=f.slice();let a=n.pop();for(;t&&n.length;)t=n.every(f=>a.intersects(f,e)),a=n.pop();return t},y=(f,e)=>(i("comp",f,e),f=h(f,e),i("caret",f),f=m(f,e),i("tildes",f),f=g(f,e),i("xrange",f),f=v(f,e),i("stars",f),f),c=f=>!f||"x"===f.toLowerCase()||"*"===f,m=(f,e)=>f.trim().split(/\s+/).map(f=>b(f,e)).join(" "),b=(f,e)=>{const t=e.loose?r[o.TILDELOOSE]:r[o.TILDE];return f.replace(t,(e,t,n,a,s)=>{let r;return i("tilde",f,e,t,n,a,s),c(t)?r="":c(n)?r=`>=${t}.0.0 <${+t+1}.0.0-0`:c(a)?r=`>=${t}.${n}.0 <${t}.${+n+1}.0-0`:s?(i("replaceTilde pr",s),r=`>=${t}.${n}.${a}-${s} <${t}.${+n+1}.0-0`):r=`>=${t}.${n}.${a} <${t}.${+n+1}.0-0`,i("tilde return",r),r})},h=(f,e)=>f.trim().split(/\s+/).map(f=>T(f,e)).join(" "),T=(f,e)=>{i("caret",f,e);const t=e.loose?r[o.CARETLOOSE]:r[o.CARET],n=e.includePrerelease?"-0":"";return f.replace(t,(e,t,a,s,r)=>{let o;return i("caret",f,e,t,a,s,r),c(t)?o="":c(a)?o=`>=${t}.0.0${n} <${+t+1}.0.0-0`:c(s)?o="0"===t?`>=${t}.${a}.0${n} <${t}.${+a+1}.0-0`:`>=${t}.${a}.0${n} <${+t+1}.0.0-0`:r?(i("replaceCaret pr",r),o="0"===t?"0"===a?`>=${t}.${a}.${s}-${r} <${t}.${a}.${+s+1}-0`:`>=${t}.${a}.${s}-${r} <${t}.${+a+1}.0-0`:`>=${t}.${a}.${s}-${r} <${+t+1}.0.0-0`):(i("no pr"),o="0"===t?"0"===a?`>=${t}.${a}.${s}${n} <${t}.${a}.${+s+1}-0`:`>=${t}.${a}.${s}${n} <${t}.${+a+1}.0-0`:`>=${t}.${a}.${s} <${+t+1}.0.0-0`),i("caret return",o),o})},g=(f,e)=>(i("replaceXRanges",f,e),f.split(/\s+/).map(f=>w(f,e)).join(" ")),w=(f,e)=>{f=f.trim();const t=e.loose?r[o.XRANGELOOSE]:r[o.XRANGE];return f.replace(t,(t,n,a,s,r,o)=>{i("xRange",f,t,n,a,s,r,o);const d=c(a),u=d||c(s),p=u||c(r),l=p;return"="===n&&l&&(n=""),o=e.includePrerelease?"-0":"",d?t=">"===n||"<"===n?"<0.0.0-0":"*":n&&l?(u&&(s=0),r=0,">"===n?(n=">=",u?(a=+a+1,s=0,r=0):(s=+s+1,r=0)):"<="===n&&(n="<",u?a=+a+1:s=+s+1),"<"===n&&(o="-0"),t=`${n+a}.${s}.${r}${o}`):u?t=`>=${a}.0.0${o} <${+a+1}.0.0-0`:p&&(t=`>=${a}.${s}.0${o} <${a}.${+s+1}.0-0`),i("xRange return",t),t})},v=(f,e)=>(i("replaceStars",f,e),f.trim().replace(r[o.STAR],"")),A=(f,e)=>(i("replaceGTE0",f,e),f.trim().replace(r[e.includePrerelease?o.GTE0PRE:o.GTE0],"")),k=f=>(e,t,n,a,i,s,r,o,d,u,p,l,y)=>`${t=c(n)?"":c(a)?`>=${n}.0.0${f?"-0":""}`:c(i)?`>=${n}.${a}.0${f?"-0":""}`:s?`>=${t}`:`>=${t}${f?"-0":""}`} ${o=c(d)?"":c(u)?`<${+d+1}.0.0-0`:c(p)?`<${d}.${+u+1}.0-0`:l?`<=${d}.${u}.${p}-${l}`:f?`<${d}.${u}.${+p+1}-0`:`<=${o}`}`.trim(),x=(f,e,t)=>{for(let t=0;t<f.length;t++)if(!f[t].test(e))return!1;if(e.prerelease.length&&!t.includePrerelease){for(let t=0;t<f.length;t++)if(i(f[t].semver),f[t].semver!==a.ANY&&f[t].semver.prerelease.length>0){const n=f[t].semver;if(n.major===e.major&&n.minor===e.minor&&n.patch===e.patch)return!0}return!1}return!0}},function(f,e){const t=Number.MAX_SAFE_INTEGER||9007199254740991;f.exports={SEMVER_SPEC_VERSION:"2.0.0",MAX_LENGTH:256,MAX_SAFE_INTEGER:t,MAX_SAFE_COMPONENT_LENGTH:16}},function(f,e){var t,n,a=f.exports={};function i(){throw new Error("setTimeout has not been defined")}function s(){throw new Error("clearTimeout has not been defined")}function r(f){if(t===setTimeout)return setTimeout(f,0);if((t===i||!t)&&setTimeout)return t=setTimeout,setTimeout(f,0);try{return t(f,0)}catch(e){try{return t.call(null,f,0)}catch(e){return t.call(this,f,0)}}}!function(){try{t="function"==typeof setTimeout?setTimeout:i}catch(f){t=i}try{n="function"==typeof clearTimeout?clearTimeout:s}catch(f){n=s}}();var o,d=[],u=!1,p=-1;function l(){u&&o&&(u=!1,o.length?d=o.concat(d):p=-1,d.length&&y())}function y(){if(!u){var f=r(l);u=!0;for(var e=d.length;e;){for(o=d,d=[];++p<e;)o&&o[p].run();p=-1,e=d.length}o=null,u=!1,function(f){if(n===clearTimeout)return clearTimeout(f);if((n===s||!n)&&clearTimeout)return n=clearTimeout,clearTimeout(f);try{n(f)}catch(e){try{return n.call(null,f)}catch(e){return n.call(this,f)}}}(f)}}function c(f,e){this.fun=f,this.array=e}function m(){}a.nextTick=function(f){var e=new Array(arguments.length-1);if(arguments.length>1)for(var t=1;t<arguments.length;t++)e[t-1]=arguments[t];d.push(new c(f,e)),1!==d.length||u||r(y)},c.prototype.run=function(){this.fun.apply(null,this.array)},a.title="browser",a.browser=!0,a.env={},a.argv=[],a.version="",a.versions={},a.on=m,a.addListener=m,a.once=m,a.off=m,a.removeListener=m,a.removeAllListeners=m,a.emit=m,a.prependListener=m,a.prependOnceListener=m,a.listeners=function(f){return[]},a.binding=function(f){throw new Error("process.binding is not supported")},a.cwd=function(){return"/"},a.chdir=function(f){throw new Error("process.chdir is not supported")},a.umask=function(){return 0}},function(f,e,t){f.exports=t(112)},function(f,e,t){"use strict";f.exports=function(f,e){return function(){for(var t=new Array(arguments.length),n=0;n<t.length;n++)t[n]=arguments[n];return f.apply(e,t)}}},function(f,e,t){"use strict";var n=t(0);function a(f){return encodeURIComponent(f).replace(/%40/gi,"@").replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}f.exports=function(f,e,t){if(!e)return f;var i;if(t)i=t(e);else if(n.isURLSearchParams(e))i=e.toString();else{var s=[];n.forEach(e,(function(f,e){null!=f&&(n.isArray(f)?e+="[]":f=[f],n.forEach(f,(function(f){n.isDate(f)?f=f.toISOString():n.isObject(f)&&(f=JSON.stringify(f)),s.push(a(e)+"="+a(f))})))})),i=s.join("&")}if(i){var r=f.indexOf("#");-1!==r&&(f=f.slice(0,r)),f+=(-1===f.indexOf("?")?"?":"&")+i}return f}},function(f,e,t){"use strict";f.exports=function(f){return!(!f||!f.__CANCEL__)}},function(f,e,t){"use strict";(function(e){var n=t(0),a=t(117),i={"Content-Type":"application/x-www-form-urlencoded"};function s(f,e){!n.isUndefined(f)&&n.isUndefined(f["Content-Type"])&&(f["Content-Type"]=e)}var r,o={adapter:(("undefined"!=typeof XMLHttpRequest||void 0!==e&&"[object process]"===Object.prototype.toString.call(e))&&(r=t(18)),r),transformRequest:[function(f,e){return a(e,"Accept"),a(e,"Content-Type"),n.isFormData(f)||n.isArrayBuffer(f)||n.isBuffer(f)||n.isStream(f)||n.isFile(f)||n.isBlob(f)?f:n.isArrayBufferView(f)?f.buffer:n.isURLSearchParams(f)?(s(e,"application/x-www-form-urlencoded;charset=utf-8"),f.toString()):n.isObject(f)?(s(e,"application/json;charset=utf-8"),JSON.stringify(f)):f}],transformResponse:[function(f){if("string"==typeof f)try{f=JSON.parse(f)}catch(f){}return f}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,validateStatus:function(f){return f>=200&&f<300}};o.headers={common:{Accept:"application/json, text/plain, */*"}},n.forEach(["delete","get","head"],(function(f){o.headers[f]={}})),n.forEach(["post","put","patch"],(function(f){o.headers[f]=n.merge(i)})),f.exports=o}).call(this,t(12))},function(f,e,t){"use strict";var n=t(0),a=t(118),i=t(15),s=t(120),r=t(123),o=t(124),d=t(19);f.exports=function(f){return new Promise((function(e,u){var p=f.data,l=f.headers;n.isFormData(p)&&delete l["Content-Type"];var y=new XMLHttpRequest;if(f.auth){var c=f.auth.username||"",m=f.auth.password||"";l.Authorization="Basic "+btoa(c+":"+m)}var b=s(f.baseURL,f.url);if(y.open(f.method.toUpperCase(),i(b,f.params,f.paramsSerializer),!0),y.timeout=f.timeout,y.onreadystatechange=function(){if(y&&4===y.readyState&&(0!==y.status||y.responseURL&&0===y.responseURL.indexOf("file:"))){var t="getAllResponseHeaders"in y?r(y.getAllResponseHeaders()):null,n={data:f.responseType&&"text"!==f.responseType?y.response:y.responseText,status:y.status,statusText:y.statusText,headers:t,config:f,request:y};a(e,u,n),y=null}},y.onabort=function(){y&&(u(d("Request aborted",f,"ECONNABORTED",y)),y=null)},y.onerror=function(){u(d("Network Error",f,null,y)),y=null},y.ontimeout=function(){var e="timeout of "+f.timeout+"ms exceeded";f.timeoutErrorMessage&&(e=f.timeoutErrorMessage),u(d(e,f,"ECONNABORTED",y)),y=null},n.isStandardBrowserEnv()){var h=t(125),T=(f.withCredentials||o(b))&&f.xsrfCookieName?h.read(f.xsrfCookieName):void 0;T&&(l[f.xsrfHeaderName]=T)}if("setRequestHeader"in y&&n.forEach(l,(function(f,e){void 0===p&&"content-type"===e.toLowerCase()?delete l[e]:y.setRequestHeader(e,f)})),n.isUndefined(f.withCredentials)||(y.withCredentials=!!f.withCredentials),f.responseType)try{y.responseType=f.responseType}catch(e){if("json"!==f.responseType)throw e}"function"==typeof f.onDownloadProgress&&y.addEventListener("progress",f.onDownloadProgress),"function"==typeof f.onUploadProgress&&y.upload&&y.upload.addEventListener("progress",f.onUploadProgress),f.cancelToken&&f.cancelToken.promise.then((function(f){y&&(y.abort(),u(f),y=null)})),void 0===p&&(p=null),y.send(p)}))}},function(f,e,t){"use strict";var n=t(119);f.exports=function(f,e,t,a,i){var s=new Error(f);return n(s,e,t,a,i)}},function(f,e,t){"use strict";var n=t(0);f.exports=function(f,e){e=e||{};var t={},a=["url","method","params","data"],i=["headers","auth","proxy"],s=["baseURL","url","transformRequest","transformResponse","paramsSerializer","timeout","withCredentials","adapter","responseType","xsrfCookieName","xsrfHeaderName","onUploadProgress","onDownloadProgress","maxContentLength","validateStatus","maxRedirects","httpAgent","httpsAgent","cancelToken","socketPath"];n.forEach(a,(function(f){void 0!==e[f]&&(t[f]=e[f])})),n.forEach(i,(function(a){n.isObject(e[a])?t[a]=n.deepMerge(f[a],e[a]):void 0!==e[a]?t[a]=e[a]:n.isObject(f[a])?t[a]=n.deepMerge(f[a]):void 0!==f[a]&&(t[a]=f[a])})),n.forEach(s,(function(n){void 0!==e[n]?t[n]=e[n]:void 0!==f[n]&&(t[n]=f[n])}));var r=a.concat(i).concat(s),o=Object.keys(e).filter((function(f){return-1===r.indexOf(f)}));return n.forEach(o,(function(n){void 0!==e[n]?t[n]=e[n]:void 0!==f[n]&&(t[n]=f[n])})),t}},function(f,e,t){"use strict";function n(f){this.message=f}n.prototype.toString=function(){return"Cancel"+(this.message?": "+this.message:"")},n.prototype.__CANCEL__=!0,f.exports=n},function(f,e,t){const n=t(23),a=t(24),i=t(74),s=t(75),r=t(76),o=t(77),d=t(78),u=t(9),p=t(79),l=t(80),y=t(81),c=t(82),m=t(83),b=t(84),h=t(85),T=t(86),g=t(87),w=t(88),v=t(89),A=t(90),k=t(91),x=t(92),E=t(93),I=t(94),S=t(95),D=t(96),M=t(97),C=t(98),P=t(99),R=t(100);f.exports=class{constructor(f){if(f||(f={}),this.web3=f.web3?f.web3:f,this.mode=f.mode?f.mode.toLowerCase():"browser","node"==this.mode){if(!f.privateKey)return console.error("Private key is not defined.");this.privateKey="0x"==f.privateKey.slice(0,2)?f.privateKey:"0x"+f.privateKey}this.address=n,this.ABI=a,this.instance={id:0,address:n.genesis,version:1,config:{type:0}},this.origin=n.genesis,this.internal=new i(this),this.math=new d(this),this.tokens=new M(this),this.castUtil=new r(this),this.txnUtil=new o(this),this.erc20=new s(this),this.gnosisSafe=new R(this),this.chainlink=new C(this),this.account=new p(this),this.balances=new u(this),this.compound=new l(this),this.maker=new y(this),this.instapool=new c(this),this.oasis=new b(this),this.kyber=new h(this),this.curve=new T(this),this.curve_susd=new T(this),this.curve_sbtc=new g(this),this.curve_y=new w(this),this.curve_claim=new v(this),this.curve_gauge=new A(this),this.oneInch=new x(this),this.dydx=new E(this),this.aave=new S(this),this.uniswap=new D(this),this.dydx_flash=new I(this),this.swerve=new k(this),this.curve_three=new P(this),this.instapool_v2=new m(this),this.sendTxn=this.txnUtil.send,this.transfer=this.erc20.transfer,this.castEncoded=this.castUtil.encoded,this.encodeCastABI=this.castUtil.encodeABI,this.count=this.account.count,this.getAccounts=this.account.getAccounts,this.getAuthById=this.account.getAuthById,this.getAuthByAddress=this.account.getAuthByAddress,this.maxValue="115792089237316195423570985008687907853269984665640564039457584007913129639935"}async estimateCastGas(f){let e=this.instance.config.type;return new Promise(async(t,n)=>{0==e?await this.castUtil.estimateGas(f).then(f=>t(f)).catch(f=>n(f)):1==e&&(f.gnosisSafe=this.instance.config.gnosisSafe,await this.gnosisSafe.estimateGnosisSafeGas(f).then(f=>t(f)).catch(f=>n(f)))})}async setInstance(f,e){if(e&&e.gnosisSafe){let f=this.web3.utils.checkAddressChecksum(e.gnosisSafe);if(!f)throw new Error("`gnosisSafe` is not vaild");f=this.web3.utils.toChecksumAddress(e.gnosisSafe),this.instance.config={type:1,gnosisSafe:f}}else this.instance.config={type:0};let t;if("object"==typeof f){if(!f.id)throw new Error("`dsaId` is not defined.");t=f.id}else t=f;if(!isFinite(t+""))throw new Error("Invaild `dsaId`.");let n={protocol:"core",method:"getAccountIdDetails",args:[t]};return new Promise((f,e)=>this.read(n).then(e=>{this.instance.id=e[0],this.instance.address=e[1],this.instance.version=e[2],f(this.instance)}).catch(async f=>await this.account.count()<+t?e("dsaId does not exist. Run `dsa.build()` to create new DSA."):void e(f)))}async setAccount(f,e){return this.setInstance(f,e)}setOrigin(f){this.origin=f}async build(f){let e=await this.internal.getAddress();f||(f={}),f.authority||(f.authority=e),f.version||(f.version=1),f.origin||(f.origin=this.origin),f.from||(f.from=e),f.to=this.address.core.index;let t=await new this.web3.eth.Contract(this.ABI.core.index,this.address.core.index);return f.callData=t.methods.build(f.authority,f.version,f.origin).encodeABI(),new Promise(async(e,t)=>{let n=await this.internal.getTxObj(f);return this.sendTxn(n).then(f=>e(f)).catch(f=>t(f))})}async buildTxObj(f){f||(f={}),f.authority||(f.authority=_addr),f.version||(f.version=1),f.origin||(f.origin=this.origin),f.to=this.address.core.index;let e=await new this.web3.eth.Contract(this.ABI.core.index,this.address.core.index);return f.callData=e.methods.build(f.authority,f.version,f.origin).encodeABI(),await this.internal.getTxObj(f)}async cast(f){let e=await this.internal.getAddress(),t=this.internal.encodeSpells(f);f.to||(f.to=this.instance.address),f.from||(f.from=e),f.origin||(f.origin=this.origin),f.type=this.instance.config.type;let n=new this.web3.eth.Contract(this.ABI.core.account,this.instance.address);return f.callData=n.methods.cast(...t,f.origin).encodeABI(),new Promise(async(e,t)=>{let n=await this.internal.getTxObj(f);if(0==f.type)return console.log("Casting spells to DSA."),this.sendTxn(n).then(f=>{e(f)}).catch(f=>t(f));if(1!=f.type)throw new Error("`type` is not vaild");{"node"==this.node&&t("Gnosis-Safe integration is not available on `node` mode"),console.log("Casting spells to Gnosis Safe.");let f=this.instance.config.gnosisSafe;if(!f)throw new Error("`safeAddress` is not defined. Run `await dsa.setInstance(dsaId, { gnosisSafe: safeAddr })`");this.gnosisSafe.createTransaction({safeAddress:f,from:n.from,to:n.to,valueInWei:n.value,txData:n.data}).then(f=>e(f)).catch(f=>t(f))}})}async castTxObj(f){let e=this.internal.encodeSpells(f);f.to||(f.to=this.instance.address),f.origin||(f.origin=this.origin),f.type=this.instance.config.type;let t=new this.web3.eth.Contract(this.ABI.core.account,this.instance.address);return f.callData=t.methods.cast(...e,f.origin).encodeABI(),await this.internal.getTxObj(f)}Spell(){return new class{constructor(){this.data=[]}add(f){return f.connector?f.method?f.args?void this.data.push(f):console.error("args not defined."):console.error("method not defined."):console.error("connector not defined.")}}}async read(f){var e=new this.web3.eth.Contract(this.ABI.read[f.protocol],this.address.read[f.protocol]);return new Promise((t,n)=>e.methods[f.method](...f.args).call().then(f=>{t(f)}).catch(f=>{n(f)}))}}},function(f,e){f.exports={genesis:"0x0000000000000000000000000000000000000000",core:{index:"0x2971AdFa57b20E5a416aE5a708A8655A9c74f723",list:"0x4c8a1BEb8a87765788946D6B19C6C6355194AbEb",account:"0x939Daad09fC4A9B8f8A9352A485DAb2df4F4B3F8",connector:"0xD6A602C01a023B98Ecfb29Df02FBA380d3B21E0c",events:"0x2af7ea6Cb911035f3eb1ED895Cb6692C39ecbA97",instapool:"0x06cb7c24990cbe6b9f99982f975f9147c000fec6",dydx_flash:"0xf5b16af97B5CBa4Babe786238FF6016daE6bb890"},connectors:{basic:"0x6a31c5982C5Bc5533432913cf06a66b6D3333a95",auth:"0xd1aff9f2acf800c876c409100d6f39aea93fc3d9",authority:"0xd1aff9f2acf800c876c409100d6f39aea93fc3d9",compound:"0x07F81230d73a78f63F0c2A3403AD281b067d28F8",maker:"0x6c4E4D4aB22cAB08b8498a3A232D92609e8b2d62",maker_old:"0xac02030d8a8F49eD04b2f52C394D3F901A10F8A9",instapool:"0xCeF5f3c402d4fef76A038e89a4357176963e1464",oasis:"0xE554c84c030bd5e850cDbd17f6583818b8dE5b1F",kyber:"0x7043FC2E21865c091EEaE37C38E3d82BcCDF5D5C",curve:"0xC74902Ad45C8223da10EfdCfF2DeD12184e9D9b5",curve_susd:"0xC74902Ad45C8223da10EfdCfF2DeD12184e9D9b5",curve_sbtc:"0xe3bC928D9DAA89A0f08Cf77b227B7080B9a5105d",curve_y:"0x861a2250FcDBe57041289623561D5D79585DF5dc",oneInch:"0x1Ed5b56aeDA6fc45d40CBE1fe1EE4DFbE7A10c16",dydx:"0x6AF6C791c869DfA65f8A2fa042fA47D1535Bef25",aave:"0x3fd79E82CCAc22A1c1b504e8a04bec133CB3f282",migrate:"0xcb5cbc3f397e0024fac67cf6dd465e02ca91c215",compoundImport:"0xdc9f393d5f4c12f1c1049035c20d58bd624510e3",uniswap:"0x62EbfF47B2Ba3e47796efaE7C51676762dC961c0",comp:"0xB4a04F1C194bEed64FCE27843B5b3079339cdaD4",staking:"0xe5b66b785bd6b6708BB814482180C136Ddbcd687",chi:"0xb86437e80709015d05354c35e54b7c8b11a58687",curve_claim:"0xF5e14d35706971B6AaD7A67B1A8E9a1EF7870Be9",curve_gauge:"0xAf615b36Db171fD5A369A0060b9bCB88fFf0190d",gelato:"0x37A7009d424951dd5D5F155fA588D9a03C455163",dydx_flash:"0xE5a7bdd3336245142Ad3a153838ecFB490A5e044",swerve:"0x8b302dc8a97a63eb468715b8c30f7003b86e9f01",curve_three:"0x1568a9D336A7aC051DCC4bdcc4A0B09299DE5Daf",instapool_v2:"0x3150e5A805577366816A1ddc7330c6Ea17070c05",math:"0xa007f98ab41b0b4520701cb2ac75e802c460db4c"},read:{core:"0x621AD080ad3B839e7b19e040C77F05213AB71524",erc20:"0x6d9c624844e61280c19fd7ef588d79a6de893d64",compound:"0x1f22D77365d8BFE3b901C33C83C01B584F946617",maker:"0x0A7008B38E7015F8C36A49eEbc32513ECA8801E5",oasis:"0xa3d13105397F3b13Dd47cd1f90a50F95A60cdd56",kyber:"0x8240b601d9B565e2BefaA3DA82Cc984E76cB3499",curve:"0x734c90119A0012eF744e3a0ee74691b4f05A2D7e",curve_susd:"0x734c90119A0012eF744e3a0ee74691b4f05A2D7e",curve_sbtc:"0xc8ff9e290e65972a1b3fc67e1ab7451088a74752",curve_y:"0xaf122FB1C70b913AF467a9D924890f92c109bfc3",oneInch:"0x40c71a20938ff932bea18f674e73be670ea47ccf",dydx:"0xcb704D9505Fbbf61478F06741C75F34eA84Ec85C",aave:"0xe04Cd009fF68628BC663058dDAA7E5Bf7979BEaF",uniswap:"0x492e5f3f01d20513fc0d53ca0215b6499faec8a0",curve_claim:"0xc501F3c50DabB377c4afe5C0cD44BF7173b0F833",chainlink:"0xF72Ee0Cc52C119F00B19c35a4d4ee2f445573D3e",curve_gauge:"0x3Dfb98C045d4f4Be168bBE60ba2eb0A3ccf8fBC3",swerve:"0x51432D11431cE6280FF8CFC61C280b3B27E67B28",curve_three:"0x65c20364071C5dd21081fd1e0D9DbC72C8a87CC0",instapool_v2:"0xa004a5afba04b74037e9e52ba1f7eb02b5e61509"}}},function(f,e,t){f.exports={core:{index:t(25),list:t(26),account:t(27),connector:t(28),events:t(29)},connectors:{basic:t(30),auth:t(6),authority:t(6),compound:t(31),maker:t(32),maker_old:t(33),instapool:t(34),oasis:t(35),kyber:t(36),curve:t(2),curve_susd:t(2),curve_sbtc:t(2),curve_y:t(2),oneInch:t(37),dydx:t(38),aave:t(39),migrate:t(40),compoundImport:t(41),uniswap:t(42),comp:t(43),staking:t(44),chi:t(45),curve_claim:t(46),curve_gauge:t(47),gelato:t(48),dydx_flash:t(49),swerve:t(50),curve_three:t(51),instapool_v2:t(52),math:t(53)},read:{core:t(54),compound:t(55),maker:t(56),erc20:t(57),oasis:t(58),kyber:t(59),curve:t(7),curve_susd:t(7),curve_sbtc:t(60),curve_y:t(61),oneInch:t(62),dydx:t(63),aave:t(64),uniswap:t(65),curve_claim:t(66),chainlink:t(67),curve_gauge:t(68),swerve:t(69),curve_three:t(70),instapool_v2:t(71)},basic:{erc20:t(72)},gnosisSafe:t(73)}},function(f){f.exports=JSON.parse('[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"origin","type":"address"}],"name":"LogAccountCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_newAccount","type":"address"},{"indexed":true,"internalType":"address","name":"_connectors","type":"address"},{"indexed":true,"internalType":"address","name":"_check","type":"address"}],"name":"LogNewAccount","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"accountVersion","type":"uint256"},{"indexed":true,"internalType":"address","name":"check","type":"address"}],"name":"LogNewCheck","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"master","type":"address"}],"name":"LogNewMaster","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"master","type":"address"}],"name":"LogUpdateMaster","type":"event"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"account","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_newAccount","type":"address"},{"internalType":"address","name":"_connectors","type":"address"},{"internalType":"address","name":"_check","type":"address"}],"name":"addNewAccount","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_owner","type":"address"},{"internalType":"uint256","name":"accountVersion","type":"uint256"},{"internalType":"address","name":"_origin","type":"address"}],"name":"build","outputs":[{"internalType":"address","name":"_account","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_owner","type":"address"},{"internalType":"uint256","name":"accountVersion","type":"uint256"},{"internalType":"address[]","name":"_targets","type":"address[]"},{"internalType":"bytes[]","name":"_datas","type":"bytes[]"},{"internalType":"address","name":"_origin","type":"address"}],"name":"buildWithCast","outputs":[{"internalType":"address","name":"_account","type":"address"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"accountVersion","type":"uint256"},{"internalType":"address","name":"_newCheck","type":"address"}],"name":"changeCheck","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_newMaster","type":"address"}],"name":"changeMaster","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"check","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"connectors","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"version","type":"uint256"},{"internalType":"address","name":"query","type":"address"}],"name":"isClone","outputs":[{"internalType":"bool","name":"result","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"list","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"master","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_master","type":"address"},{"internalType":"address","name":"_list","type":"address"},{"internalType":"address","name":"_account","type":"address"},{"internalType":"address","name":"_connectors","type":"address"}],"name":"setBasics","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"updateMaster","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"versionCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}]')},function(f){f.exports=JSON.parse('[{"inputs":[{"internalType":"uint64","name":"","type":"uint64"}],"name":"accountAddr","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"accountID","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"","type":"uint64"}],"name":"accountLink","outputs":[{"internalType":"address","name":"first","type":"address"},{"internalType":"address","name":"last","type":"address"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"","type":"uint64"},{"internalType":"address","name":"","type":"address"}],"name":"accountList","outputs":[{"internalType":"address","name":"prev","type":"address"},{"internalType":"address","name":"next","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"accounts","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_owner","type":"address"}],"name":"addAuth","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_account","type":"address"}],"name":"init","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"instaIndex","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_owner","type":"address"}],"name":"removeAuth","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"userLink","outputs":[{"internalType":"uint64","name":"first","type":"uint64"},{"internalType":"uint64","name":"last","type":"uint64"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint64","name":"","type":"uint64"}],"name":"userList","outputs":[{"internalType":"uint64","name":"prev","type":"uint64"},{"internalType":"uint64","name":"next","type":"uint64"}],"stateMutability":"view","type":"function"}]')},function(f){f.exports=JSON.parse('[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"origin","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"LogCast","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"}],"name":"LogDisable","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"}],"name":"LogEnable","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"_shield","type":"bool"}],"name":"LogSwitchShield","type":"event"},{"inputs":[{"internalType":"address[]","name":"_targets","type":"address[]"},{"internalType":"bytes[]","name":"_datas","type":"bytes[]"},{"internalType":"address","name":"_origin","type":"address"}],"name":"cast","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"disable","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"enable","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"instaIndex","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"isAuth","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"shield","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bool","name":"_shield","type":"bool"}],"name":"switchShield","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}]')},function(f){f.exports=JSON.parse('[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"addr","type":"address"}],"name":"LogAddController","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"connector","type":"address"}],"name":"LogDisable","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"connector","type":"address"}],"name":"LogEnable","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"connector","type":"address"}],"name":"LogEnableStatic","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"addr","type":"address"}],"name":"LogRemoveController","type":"event"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"chief","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"connectorArray","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"connectorCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"connectorLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"connectors","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_connector","type":"address"}],"name":"disable","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_userAddress","type":"address"}],"name":"disableChief","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_connector","type":"address"}],"name":"enable","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_userAddress","type":"address"}],"name":"enableChief","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_connector","type":"address"}],"name":"enableStatic","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"instaIndex","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"_connectors","type":"address[]"}],"name":"isConnector","outputs":[{"internalType":"bool","name":"isOk","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"_connectors","type":"address[]"}],"name":"isStaticConnector","outputs":[{"internalType":"bool","name":"isOk","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"staticConnectorArray","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"staticConnectorLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"staticConnectors","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}]')},function(f){f.exports=JSON.parse('[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"connectorType","type":"uint64"},{"indexed":true,"internalType":"uint64","name":"connectorID","type":"uint64"},{"indexed":true,"internalType":"uint64","name":"accountID","type":"uint64"},{"indexed":true,"internalType":"bytes32","name":"eventCode","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"eventData","type":"bytes"}],"name":"LogEvent","type":"event"},{"inputs":[{"internalType":"uint256","name":"_connectorType","type":"uint256"},{"internalType":"uint256","name":"_connectorID","type":"uint256"},{"internalType":"bytes32","name":"_eventCode","type":"bytes32"},{"internalType":"bytes","name":"_eventData","type":"bytes"}],"name":"emitEvent","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"instaList","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}]')},function(f){f.exports=JSON.parse('[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"erc20","type":"address"},{"indexed":false,"internalType":"uint256","name":"tokenAmt","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"getId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"setId","type":"uint256"}],"name":"LogDeposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"erc20","type":"address"},{"indexed":false,"internalType":"uint256","name":"tokenAmt","type":"uint256"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"getId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"setId","type":"uint256"}],"name":"LogWithdraw","type":"event"},{"inputs":[],"name":"connectorID","outputs":[{"internalType":"uint256","name":"_type","type":"uint256"},{"internalType":"uint256","name":"_id","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"erc20","type":"address"},{"internalType":"uint256","name":"tokenAmt","type":"uint256"},{"internalType":"uint256","name":"getId","type":"uint256"},{"internalType":"uint256","name":"setId","type":"uint256"}],"name":"deposit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"getEthAddr","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"getEventAddr","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"getMemoryAddr","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"erc20","type":"address"},{"internalType":"uint256","name":"tokenAmt","type":"uint256"},{"internalType":"address payable","name":"to","type":"address"},{"internalType":"uint256","name":"getId","type":"uint256"},{"internalType":"uint256","name":"setId","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"payable","type":"function"}]')},function(f){f.exports=JSON.parse('[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"address","name":"cToken","type":"address"},{"indexed":false,"internalType":"uint256","name":"tokenAmt","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"getId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"setId","type":"uint256"}],"name":"LogBorrow","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"address","name":"cToken","type":"address"},{"indexed":false,"internalType":"uint256","name":"tokenAmt","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"getId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"setId","type":"uint256"}],"name":"LogDeposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"address","name":"cToken","type":"address"},{"indexed":false,"internalType":"uint256","name":"tokenAmt","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"cTokenAmt","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"getId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"setId","type":"uint256"}],"name":"LogDepositCToken","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"borrower","type":"address"},{"indexed":true,"internalType":"address","name":"tokenToPay","type":"address"},{"indexed":true,"internalType":"address","name":"tokenInReturn","type":"address"},{"indexed":false,"internalType":"uint256","name":"tokenAmt","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"getId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"setId","type":"uint256"}],"name":"LogLiquidate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"address","name":"cToken","type":"address"},{"indexed":false,"internalType":"uint256","name":"tokenAmt","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"getId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"setId","type":"uint256"}],"name":"LogPayback","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"borrower","type":"address"},{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"address","name":"cToken","type":"address"},{"indexed":false,"internalType":"uint256","name":"tokenAmt","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"getId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"setId","type":"uint256"}],"name":"LogPaybackBehalf","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"address","name":"cToken","type":"address"},{"indexed":false,"internalType":"uint256","name":"tokenAmt","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"getId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"setId","type":"uint256"}],"name":"LogWithdraw","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"address","name":"cToken","type":"address"},{"indexed":false,"internalType":"uint256","name":"cTokenAmt","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"getId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"setId","type":"uint256"}],"name":"LogWithdrawCToken","type":"event"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amt","type":"uint256"},{"internalType":"uint256","name":"getId","type":"uint256"},{"internalType":"uint256","name":"setId","type":"uint256"}],"name":"borrow","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"connectorID","outputs":[{"internalType":"uint256","name":"_type","type":"uint256"},{"internalType":"uint256","name":"_id","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amt","type":"uint256"},{"internalType":"uint256","name":"getId","type":"uint256"},{"internalType":"uint256","name":"setId","type":"uint256"}],"name":"deposit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amt","type":"uint256"},{"internalType":"uint256","name":"getId","type":"uint256"},{"internalType":"uint256","name":"setId","type":"uint256"}],"name":"depositCToken","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"borrower","type":"address"},{"internalType":"address","name":"tokenToPay","type":"address"},{"internalType":"address","name":"tokenInReturn","type":"address"},{"internalType":"uint256","name":"amt","type":"uint256"},{"internalType":"uint256","name":"getId","type":"uint256"},{"internalType":"uint256","name":"setId","type":"uint256"}],"name":"liquidate","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amt","type":"uint256"},{"internalType":"uint256","name":"getId","type":"uint256"},{"internalType":"uint256","name":"setId","type":"uint256"}],"name":"payback","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"borrower","type":"address"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amt","type":"uint256"},{"internalType":"uint256","name":"getId","type":"uint256"},{"internalType":"uint256","name":"setId","type":"uint256"}],"name":"paybackBehalf","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amt","type":"uint256"},{"internalType":"uint256","name":"getId","type":"uint256"},{"internalType":"uint256","name":"setId","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"cTokenAmt","type":"uint256"},{"internalType":"uint256","name":"getId","type":"uint256"},{"internalType":"uint256","name":"setId","type":"uint256"}],"name":"withdrawCToken","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"setId","type":"uint256"}],"name":"ClaimComp","outputs":[],"stateMutability":"payable","type":"function"}]')},function(f){f.exports=JSON.parse('[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"vault","type":"uint256"},{"indexed":true,"internalType":"bytes32","name":"ilk","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"tokenAmt","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"getId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"setId","type":"uint256"}],"name":"LogBorrow","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"vault","type":"uint256"},{"indexed":true,"internalType":"bytes32","name":"ilk","type":"bytes32"}],"name":"LogClose","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"vault","type":"uint256"},{"indexed":true,"internalType":"bytes32","name":"ilk","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"tokenAmt","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"getId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"setId","type":"uint256"}],"name":"LogDeposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"tokenAmt","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"getId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"setId","type":"uint256"}],"name":"LogDepositDai","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"vault","type":"uint256"},{"indexed":true,"internalType":"bytes32","name":"ilk","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"tokenAmt","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"getId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"setId","type":"uint256"}],"name":"LogExitDai","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"vault","type":"uint256"},{"indexed":true,"internalType":"bytes32","name":"ilk","type":"bytes32"}],"name":"LogOpen","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"vault","type":"uint256"},{"indexed":true,"internalType":"bytes32","name":"ilk","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"tokenAmt","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"getId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"setId","type":"uint256"}],"name":"LogPayback","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"vault","type":"uint256"},{"indexed":true,"internalType":"bytes32","name":"ilk","type":"bytes32"},{"indexed":false,"internalType":"address","name":"newOwner","type":"address"}],"name":"LogTransfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"vault","type":"uint256"},{"indexed":true,"internalType":"bytes32","name":"ilk","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"tokenAmt","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"getId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"setId","type":"uint256"}],"name":"LogWithdraw","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"tokenAmt","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"getId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"setId","type":"uint256"}],"name":"LogWithdrawDai","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"vault","type":"uint256"},{"indexed":true,"internalType":"bytes32","name":"ilk","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"tokenAmt","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"getId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"setId","type":"uint256"}],"name":"LogWithdrawLiquidated","type":"event"},{"inputs":[{"internalType":"uint256","name":"vault","type":"uint256"},{"internalType":"uint256","name":"amt","type":"uint256"},{"internalType":"uint256","name":"getId","type":"uint256"},{"internalType":"uint256","name":"setId","type":"uint256"}],"name":"borrow","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"vault","type":"uint256"}],"name":"close","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"connectorID","outputs":[{"internalType":"uint256","name":"_type","type":"uint256"},{"internalType":"uint256","name":"_id","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"vault","type":"uint256"},{"internalType":"uint256","name":"amt","type":"uint256"},{"internalType":"uint256","name":"getId","type":"uint256"},{"internalType":"uint256","name":"setId","type":"uint256"}],"name":"deposit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"vault","type":"uint256"},{"internalType":"uint256","name":"depositAmt","type":"uint256"},{"internalType":"uint256","name":"borrowAmt","type":"uint256"},{"internalType":"uint256","name":"getIdDeposit","type":"uint256"},{"internalType":"uint256","name":"getIdBorrow","type":"uint256"},{"internalType":"uint256","name":"setIdDeposit","type":"uint256"},{"internalType":"uint256","name":"setIdBorrow","type":"uint256"}],"name":"depositAndBorrow","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amt","type":"uint256"},{"internalType":"uint256","name":"getId","type":"uint256"},{"internalType":"uint256","name":"setId","type":"uint256"}],"name":"depositDai","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"vault","type":"uint256"},{"internalType":"uint256","name":"amt","type":"uint256"},{"internalType":"uint256","name":"getId","type":"uint256"},{"internalType":"uint256","name":"setId","type":"uint256"}],"name":"exitDai","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"colType","type":"string"}],"name":"open","outputs":[{"internalType":"uint256","name":"vault","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"vault","type":"uint256"},{"internalType":"uint256","name":"amt","type":"uint256"},{"internalType":"uint256","name":"getId","type":"uint256"},{"internalType":"uint256","name":"setId","type":"uint256"}],"name":"payback","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"vault","type":"uint256"},{"internalType":"uint256","name":"amt","type":"uint256"},{"internalType":"uint256","name":"getId","type":"uint256"},{"internalType":"uint256","name":"setId","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amt","type":"uint256"},{"internalType":"uint256","name":"getId","type":"uint256"},{"internalType":"uint256","name":"setId","type":"uint256"}],"name":"withdrawDai","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"vault","type":"uint256"},{"internalType":"uint256","name":"amt","type":"uint256"},{"internalType":"uint256","name":"getId","type":"uint256"},{"internalType":"uint256","name":"setId","type":"uint256"}],"name":"withdrawLiquidated","outputs":[],"stateMutability":"payable","type":"function"}]')},function(f){f.exports=JSON.parse('[{"inputs":[{"internalType":"uint256","name":"vault","type":"uint256"},{"internalType":"uint256","name":"amt","type":"uint256"},{"internalType":"uint256","name":"getId","type":"uint256"},{"internalType":"uint256","name":"setId","type":"uint256"}],"name":"borrow","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"vault","type":"uint256"}],"name":"close","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"connectorID","outputs":[{"internalType":"uint256","name":"_type","type":"uint256"},{"internalType":"uint256","name":"_id","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"vault","type":"uint256"},{"internalType":"uint256","name":"amt","type":"uint256"},{"internalType":"uint256","name":"getId","type":"uint256"},{"internalType":"uint256","name":"setId","type":"uint256"}],"name":"deposit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amt","type":"uint256"},{"internalType":"uint256","name":"getId","type":"uint256"},{"internalType":"uint256","name":"setId","type":"uint256"}],"name":"depositDai","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"vault","type":"uint256"},{"internalType":"uint256","name":"amt","type":"uint256"},{"internalType":"uint256","name":"getId","type":"uint256"},{"internalType":"uint256","name":"setId","type":"uint256"}],"name":"exitDai","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"colType","type":"string"}],"name":"open","outputs":[{"internalType":"uint256","name":"vault","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"vault","type":"uint256"},{"internalType":"uint256","name":"amt","type":"uint256"},{"internalType":"uint256","name":"getId","type":"uint256"},{"internalType":"uint256","name":"setId","type":"uint256"}],"name":"payback","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"vault","type":"uint256"},{"internalType":"address","name":"nextOwner","type":"address"}],"name":"transfer","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"vault","type":"uint256"},{"internalType":"uint256","name":"amt","type":"uint256"},{"internalType":"uint256","name":"getId","type":"uint256"},{"internalType":"uint256","name":"setId","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amt","type":"uint256"},{"internalType":"uint256","name":"getId","type":"uint256"},{"internalType":"uint256","name":"setId","type":"uint256"}],"name":"withdrawDai","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"vault","type":"uint256"},{"internalType":"uint256","name":"amt","type":"uint256"},{"internalType":"uint256","name":"getId","type":"uint256"},{"internalType":"uint256","name":"setId","type":"uint256"}],"name":"withdrawLiquidated","outputs":[],"stateMutability":"payable","type":"function"}]')},function(f){f.exports=JSON.parse('[{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amt","type":"uint256"},{"internalType":"uint256","name":"getId","type":"uint256"},{"internalType":"uint256","name":"setId","type":"uint256"}],"name":"addFeeAmount","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amt","type":"uint256"},{"internalType":"uint256","name":"getId","type":"uint256"},{"internalType":"uint256","name":"setId","type":"uint256"}],"name":"deposit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amt","type":"uint256"},{"internalType":"uint256","name":"getId","type":"uint256"},{"internalType":"uint256","name":"setId","type":"uint256"}],"name":"flashBorrow","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address[]","name":"tokens","type":"address[]"},{"internalType":"uint256[]","name":"amts","type":"uint256[]"},{"internalType":"uint256[]","name":"getId","type":"uint256[]"},{"internalType":"uint256[]","name":"setId","type":"uint256[]"}],"name":"flashMultiBorrow","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address[]","name":"tokens","type":"address[]"},{"internalType":"uint256[]","name":"getId","type":"uint256[]"},{"internalType":"uint256[]","name":"setId","type":"uint256[]"}],"name":"flashMultiPayback","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"origin","type":"address"},{"internalType":"address[]","name":"tokens","type":"address[]"},{"internalType":"uint256[]","name":"getId","type":"uint256[]"},{"internalType":"uint256[]","name":"setId","type":"uint256[]"}],"name":"flashMultiPaybackOrigin","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"getId","type":"uint256"},{"internalType":"uint256","name":"setId","type":"uint256"}],"name":"flashPayback","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"origin","type":"address"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"getId","type":"uint256"},{"internalType":"uint256","name":"setId","type":"uint256"}],"name":"flashPaybackOrigin","outputs":[],"stateMutability":"payable","type":"function"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"tokenAmt","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"getId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"setId","type":"uint256"}],"name":"LogDepositLiquidity","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"tokenAmt","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"getId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"setId","type":"uint256"}],"name":"LogFlashBorrow","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"tokenAmt","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"feeCollected","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"getId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"setId","type":"uint256"}],"name":"LogFlashPayback","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"origin","type":"address"},{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"tokenAmt","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"originFeeAmt","type":"uint256"}],"name":"LogOriginFeeCollected","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"tokenAmt","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"getId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"setId","type":"uint256"}],"name":"LogWithdrawLiquidity","type":"event"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amt","type":"uint256"},{"internalType":"uint256","name":"getId","type":"uint256"},{"internalType":"uint256","name":"setId","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"connectorID","outputs":[{"internalType":"uint256","name":"_type","type":"uint256"},{"internalType":"uint256","name":"_id","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}]')},function(f){f.exports=JSON.parse('[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"buyToken","type":"address"},{"indexed":true,"internalType":"address","name":"sellToken","type":"address"},{"indexed":false,"internalType":"uint256","name":"buyAmt","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"sellAmt","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"getId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"setId","type":"uint256"}],"name":"LogBuy","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"buyToken","type":"address"},{"indexed":true,"internalType":"address","name":"sellToken","type":"address"},{"indexed":false,"internalType":"uint256","name":"buyAmt","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"sellAmt","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"getId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"setId","type":"uint256"}],"name":"LogSell","type":"event"},{"inputs":[{"internalType":"address","name":"buyAddr","type":"address"},{"internalType":"address","name":"sellAddr","type":"address"},{"internalType":"uint256","name":"buyAmt","type":"uint256"},{"internalType":"uint256","name":"unitAmt","type":"uint256"},{"internalType":"uint256","name":"getId","type":"uint256"},{"internalType":"uint256","name":"setId","type":"uint256"}],"name":"buy","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"connectorID","outputs":[{"internalType":"uint256","name":"_type","type":"uint256"},{"internalType":"uint256","name":"_id","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"buyAddr","type":"address"},{"internalType":"address","name":"sellAddr","type":"address"},{"internalType":"uint256","name":"sellAmt","type":"uint256"},{"internalType":"uint256","name":"unitAmt","type":"uint256"},{"internalType":"uint256","name":"getId","type":"uint256"},{"internalType":"uint256","name":"setId","type":"uint256"}],"name":"sell","outputs":[],"stateMutability":"payable","type":"function"}]')},function(f){f.exports=JSON.parse('[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"buyToken","type":"address"},{"indexed":true,"internalType":"address","name":"sellToken","type":"address"},{"indexed":false,"internalType":"uint256","name":"buyAmt","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"sellAmt","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"getId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"setId","type":"uint256"}],"name":"LogSell","type":"event"},{"inputs":[],"name":"connectorID","outputs":[{"internalType":"uint256","name":"model","type":"uint256"},{"internalType":"uint256","name":"id","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"buyAddr","type":"address"},{"internalType":"address","name":"sellAddr","type":"address"},{"internalType":"uint256","name":"sellAmt","type":"uint256"},{"internalType":"uint256","name":"unitAmt","type":"uint256"},{"internalType":"uint256","name":"getId","type":"uint256"},{"internalType":"uint256","name":"setId","type":"uint256"}],"name":"sell","outputs":[],"stateMutability":"payable","type":"function"}]')},function(f){f.exports=JSON.parse('[{"inputs":[],"name":"connectorID","outputs":[{"internalType":"uint256","name":"model","type":"uint256"},{"internalType":"uint256","name":"id","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"buyAddr","type":"address"},{"internalType":"address","name":"sellAddr","type":"address"},{"internalType":"uint256","name":"sellAmt","type":"uint256"},{"internalType":"uint256","name":"unitAmt","type":"uint256"},{"internalType":"uint256","name":"getId","type":"uint256"},{"internalType":"uint256","name":"setId","type":"uint256"}],"name":"sell","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"buyAddr","type":"address"},{"internalType":"address","name":"sellAddr","type":"address"},{"internalType":"uint256","name":"sellAmt","type":"uint256"},{"internalType":"uint256","name":"unitAmt","type":"uint256"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"setId","type":"uint256"}],"name":"sellThree","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"buyAddr","type":"address"},{"internalType":"address","name":"sellAddr","type":"address"},{"internalType":"uint256","name":"sellAmt","type":"uint256"},{"internalType":"uint256","name":"unitAmt","type":"uint256"},{"internalType":"uint256[]","name":"distribution","type":"uint256[]"},{"internalType":"uint256","name":"disableDexes","type":"uint256"},{"internalType":"uint256","name":"getId","type":"uint256"},{"internalType":"uint256","name":"setId","type":"uint256"}],"name":"sellTwo","outputs":[],"stateMutability":"payable","type":"function"}]')},function(f){f.exports=JSON.parse('[{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amt","type":"uint256"},{"internalType":"uint256","name":"getId","type":"uint256"},{"internalType":"uint256","name":"setId","type":"uint256"}],"name":"borrow","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"connectorID","outputs":[{"internalType":"uint256","name":"model","type":"uint256"},{"internalType":"uint256","name":"id","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amt","type":"uint256"},{"internalType":"uint256","name":"getId","type":"uint256"},{"internalType":"uint256","name":"setId","type":"uint256"}],"name":"deposit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amt","type":"uint256"},{"internalType":"uint256","name":"getId","type":"uint256"},{"internalType":"uint256","name":"setId","type":"uint256"}],"name":"payback","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amt","type":"uint256"},{"internalType":"uint256","name":"getId","type":"uint256"},{"internalType":"uint256","name":"setId","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"payable","type":"function"}]')},function(f){f.exports=JSON.parse('[{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amt","type":"uint256"},{"internalType":"uint256","name":"getId","type":"uint256"},{"internalType":"uint256","name":"setId","type":"uint256"}],"name":"borrow","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"connectorID","outputs":[{"internalType":"uint256","name":"model","type":"uint256"},{"internalType":"uint256","name":"id","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amt","type":"uint256"},{"internalType":"uint256","name":"getId","type":"uint256"},{"internalType":"uint256","name":"setId","type":"uint256"}],"name":"deposit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amt","type":"uint256"},{"internalType":"uint256","name":"getId","type":"uint256"},{"internalType":"uint256","name":"setId","type":"uint256"}],"name":"payback","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amt","type":"uint256"},{"internalType":"uint256","name":"getId","type":"uint256"},{"internalType":"uint256","name":"setId","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"payable","type":"function"}]')},function(f){f.exports=JSON.parse('[{"inputs":[],"name":"connectorID","outputs":[{"internalType":"uint256","name":"model","type":"uint256"},{"internalType":"uint256","name":"id","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"wallet","type":"address"},{"internalType":"address[]","name":"tokens","type":"address[]"},{"internalType":"uint256","name":"times","type":"uint256"}],"name":"migrateCompound","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"wallet","type":"address"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amt","type":"uint256"},{"internalType":"uint256","name":"getId","type":"uint256"},{"internalType":"uint256","name":"setId","type":"uint256"}],"name":"migratePaybackBehalf","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}]')},function(f){f.exports=JSON.parse('[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"times","type":"uint256"},{"indexed":false,"internalType":"address[]","name":"cTokens","type":"address[]"},{"indexed":false,"internalType":"uint256[]","name":"cTknBals","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"borrowBals","type":"uint256[]"}],"name":"LogImport","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"amt","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"getId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"setId","type":"uint256"}],"name":"LogImportPayback","type":"event"},{"inputs":[],"name":"connectorID","outputs":[{"internalType":"uint256","name":"model","type":"uint256"},{"internalType":"uint256","name":"id","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"userAccount","type":"address"},{"internalType":"address[]","name":"tokens","type":"address[]"},{"internalType":"uint256","name":"times","type":"uint256"}],"name":"importCompound","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"userAccount","type":"address"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amt","type":"uint256"},{"internalType":"uint256","name":"getId","type":"uint256"},{"internalType":"uint256","name":"setId","type":"uint256"}],"name":"importPaybackBehalf","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}]')},function(f){f.exports=JSON.parse('[{"inputs":[{"internalType":"address","name":"buyAddr","type":"address"},{"internalType":"address","name":"sellAddr","type":"address"},{"internalType":"uint256","name":"buyAmt","type":"uint256"},{"internalType":"uint256","name":"unitAmt","type":"uint256"},{"internalType":"uint256","name":"getId","type":"uint256"},{"internalType":"uint256","name":"setId","type":"uint256"}],"name":"buy","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint256","name":"amtA","type":"uint256"},{"internalType":"uint256","name":"unitAmt","type":"uint256"},{"internalType":"uint256","name":"slippage","type":"uint256"},{"internalType":"uint256","name":"getId","type":"uint256"},{"internalType":"uint256","name":"setId","type":"uint256"}],"name":"deposit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"buyAddr","type":"address"},{"internalType":"address","name":"sellAddr","type":"address"},{"internalType":"uint256","name":"sellAmt","type":"uint256"},{"internalType":"uint256","name":"unitAmt","type":"uint256"},{"internalType":"uint256","name":"getId","type":"uint256"},{"internalType":"uint256","name":"setId","type":"uint256"}],"name":"sell","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint256","name":"uniAmt","type":"uint256"},{"internalType":"uint256","name":"unitAmtA","type":"uint256"},{"internalType":"uint256","name":"unitAmtB","type":"uint256"},{"internalType":"uint256","name":"getId","type":"uint256"},{"internalType":"uint256[]","name":"setIds","type":"uint256[]"}],"name":"withdraw","outputs":[],"stateMutability":"payable","type":"function"}]')},function(f){f.exports=JSON.parse('[{"inputs":[{"internalType":"uint256","name":"setId","type":"uint256"}],"name":"ClaimComp","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address[]","name":"supplyTokens","type":"address[]"},{"internalType":"address[]","name":"borrowTokens","type":"address[]"},{"internalType":"uint256","name":"setId","type":"uint256"}],"name":"ClaimCompThree","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address[]","name":"tokens","type":"address[]"},{"internalType":"uint256","name":"setId","type":"uint256"}],"name":"ClaimCompTwo","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"payable","type":"function"}]')},function(f){f.exports=JSON.parse('[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"bytes32","name":"stakingType","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"rewardAmt","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"setId","type":"uint256"}],"name":"LogClaimedReward","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"bytes32","name":"stakingType","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"getId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"setId","type":"uint256"}],"name":"LogDeposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"bytes32","name":"stakingType","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"getId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"setId","type":"uint256"}],"name":"LogWithdraw","type":"event"},{"inputs":[{"internalType":"string","name":"stakingPoolName","type":"string"},{"internalType":"uint256","name":"setId","type":"uint256"}],"name":"claimReward","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"connectorID","outputs":[{"internalType":"uint256","name":"model","type":"uint256"},{"internalType":"uint256","name":"id","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"stakingPoolName","type":"string"},{"internalType":"uint256","name":"amt","type":"uint256"},{"internalType":"uint256","name":"getId","type":"uint256"},{"internalType":"uint256","name":"setId","type":"uint256"}],"name":"deposit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"stakingPoolName","type":"string"},{"internalType":"uint256","name":"amt","type":"uint256"},{"internalType":"uint256","name":"getId","type":"uint256"},{"internalType":"uint256","name":"setIdAmount","type":"uint256"},{"internalType":"uint256","name":"setIdReward","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"payable","type":"function"}]')},function(f){f.exports=JSON.parse('[{"inputs":[{"internalType":"uint256","name":"amt","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"connectorID","outputs":[{"internalType":"uint256","name":"model","type":"uint256"},{"internalType":"uint256","name":"id","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amt","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}]')},function(f){f.exports=JSON.parse('[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"claimAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"getId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"setId","type":"uint256"}],"name":"LogClaim","type":"event"},{"inputs":[{"internalType":"uint256","name":"getId","type":"uint256"},{"internalType":"uint256","name":"setId","type":"uint256"}],"name":"claim","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"connectorID","outputs":[{"internalType":"uint256","name":"model","type":"uint256"},{"internalType":"uint256","name":"id","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}]')},function(f){f.exports=JSON.parse('[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"string","name":"gaugePoolName","type":"string"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"rewardAmt","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"setId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"setIdReward","type":"uint256"}],"name":"LogClaimedReward","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"string","name":"gaugePoolName","type":"string"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"getId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"setId","type":"uint256"}],"name":"LogDeposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"string","name":"gaugePoolName","type":"string"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"getId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"setId","type":"uint256"}],"name":"LogWithdraw","type":"event"},{"inputs":[{"internalType":"string","name":"gaugePoolName","type":"string"},{"internalType":"uint256","name":"setId","type":"uint256"},{"internalType":"uint256","name":"setIdReward","type":"uint256"}],"name":"claimReward","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"connectorID","outputs":[{"internalType":"uint256","name":"model","type":"uint256"},{"internalType":"uint256","name":"id","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"gaugePoolName","type":"string"},{"internalType":"uint256","name":"amt","type":"uint256"},{"internalType":"uint256","name":"getId","type":"uint256"},{"internalType":"uint256","name":"setId","type":"uint256"}],"name":"deposit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"gaugePoolName","type":"string"},{"internalType":"uint256","name":"amt","type":"uint256"},{"internalType":"uint256","name":"getId","type":"uint256"},{"internalType":"uint256","name":"setId","type":"uint256"},{"internalType":"uint256","name":"setIdCrv","type":"uint256"},{"internalType":"uint256","name":"setIdReward","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"payable","type":"function"}]')},function(f){f.exports=JSON.parse('[{"anonymous":false,"inputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"address","name":"userProxy","type":"address"},{"components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"address","name":"module","type":"address"}],"internalType":"struct Provider","name":"provider","type":"tuple"},{"internalType":"uint256","name":"index","type":"uint256"},{"components":[{"components":[{"internalType":"address","name":"inst","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"internalType":"struct Condition[]","name":"conditions","type":"tuple[]"},{"components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"enum Operation","name":"operation","type":"uint8"},{"internalType":"enum DataFlow","name":"dataFlow","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bool","name":"termsOkCheck","type":"bool"}],"internalType":"struct Action[]","name":"actions","type":"tuple[]"},{"internalType":"uint256","name":"selfProviderGasLimit","type":"uint256"},{"internalType":"uint256","name":"selfProviderGasPriceCeil","type":"uint256"}],"internalType":"struct Task[]","name":"tasks","type":"tuple[]"},{"internalType":"uint256","name":"expiryDate","type":"uint256"},{"internalType":"uint256","name":"cycleId","type":"uint256"},{"internalType":"uint256","name":"submissionsLeft","type":"uint256"}],"indexed":true,"internalType":"struct TaskReceipt[]","name":"taskReceipt","type":"tuple[]"},{"indexed":false,"internalType":"uint256","name":"getId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"setId","type":"uint256"}],"name":"LogMultiCancelTasks","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"executor","type":"address"},{"components":[{"internalType":"address[]","name":"conditions","type":"address[]"},{"components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"enum Operation","name":"operation","type":"uint8"},{"internalType":"enum DataFlow","name":"dataFlow","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bool","name":"termsOkCheck","type":"bool"}],"internalType":"struct Action[]","name":"actions","type":"tuple[]"},{"internalType":"uint256","name":"gasPriceCeil","type":"uint256"}],"indexed":true,"internalType":"struct TaskSpec[]","name":"taskspecs","type":"tuple[]"},{"indexed":true,"internalType":"address[]","name":"modules","type":"address[]"},{"indexed":false,"internalType":"uint256","name":"ethToDeposit","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"getId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"setId","type":"uint256"}],"name":"LogMultiProvide","type":"event"},{"anonymous":false,"inputs":[{"components":[{"internalType":"address[]","name":"conditions","type":"address[]"},{"components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"enum Operation","name":"operation","type":"uint8"},{"internalType":"enum DataFlow","name":"dataFlow","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bool","name":"termsOkCheck","type":"bool"}],"internalType":"struct Action[]","name":"actions","type":"tuple[]"},{"internalType":"uint256","name":"gasPriceCeil","type":"uint256"}],"indexed":true,"internalType":"struct TaskSpec[]","name":"taskspecs","type":"tuple[]"},{"indexed":true,"internalType":"address[]","name":"modules","type":"address[]"},{"indexed":false,"internalType":"uint256","name":"ethToWithdraw","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"getId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"setId","type":"uint256"}],"name":"LogMultiUnprovide","type":"event"},{"anonymous":false,"inputs":[{"components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"address","name":"module","type":"address"}],"indexed":true,"internalType":"struct Provider","name":"provider","type":"tuple"},{"components":[{"components":[{"internalType":"address","name":"inst","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"internalType":"struct Condition[]","name":"conditions","type":"tuple[]"},{"components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"enum Operation","name":"operation","type":"uint8"},{"internalType":"enum DataFlow","name":"dataFlow","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bool","name":"termsOkCheck","type":"bool"}],"internalType":"struct Action[]","name":"actions","type":"tuple[]"},{"internalType":"uint256","name":"selfProviderGasLimit","type":"uint256"},{"internalType":"uint256","name":"selfProviderGasPriceCeil","type":"uint256"}],"indexed":true,"internalType":"struct Task","name":"task","type":"tuple"},{"indexed":true,"internalType":"uint256","name":"expiryDate","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"getId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"setId","type":"uint256"}],"name":"LogSubmitTask","type":"event"},{"anonymous":false,"inputs":[{"components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"address","name":"module","type":"address"}],"indexed":true,"internalType":"struct Provider","name":"provider","type":"tuple"},{"components":[{"components":[{"internalType":"address","name":"inst","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"internalType":"struct Condition[]","name":"conditions","type":"tuple[]"},{"components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"enum Operation","name":"operation","type":"uint8"},{"internalType":"enum DataFlow","name":"dataFlow","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bool","name":"termsOkCheck","type":"bool"}],"internalType":"struct Action[]","name":"actions","type":"tuple[]"},{"internalType":"uint256","name":"selfProviderGasLimit","type":"uint256"},{"internalType":"uint256","name":"selfProviderGasPriceCeil","type":"uint256"}],"indexed":true,"internalType":"struct Task[]","name":"tasks","type":"tuple[]"},{"indexed":true,"internalType":"uint256","name":"expiryDate","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"getId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"setId","type":"uint256"}],"name":"LogSubmitTaskChain","type":"event"},{"anonymous":false,"inputs":[{"components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"address","name":"module","type":"address"}],"indexed":true,"internalType":"struct Provider","name":"provider","type":"tuple"},{"components":[{"components":[{"internalType":"address","name":"inst","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"internalType":"struct Condition[]","name":"conditions","type":"tuple[]"},{"components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"enum Operation","name":"operation","type":"uint8"},{"internalType":"enum DataFlow","name":"dataFlow","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bool","name":"termsOkCheck","type":"bool"}],"internalType":"struct Action[]","name":"actions","type":"tuple[]"},{"internalType":"uint256","name":"selfProviderGasLimit","type":"uint256"},{"internalType":"uint256","name":"selfProviderGasPriceCeil","type":"uint256"}],"indexed":true,"internalType":"struct Task[]","name":"tasks","type":"tuple[]"},{"indexed":true,"internalType":"uint256","name":"expiryDate","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"getId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"setId","type":"uint256"}],"name":"LogSubmitTaskCycle","type":"event"},{"inputs":[],"name":"connectorID","outputs":[{"internalType":"uint256","name":"_type","type":"uint256"},{"internalType":"uint256","name":"_id","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"address","name":"userProxy","type":"address"},{"components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"address","name":"module","type":"address"}],"internalType":"struct Provider","name":"provider","type":"tuple"},{"internalType":"uint256","name":"index","type":"uint256"},{"components":[{"components":[{"internalType":"address","name":"inst","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"internalType":"struct Condition[]","name":"conditions","type":"tuple[]"},{"components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"enum Operation","name":"operation","type":"uint8"},{"internalType":"enum DataFlow","name":"dataFlow","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bool","name":"termsOkCheck","type":"bool"}],"internalType":"struct Action[]","name":"actions","type":"tuple[]"},{"internalType":"uint256","name":"selfProviderGasLimit","type":"uint256"},{"internalType":"uint256","name":"selfProviderGasPriceCeil","type":"uint256"}],"internalType":"struct Task[]","name":"tasks","type":"tuple[]"},{"internalType":"uint256","name":"expiryDate","type":"uint256"},{"internalType":"uint256","name":"cycleId","type":"uint256"},{"internalType":"uint256","name":"submissionsLeft","type":"uint256"}],"internalType":"struct TaskReceipt[]","name":"_taskReceipts","type":"tuple[]"}],"name":"multiCancelTasks","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"_executor","type":"address"},{"components":[{"internalType":"address[]","name":"conditions","type":"address[]"},{"components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"enum Operation","name":"operation","type":"uint8"},{"internalType":"enum DataFlow","name":"dataFlow","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bool","name":"termsOkCheck","type":"bool"}],"internalType":"struct Action[]","name":"actions","type":"tuple[]"},{"internalType":"uint256","name":"gasPriceCeil","type":"uint256"}],"internalType":"struct TaskSpec[]","name":"_taskSpecs","type":"tuple[]"},{"internalType":"address[]","name":"_modules","type":"address[]"},{"internalType":"uint256","name":"_ethToDeposit","type":"uint256"},{"internalType":"uint256","name":"_getId","type":"uint256"},{"internalType":"uint256","name":"_setId","type":"uint256"}],"name":"multiProvide","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_withdrawAmount","type":"uint256"},{"components":[{"internalType":"address[]","name":"conditions","type":"address[]"},{"components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"enum Operation","name":"operation","type":"uint8"},{"internalType":"enum DataFlow","name":"dataFlow","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bool","name":"termsOkCheck","type":"bool"}],"internalType":"struct Action[]","name":"actions","type":"tuple[]"},{"internalType":"uint256","name":"gasPriceCeil","type":"uint256"}],"internalType":"struct TaskSpec[]","name":"_taskSpecs","type":"tuple[]"},{"internalType":"address[]","name":"_modules","type":"address[]"},{"internalType":"uint256","name":"_getId","type":"uint256"},{"internalType":"uint256","name":"_setId","type":"uint256"}],"name":"multiUnprovide","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"address","name":"module","type":"address"}],"internalType":"struct Provider","name":"_provider","type":"tuple"},{"components":[{"components":[{"internalType":"address","name":"inst","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"internalType":"struct Condition[]","name":"conditions","type":"tuple[]"},{"components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"enum Operation","name":"operation","type":"uint8"},{"internalType":"enum DataFlow","name":"dataFlow","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bool","name":"termsOkCheck","type":"bool"}],"internalType":"struct Action[]","name":"actions","type":"tuple[]"},{"internalType":"uint256","name":"selfProviderGasLimit","type":"uint256"},{"internalType":"uint256","name":"selfProviderGasPriceCeil","type":"uint256"}],"internalType":"struct Task","name":"_task","type":"tuple"},{"internalType":"uint256","name":"_expiryDate","type":"uint256"}],"name":"submitTask","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"address","name":"module","type":"address"}],"internalType":"struct Provider","name":"_provider","type":"tuple"},{"components":[{"components":[{"internalType":"address","name":"inst","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"internalType":"struct Condition[]","name":"conditions","type":"tuple[]"},{"components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"enum Operation","name":"operation","type":"uint8"},{"internalType":"enum DataFlow","name":"dataFlow","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bool","name":"termsOkCheck","type":"bool"}],"internalType":"struct Action[]","name":"actions","type":"tuple[]"},{"internalType":"uint256","name":"selfProviderGasLimit","type":"uint256"},{"internalType":"uint256","name":"selfProviderGasPriceCeil","type":"uint256"}],"internalType":"struct Task[]","name":"_tasks","type":"tuple[]"},{"internalType":"uint256","name":"_expiryDate","type":"uint256"},{"internalType":"uint256","name":"_sumOfRequestedTaskSubmits","type":"uint256"}],"name":"submitTaskChain","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"address","name":"module","type":"address"}],"internalType":"struct Provider","name":"_provider","type":"tuple"},{"components":[{"components":[{"internalType":"address","name":"inst","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"internalType":"struct Condition[]","name":"conditions","type":"tuple[]"},{"components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"enum Operation","name":"operation","type":"uint8"},{"internalType":"enum DataFlow","name":"dataFlow","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bool","name":"termsOkCheck","type":"bool"}],"internalType":"struct Action[]","name":"actions","type":"tuple[]"},{"internalType":"uint256","name":"selfProviderGasLimit","type":"uint256"},{"internalType":"uint256","name":"selfProviderGasPriceCeil","type":"uint256"}],"internalType":"struct Task[]","name":"_tasks","type":"tuple[]"},{"internalType":"uint256","name":"_expiryDate","type":"uint256"},{"internalType":"uint256","name":"_cycles","type":"uint256"}],"name":"submitTaskCycle","outputs":[],"stateMutability":"payable","type":"function"}]')},function(f){f.exports=JSON.parse('[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"tokenAmt","type":"uint256"}],"name":"LogDydxFlashLoan","type":"event"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"tokenAmt","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"borrowAndCast","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"connectorID","outputs":[{"internalType":"uint256","name":"model","type":"uint256"},{"internalType":"uint256","name":"id","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}]')},function(f){f.exports=JSON.parse('[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"amt","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"mintAmt","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"getId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"setId","type":"uint256"}],"name":"LogDeposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"buyToken","type":"address"},{"indexed":true,"internalType":"address","name":"sellToken","type":"address"},{"indexed":false,"internalType":"uint256","name":"buyAmt","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"sellAmt","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"getId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"setId","type":"uint256"}],"name":"LogSell","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"amt","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"burnAmt","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"getId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"setId","type":"uint256"}],"name":"LogWithdraw","type":"event"},{"inputs":[],"name":"connectorID","outputs":[{"internalType":"uint256","name":"model","type":"uint256"},{"internalType":"uint256","name":"id","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amt","type":"uint256"},{"internalType":"uint256","name":"unitAmt","type":"uint256"},{"internalType":"uint256","name":"getId","type":"uint256"},{"internalType":"uint256","name":"setId","type":"uint256"}],"name":"deposit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"buyAddr","type":"address"},{"internalType":"address","name":"sellAddr","type":"address"},{"internalType":"uint256","name":"sellAmt","type":"uint256"},{"internalType":"uint256","name":"unitAmt","type":"uint256"},{"internalType":"uint256","name":"getId","type":"uint256"},{"internalType":"uint256","name":"setId","type":"uint256"}],"name":"sell","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amt","type":"uint256"},{"internalType":"uint256","name":"unitAmt","type":"uint256"},{"internalType":"uint256","name":"getId","type":"uint256"},{"internalType":"uint256","name":"setId","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"payable","type":"function"}]')},function(f){f.exports=JSON.parse('[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"buyToken","type":"address"},{"indexed":true,"internalType":"address","name":"sellToken","type":"address"},{"indexed":false,"internalType":"uint256","name":"buyAmt","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"sellAmt","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"getId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"setId","type":"uint256"}],"name":"LogSell","type":"event"},{"inputs":[],"name":"connectorID","outputs":[{"internalType":"uint256","name":"model","type":"uint256"},{"internalType":"uint256","name":"id","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"buyAddr","type":"address"},{"internalType":"address","name":"sellAddr","type":"address"},{"internalType":"uint256","name":"sellAmt","type":"uint256"},{"internalType":"uint256","name":"unitAmt","type":"uint256"},{"internalType":"uint256","name":"getId","type":"uint256"},{"internalType":"uint256","name":"setId","type":"uint256"}],"name":"sell","outputs":[],"stateMutability":"payable","type":"function"}]')},function(f){f.exports=JSON.parse('[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address[]","name":"token","type":"address[]"},{"indexed":false,"internalType":"uint256[]","name":"tokenAmt","type":"uint256[]"}],"name":"LogDydxFlashBorrow","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address[]","name":"token","type":"address[]"},{"indexed":false,"internalType":"uint256[]","name":"tokenAmt","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"totalAmtFee","type":"uint256[]"}],"name":"LogDydxFlashPayback","type":"event"},{"inputs":[{"internalType":"uint256","name":"flashAmt","type":"uint256"},{"internalType":"uint256","name":"amt","type":"uint256"},{"internalType":"uint256","name":"getId","type":"uint256"},{"internalType":"uint256","name":"setId","type":"uint256"}],"name":"addFeeAmount","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"connectorID","outputs":[{"internalType":"uint256","name":"_type","type":"uint256"},{"internalType":"uint256","name":"_id","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amt","type":"uint256"},{"internalType":"uint256","name":"route","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"flashBorrowAndCast","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address[]","name":"tokens","type":"address[]"},{"internalType":"uint256[]","name":"amts","type":"uint256[]"},{"internalType":"uint256","name":"route","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"flashMultiBorrowAndCast","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address[]","name":"tokens","type":"address[]"},{"internalType":"uint256[]","name":"amts","type":"uint256[]"},{"internalType":"uint256[]","name":"getId","type":"uint256[]"},{"internalType":"uint256[]","name":"setId","type":"uint256[]"}],"name":"flashMultiPayback","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amt","type":"uint256"},{"internalType":"uint256","name":"getId","type":"uint256"},{"internalType":"uint256","name":"setId","type":"uint256"}],"name":"flashPayback","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}]')},function(f){f.exports=JSON.parse('[{"inputs":[{"internalType":"uint256[]","name":"getIds","type":"uint256[]"},{"internalType":"uint256","name":"setId","type":"uint256"}],"name":"addIds","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"connectorID","outputs":[{"internalType":"uint256","name":"_type","type":"uint256"},{"internalType":"uint256","name":"_id","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"getIdOne","type":"uint256"},{"internalType":"uint256","name":"getIdTwo","type":"uint256"},{"internalType":"uint256","name":"setId","type":"uint256"}],"name":"subIds","outputs":[],"stateMutability":"payable","type":"function"}]')},function(f){f.exports=JSON.parse('[{"inputs":[{"internalType":"address","name":"_index","type":"address"},{"internalType":"address","name":"gnosisFactory","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"connectors","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"id","type":"uint64"}],"name":"getAccount","outputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getAccountAuthorities","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getAccountAuthoritiesTypes","outputs":[{"components":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"authType","type":"uint256"}],"internalType":"struct AccountResolver.AuthType[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getAccountDetails","outputs":[{"components":[{"internalType":"uint256","name":"ID","type":"uint256"},{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"version","type":"uint256"},{"internalType":"address[]","name":"authorities","type":"address[]"}],"internalType":"struct AccountResolver.AccountData","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"getAccountIdDetails","outputs":[{"components":[{"internalType":"uint256","name":"ID","type":"uint256"},{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"version","type":"uint256"},{"internalType":"address[]","name":"authorities","type":"address[]"}],"internalType":"struct AccountResolver.AccountData","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"}],"name":"getAccountVersions","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"authority","type":"address"}],"name":"getAuthorityAccounts","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"authority","type":"address"}],"name":"getAuthorityDetails","outputs":[{"components":[{"internalType":"uint64[]","name":"IDs","type":"uint64[]"},{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"versions","type":"uint256[]"}],"internalType":"struct AccountResolver.AuthorityData","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"authority","type":"address"}],"name":"getAuthorityIDs","outputs":[{"internalType":"uint64[]","name":"","type":"uint64[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"authorities","type":"address[]"}],"name":"getAuthorityTypes","outputs":[{"components":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"authType","type":"uint256"}],"internalType":"struct AccountResolver.AuthType[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_addr","type":"address"}],"name":"getContractCode","outputs":[{"internalType":"bytes","name":"o_code","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getEnabledConnectors","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getEnabledConnectorsData","outputs":[{"components":[{"internalType":"address","name":"connector","type":"address"},{"internalType":"uint256","name":"connectorID","type":"uint256"},{"internalType":"string","name":"name","type":"string"}],"internalType":"struct ConnectorsResolver.ConnectorsData[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getID","outputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"getIDAuthorities","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getStaticConnectors","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getStaticConnectorsData","outputs":[{"components":[{"internalType":"address","name":"connector","type":"address"},{"internalType":"uint256","name":"connectorID","type":"uint256"},{"internalType":"string","name":"name","type":"string"}],"internalType":"struct ConnectorsResolver.ConnectorsData[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"index","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"isShield","outputs":[{"internalType":"bool","name":"shield","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"list","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}]')},function(f){f.exports=JSON.parse('[{"inputs":[],"name":"getCETHAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"getCompReadAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"getCompToken","outputs":[{"internalType":"contract TokenInterface","name":"","type":"address"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address[]","name":"cAddress","type":"address[]"}],"name":"getCompoundData","outputs":[{"components":[{"internalType":"uint256","name":"tokenPriceInEth","type":"uint256"},{"internalType":"uint256","name":"tokenPriceInUsd","type":"uint256"},{"internalType":"uint256","name":"exchangeRateStored","type":"uint256"},{"internalType":"uint256","name":"balanceOfUser","type":"uint256"},{"internalType":"uint256","name":"borrowBalanceStoredUser","type":"uint256"},{"internalType":"uint256","name":"supplyRatePerBlock","type":"uint256"},{"internalType":"uint256","name":"borrowRatePerBlock","type":"uint256"}],"internalType":"struct Helpers.CompData[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getComptroller","outputs":[{"internalType":"contract ComptrollerLensInterface","name":"","type":"address"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"getOracleAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address[]","name":"cAddress","type":"address[]"}],"name":"getPosition","outputs":[{"components":[{"internalType":"uint256","name":"tokenPriceInEth","type":"uint256"},{"internalType":"uint256","name":"tokenPriceInUsd","type":"uint256"},{"internalType":"uint256","name":"exchangeRateStored","type":"uint256"},{"internalType":"uint256","name":"balanceOfUser","type":"uint256"},{"internalType":"uint256","name":"borrowBalanceStoredUser","type":"uint256"},{"internalType":"uint256","name":"supplyRatePerBlock","type":"uint256"},{"internalType":"uint256","name":"borrowRatePerBlock","type":"uint256"}],"internalType":"struct Helpers.CompData[]","name":"","type":"tuple[]"},{"components":[{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"votes","type":"uint256"},{"internalType":"address","name":"delegate","type":"address"},{"internalType":"uint256","name":"allocated","type":"uint256"}],"internalType":"struct CompReadInterface.CompBalanceMetadataExt","name":"","type":"tuple"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"cToken","type":"address"},{"internalType":"address","name":"token","type":"address"}],"name":"getPriceInEth","outputs":[{"internalType":"uint256","name":"priceInETH","type":"uint256"},{"internalType":"uint256","name":"priceInUSD","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}]')},function(f){f.exports=JSON.parse('[{"inputs":[{"internalType":"string[]","name":"name","type":"string[]"}],"name":"getColInfo","outputs":[{"components":[{"internalType":"uint256","name":"borrowRate","type":"uint256"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"uint256","name":"liquidationRatio","type":"uint256"},{"internalType":"uint256","name":"debtCeiling","type":"uint256"},{"internalType":"uint256","name":"totalDebt","type":"uint256"}],"internalType":"struct Helpers.ColInfo[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"getDaiPosition","outputs":[{"internalType":"uint256","name":"amt","type":"uint256"},{"internalType":"uint256","name":"dsr","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getDsrRate","outputs":[{"internalType":"uint256","name":"dsr","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getMcdAddresses","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"getVaultById","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"string","name":"colType","type":"string"},{"internalType":"uint256","name":"collateral","type":"uint256"},{"internalType":"uint256","name":"art","type":"uint256"},{"internalType":"uint256","name":"debt","type":"uint256"},{"internalType":"uint256","name":"liquidatedCol","type":"uint256"},{"internalType":"uint256","name":"borrowRate","type":"uint256"},{"internalType":"uint256","name":"colPrice","type":"uint256"},{"internalType":"uint256","name":"liquidationRatio","type":"uint256"},{"internalType":"address","name":"vaultAddress","type":"address"}],"internalType":"struct Helpers.VaultData","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"getVaults","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"string","name":"colType","type":"string"},{"internalType":"uint256","name":"collateral","type":"uint256"},{"internalType":"uint256","name":"art","type":"uint256"},{"internalType":"uint256","name":"debt","type":"uint256"},{"internalType":"uint256","name":"liquidatedCol","type":"uint256"},{"internalType":"uint256","name":"borrowRate","type":"uint256"},{"internalType":"uint256","name":"colPrice","type":"uint256"},{"internalType":"uint256","name":"liquidationRatio","type":"uint256"},{"internalType":"address","name":"vaultAddress","type":"address"}],"internalType":"struct Helpers.VaultData[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}]')},function(f){f.exports=JSON.parse('[{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"address[]","name":"tknAddress","type":"address[]"}],"name":"getAllowances","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address[]","name":"tknAddress","type":"address[]"}],"name":"getBalances","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}]')},function(f){f.exports=JSON.parse('[{"inputs":[{"internalType":"address","name":"buyAddr","type":"address"},{"internalType":"address","name":"sellAddr","type":"address"},{"internalType":"uint256","name":"sellAmt","type":"uint256"},{"internalType":"uint256","name":"slippage","type":"uint256"}],"name":"getBuyAmount","outputs":[{"internalType":"uint256","name":"buyAmt","type":"uint256"},{"internalType":"uint256","name":"unitAmt","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"sellAddr","type":"address"}],"name":"getMinSellAmount","outputs":[{"internalType":"uint256","name":"minAmt","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"buyAddr","type":"address"},{"internalType":"address","name":"sellAddr","type":"address"},{"internalType":"uint256","name":"buyAmt","type":"uint256"},{"internalType":"uint256","name":"slippage","type":"uint256"}],"name":"getSellAmount","outputs":[{"internalType":"uint256","name":"sellAmt","type":"uint256"},{"internalType":"uint256","name":"unitAmt","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}]')},function(f){f.exports=JSON.parse('[{"inputs":[],"name":"getAddressETH","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"getAddressKyber","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"buyAddr","type":"address"},{"internalType":"address","name":"sellAddr","type":"address"},{"internalType":"uint256","name":"sellAmt","type":"uint256"},{"internalType":"uint256","name":"slippage","type":"uint256"}],"name":"getBuyAmount","outputs":[{"internalType":"uint256","name":"buyAmt","type":"uint256"},{"internalType":"uint256","name":"unitAmt","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}]')},function(f){f.exports=JSON.parse('[{"inputs":[{"internalType":"address","name":"buyAddr","type":"address"},{"internalType":"address","name":"sellAddr","type":"address"},{"internalType":"uint256","name":"sellAmt","type":"uint256"},{"internalType":"uint256","name":"slippage","type":"uint256"}],"name":"getBuyAmount","outputs":[{"internalType":"uint256","name":"buyAmt","type":"uint256"},{"internalType":"uint256","name":"unitAmt","type":"uint256"},{"internalType":"uint256","name":"virtualPrice","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"depositAmt","type":"uint256"},{"internalType":"uint256","name":"slippage","type":"uint256"}],"name":"getDepositAmount","outputs":[{"internalType":"uint256","name":"curveAmt","type":"uint256"},{"internalType":"uint256","name":"unitAmt","type":"uint256"},{"internalType":"uint256","name":"virtualPrice","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getPosition","outputs":[{"internalType":"uint256","name":"userBal","type":"uint256"},{"internalType":"uint256","name":"totalSupply","type":"uint256"},{"internalType":"uint256","name":"virtualPrice","type":"uint256"},{"internalType":"uint256","name":"userShare","type":"uint256"},{"internalType":"uint256","name":"poolRenBtcBal","type":"uint256"},{"internalType":"uint256","name":"poolWbtcBal","type":"uint256"},{"internalType":"uint256","name":"poolSbtcBal","type":"uint256"},{"internalType":"uint256","name":"stakedBal","type":"uint256"},{"internalType":"uint256","name":"rewardsEarned","type":"uint256"},{"internalType":"uint256","name":"rewardBal","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getStakingPosition","outputs":[{"internalType":"uint256","name":"stakedBal","type":"uint256"},{"internalType":"uint256","name":"rewardsEarned","type":"uint256"},{"internalType":"uint256","name":"rewardBal","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"withdrawAmt","type":"uint256"},{"internalType":"uint256","name":"slippage","type":"uint256"}],"name":"getWithdrawAmount","outputs":[{"internalType":"uint256","name":"curveAmt","type":"uint256"},{"internalType":"uint256","name":"unitAmt","type":"uint256"},{"internalType":"uint256","name":"virtualPrice","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"curveAmt","type":"uint256"},{"internalType":"uint256","name":"slippage","type":"uint256"}],"name":"getWithdrawTokenAmount","outputs":[{"internalType":"uint256","name":"tokenAmt","type":"uint256"},{"internalType":"uint256","name":"unitAmt","type":"uint256"},{"internalType":"uint256","name":"virtualPrice","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}]')},function(f){f.exports=JSON.parse('[{"inputs":[{"internalType":"address","name":"buyAddr","type":"address"},{"internalType":"address","name":"sellAddr","type":"address"},{"internalType":"uint256","name":"sellAmt","type":"uint256"},{"internalType":"uint256","name":"slippage","type":"uint256"}],"name":"getBuyAmount","outputs":[{"internalType":"uint256","name":"buyAmt","type":"uint256"},{"internalType":"uint256","name":"unitAmt","type":"uint256"},{"internalType":"uint256","name":"virtualPrice","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tToken","type":"address"}],"name":"getCurveYBalance","outputs":[{"components":[{"internalType":"uint256","name":"yPoolBal","type":"uint256"},{"internalType":"uint256","name":"tokenPoolbal","type":"uint256"},{"internalType":"uint256","name":"sharePrice","type":"uint256"}],"internalType":"struct Resolver.yTokenData","name":"ytoken","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"depositAmt","type":"uint256"},{"internalType":"uint256","name":"slippage","type":"uint256"}],"name":"getDepositAmount","outputs":[{"internalType":"uint256","name":"curveAmt","type":"uint256"},{"internalType":"uint256","name":"unitAmt","type":"uint256"},{"internalType":"uint256","name":"virtualPrice","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getPosition","outputs":[{"internalType":"uint256","name":"userBal","type":"uint256"},{"internalType":"uint256","name":"totalSupply","type":"uint256"},{"internalType":"uint256","name":"virtualPrice","type":"uint256"},{"internalType":"uint256","name":"userShare","type":"uint256"},{"components":[{"internalType":"uint256","name":"yPoolBal","type":"uint256"},{"internalType":"uint256","name":"tokenPoolbal","type":"uint256"},{"internalType":"uint256","name":"sharePrice","type":"uint256"}],"internalType":"struct Resolver.yTokenData","name":"poolyDai","type":"tuple"},{"components":[{"internalType":"uint256","name":"yPoolBal","type":"uint256"},{"internalType":"uint256","name":"tokenPoolbal","type":"uint256"},{"internalType":"uint256","name":"sharePrice","type":"uint256"}],"internalType":"struct Resolver.yTokenData","name":"poolyUsdc","type":"tuple"},{"components":[{"internalType":"uint256","name":"yPoolBal","type":"uint256"},{"internalType":"uint256","name":"tokenPoolbal","type":"uint256"},{"internalType":"uint256","name":"sharePrice","type":"uint256"}],"internalType":"struct Resolver.yTokenData","name":"poolyUsdt","type":"tuple"},{"components":[{"internalType":"uint256","name":"yPoolBal","type":"uint256"},{"internalType":"uint256","name":"tokenPoolbal","type":"uint256"},{"internalType":"uint256","name":"sharePrice","type":"uint256"}],"internalType":"struct Resolver.yTokenData","name":"poolyTusd","type":"tuple"},{"internalType":"uint256","name":"stakedBal","type":"uint256"},{"internalType":"uint256","name":"rewardsEarned","type":"uint256"},{"internalType":"uint256","name":"yfiBal","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getStakingPosition","outputs":[{"internalType":"uint256","name":"stakedBal","type":"uint256"},{"internalType":"uint256","name":"rewardsEarned","type":"uint256"},{"internalType":"uint256","name":"yfiBal","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"withdrawAmt","type":"uint256"},{"internalType":"uint256","name":"slippage","type":"uint256"}],"name":"getWithdrawAmount","outputs":[{"internalType":"uint256","name":"curveAmt","type":"uint256"},{"internalType":"uint256","name":"unitAmt","type":"uint256"},{"internalType":"uint256","name":"virtualPrice","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"curveAmt","type":"uint256"},{"internalType":"uint256","name":"slippage","type":"uint256"}],"name":"getWithdrawTokenAmount","outputs":[{"internalType":"uint256","name":"tokenAmt","type":"uint256"},{"internalType":"uint256","name":"unitAmt","type":"uint256"},{"internalType":"uint256","name":"virtualPrice","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}]')},function(f){f.exports=JSON.parse('[{"inputs":[],"name":"getAddressETH","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"buyAddr","type":"address"},{"internalType":"address","name":"sellAddr","type":"address"},{"internalType":"uint256","name":"sellAmt","type":"uint256"},{"internalType":"uint256","name":"slippage","type":"uint256"},{"internalType":"uint256","name":"distribution","type":"uint256"},{"internalType":"uint256","name":"disableDexes","type":"uint256"}],"name":"getBuyAmount","outputs":[{"internalType":"uint256","name":"buyAmt","type":"uint256"},{"internalType":"uint256","name":"unitAmt","type":"uint256"},{"internalType":"uint256[]","name":"distributions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract TokenInterface[]","name":"tokens","type":"address[]"},{"internalType":"uint256","name":"sellAmt","type":"uint256"},{"internalType":"uint256","name":"slippage","type":"uint256"},{"internalType":"uint256[]","name":"distribution","type":"uint256[]"},{"internalType":"uint256[]","name":"disableDexes","type":"uint256[]"},{"internalType":"uint256[]","name":"destTokenEthPriceTimesGasPrices","type":"uint256[]"}],"name":"getBuyAmountMultiWithGas","outputs":[{"internalType":"uint256","name":"buyAmt","type":"uint256"},{"internalType":"uint256","name":"unitAmt","type":"uint256"},{"internalType":"uint256[]","name":"distributions","type":"uint256[]"},{"internalType":"uint256[]","name":"returnAmounts","type":"uint256[]"},{"internalType":"uint256","name":"estimateGasAmount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"buyAddr","type":"address"},{"internalType":"address","name":"sellAddr","type":"address"},{"internalType":"uint256","name":"sellAmt","type":"uint256"},{"internalType":"uint256","name":"slippage","type":"uint256"},{"internalType":"uint256","name":"distribution","type":"uint256"},{"internalType":"uint256","name":"disableDexes","type":"uint256"},{"internalType":"uint256","name":"destTokenEthPriceTimesGasPrices","type":"uint256"}],"name":"getBuyAmountWithGas","outputs":[{"internalType":"uint256","name":"buyAmt","type":"uint256"},{"internalType":"uint256","name":"unitAmt","type":"uint256"},{"internalType":"uint256[]","name":"distributions","type":"uint256[]"},{"internalType":"uint256","name":"estimateGasAmount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"contract TokenInterface[]","name":"tokens","type":"address[]"},{"internalType":"uint256[]","name":"distribution","type":"uint256[]"},{"internalType":"uint256[]","name":"disableDexes","type":"uint256[]"},{"internalType":"uint256[]","name":"destTokenEthPriceTimesGasPrices","type":"uint256[]"}],"internalType":"struct Resolver.MultiTokenPaths[]","name":"multiTokenPaths","type":"tuple[]"},{"internalType":"uint256","name":"sellAmt","type":"uint256"},{"internalType":"uint256","name":"slippage","type":"uint256"}],"name":"getBuyAmountsMulti","outputs":[{"components":[{"internalType":"uint256","name":"buyAmt","type":"uint256"},{"internalType":"uint256","name":"unitAmt","type":"uint256"},{"internalType":"uint256[]","name":"distributions","type":"uint256[]"},{"internalType":"uint256[]","name":"returnAmounts","type":"uint256[]"},{"internalType":"uint256","name":"estimateGasAmount","type":"uint256"}],"internalType":"struct Resolver.MultiTokenPathsBuyAmt[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}]')},function(f){f.exports=JSON.parse('[{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256[]","name":"marketId","type":"uint256[]"}],"name":"getPosition","outputs":[{"components":[{"internalType":"uint256","name":"tokenPrice","type":"uint256"},{"internalType":"uint256","name":"supplyBalance","type":"uint256"},{"internalType":"uint256","name":"borrowBalance","type":"uint256"},{"internalType":"uint256","name":"tokenUtil","type":"uint256"}],"internalType":"struct Helpers.DydxData[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}]')},function(f){f.exports=JSON.parse('[{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"address[]","name":"tokens","type":"address[]"}],"name":"getPosition","outputs":[{"components":[{"internalType":"uint256","name":"tokenPrice","type":"uint256"},{"internalType":"uint256","name":"supplyBalance","type":"uint256"},{"internalType":"uint256","name":"borrowBalance","type":"uint256"},{"internalType":"uint256","name":"borrowFee","type":"uint256"},{"internalType":"uint256","name":"supplyRate","type":"uint256"},{"internalType":"uint256","name":"borrowRate","type":"uint256"},{"internalType":"uint256","name":"borrowModal","type":"uint256"},{"components":[{"internalType":"uint256","name":"ltv","type":"uint256"},{"internalType":"uint256","name":"threshold","type":"uint256"},{"internalType":"bool","name":"usageAsCollEnabled","type":"bool"},{"internalType":"bool","name":"borrowEnabled","type":"bool"},{"internalType":"bool","name":"stableBorrowEnabled","type":"bool"},{"internalType":"bool","name":"isActive","type":"bool"}],"internalType":"struct AaveHelpers.AaveTokenData","name":"aaveTokenData","type":"tuple"}],"internalType":"struct AaveHelpers.AaveUserTokenData[]","name":"","type":"tuple[]"},{"components":[{"internalType":"uint256","name":"totalSupplyETH","type":"uint256"},{"internalType":"uint256","name":"totalCollateralETH","type":"uint256"},{"internalType":"uint256","name":"totalBorrowsETH","type":"uint256"},{"internalType":"uint256","name":"totalFeesETH","type":"uint256"},{"internalType":"uint256","name":"availableBorrowsETH","type":"uint256"},{"internalType":"uint256","name":"currentLiquidationThreshold","type":"uint256"},{"internalType":"uint256","name":"ltv","type":"uint256"},{"internalType":"uint256","name":"healthFactor","type":"uint256"}],"internalType":"struct AaveHelpers.AaveUserData","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}]')},function(f){f.exports=JSON.parse('[{"inputs":[{"internalType":"address","name":"buyAddr","type":"address"},{"internalType":"address","name":"sellAddr","type":"address"},{"internalType":"uint256","name":"sellAmt","type":"uint256"},{"internalType":"uint256","name":"slippage","type":"uint256"}],"name":"getBuyAmount","outputs":[{"internalType":"uint256","name":"buyAmt","type":"uint256"},{"internalType":"uint256","name":"unitAmt","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint256","name":"amtA","type":"uint256"}],"name":"getDepositAmount","outputs":[{"internalType":"uint256","name":"amtB","type":"uint256"},{"internalType":"uint256","name":"unitAmt","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint256","name":"amtA","type":"uint256"},{"internalType":"uint256","name":"amtB","type":"uint256"}],"name":"getDepositAmountNewPool","outputs":[{"internalType":"uint256","name":"unitAmt","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getEthAddr","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"components":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"}],"internalType":"struct Resolver.TokenPair[]","name":"tokenPairs","type":"tuple[]"}],"name":"getPosition","outputs":[{"components":[{"internalType":"uint256","name":"tokenAShareAmt","type":"uint256"},{"internalType":"uint256","name":"tokenBShareAmt","type":"uint256"},{"internalType":"uint256","name":"uniAmt","type":"uint256"},{"internalType":"uint256","name":"totalSupply","type":"uint256"}],"internalType":"struct Resolver.PoolData[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"buyAddr","type":"address"},{"internalType":"address","name":"sellAddr","type":"address"},{"internalType":"uint256","name":"buyAmt","type":"uint256"},{"internalType":"uint256","name":"slippage","type":"uint256"}],"name":"getSellAmount","outputs":[{"internalType":"uint256","name":"sellAmt","type":"uint256"},{"internalType":"uint256","name":"unitAmt","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint256","name":"uniAmt","type":"uint256"},{"internalType":"uint256","name":"slippage","type":"uint256"}],"name":"getWithdrawAmounts","outputs":[{"internalType":"uint256","name":"amtA","type":"uint256"},{"internalType":"uint256","name":"amtB","type":"uint256"},{"internalType":"uint256","name":"unitAmtA","type":"uint256"},{"internalType":"uint256","name":"unitAmtB","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}]')},function(f){f.exports=JSON.parse('[{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getPosition","outputs":[{"internalType":"uint256","name":"vestedBalance","type":"uint256"},{"internalType":"uint256","name":"unclaimedBal","type":"uint256"},{"internalType":"uint256","name":"claimedBal","type":"uint256"},{"internalType":"uint256","name":"lockedBalance","type":"uint256"},{"internalType":"uint256","name":"crvBalance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}]')},function(f){f.exports=JSON.parse('[{"inputs":[{"internalType":"string[]","name":"tokens","type":"string[]"},{"internalType":"address[]","name":"chainlinkFeeds","type":"address[]"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"tokenSymbol","type":"string"},{"indexed":false,"internalType":"address","name":"chainlinkFeed","type":"address"}],"name":"LogAddChainLinkMapping","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"tokenSymbol","type":"string"},{"indexed":false,"internalType":"address","name":"chainlinkFeed","type":"address"}],"name":"LogRemoveChainLinkMapping","type":"event"},{"inputs":[{"internalType":"string[]","name":"tokens","type":"string[]"},{"internalType":"address[]","name":"chainlinkFeeds","type":"address[]"}],"name":"addChainLinkMapping","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"","type":"string"}],"name":"chainLinkMapping","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"connectors","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getGasPrice","outputs":[{"internalType":"uint256","name":"gasPrice","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string[]","name":"tokens","type":"string[]"}],"name":"getPrice","outputs":[{"components":[{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"internalType":"struct Resolver.PriceData","name":"ethPriceInUsd","type":"tuple"},{"components":[{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"internalType":"struct Resolver.PriceData","name":"btcPriceInUsd","type":"tuple"},{"components":[{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"internalType":"struct Resolver.PriceData[]","name":"tokensPriceInETH","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"instaIndex","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string[]","name":"tokens","type":"string[]"}],"name":"removeChainLinkMapping","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}]')},function(f){f.exports=JSON.parse('[{"inputs":[{"internalType":"string","name":"gaugeName","type":"string"},{"internalType":"address","name":"user","type":"address"}],"name":"getPosition","outputs":[{"components":[{"internalType":"uint256","name":"stakedBal","type":"uint256"},{"internalType":"uint256","name":"crvEarned","type":"uint256"},{"internalType":"uint256","name":"crvClaimed","type":"uint256"},{"internalType":"uint256","name":"rewardsEarned","type":"uint256"},{"internalType":"uint256","name":"rewardsClaimed","type":"uint256"},{"internalType":"uint256","name":"crvBal","type":"uint256"},{"internalType":"uint256","name":"rewardBal","type":"uint256"},{"internalType":"bool","name":"hasReward","type":"bool"}],"internalType":"struct Resolver.PositionData","name":"positionData","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string[]","name":"gaugesName","type":"string[]"},{"internalType":"address","name":"user","type":"address"}],"name":"getPositions","outputs":[{"components":[{"internalType":"uint256","name":"stakedBal","type":"uint256"},{"internalType":"uint256","name":"crvEarned","type":"uint256"},{"internalType":"uint256","name":"crvClaimed","type":"uint256"},{"internalType":"uint256","name":"rewardsEarned","type":"uint256"},{"internalType":"uint256","name":"rewardsClaimed","type":"uint256"},{"internalType":"uint256","name":"crvBal","type":"uint256"},{"internalType":"uint256","name":"rewardBal","type":"uint256"},{"internalType":"bool","name":"hasReward","type":"bool"}],"internalType":"struct Resolver.PositionData[]","name":"positions","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}]')},function(f){f.exports=JSON.parse('[{"inputs":[{"internalType":"address","name":"buyAddr","type":"address"},{"internalType":"address","name":"sellAddr","type":"address"},{"internalType":"uint256","name":"sellAmt","type":"uint256"},{"internalType":"uint256","name":"slippage","type":"uint256"}],"name":"getBuyAmount","outputs":[{"internalType":"uint256","name":"buyAmt","type":"uint256"},{"internalType":"uint256","name":"unitAmt","type":"uint256"},{"internalType":"uint256","name":"virtualPrice","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"depositAmt","type":"uint256"},{"internalType":"uint256","name":"slippage","type":"uint256"}],"name":"getDepositAmount","outputs":[{"internalType":"uint256","name":"swerveAmt","type":"uint256"},{"internalType":"uint256","name":"unitAmt","type":"uint256"},{"internalType":"uint256","name":"virtualPrice","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getPosition","outputs":[{"internalType":"uint256","name":"userBal","type":"uint256"},{"internalType":"uint256","name":"totalSupply","type":"uint256"},{"internalType":"uint256","name":"virtualPrice","type":"uint256"},{"internalType":"uint256","name":"userShare","type":"uint256"},{"internalType":"uint256","name":"poolDaiBal","type":"uint256"},{"internalType":"uint256","name":"poolUsdcBal","type":"uint256"},{"internalType":"uint256","name":"poolUsdtBal","type":"uint256"},{"internalType":"uint256","name":"poolSusdBal","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"withdrawAmt","type":"uint256"},{"internalType":"uint256","name":"slippage","type":"uint256"}],"name":"getWithdrawSwerveAmount","outputs":[{"internalType":"uint256","name":"swerveAmt","type":"uint256"},{"internalType":"uint256","name":"unitAmt","type":"uint256"},{"internalType":"uint256","name":"virtualPrice","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"swerveAmt","type":"uint256"},{"internalType":"uint256","name":"slippage","type":"uint256"}],"name":"getWithdrawTokenAmount","outputs":[{"internalType":"uint256","name":"tokenAmt","type":"uint256"},{"internalType":"uint256","name":"unitAmt","type":"uint256"},{"internalType":"uint256","name":"virtualPrice","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}]')},function(f){f.exports=JSON.parse('[{"inputs":[{"internalType":"address","name":"buyAddr","type":"address"},{"internalType":"address","name":"sellAddr","type":"address"},{"internalType":"uint256","name":"sellAmt","type":"uint256"},{"internalType":"uint256","name":"slippage","type":"uint256"}],"name":"getBuyAmount","outputs":[{"internalType":"uint256","name":"buyAmt","type":"uint256"},{"internalType":"uint256","name":"unitAmt","type":"uint256"},{"internalType":"uint256","name":"virtualPrice","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}]')},function(f){f.exports=JSON.parse('[{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"ethAmount","type":"uint256"}],"name":"getAaveData","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract AaveProviderInterface","name":"AaveProvider","type":"address"},{"internalType":"address","name":"token","type":"address"}],"name":"getAavePrices","outputs":[{"internalType":"uint256","name":"tokenPrice","type":"uint256"},{"internalType":"uint256","name":"ethPrice","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getCETHAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"contract CTokenInterface","name":"cToken","type":"address"}],"name":"getCompPrice","outputs":[{"internalType":"uint256","name":"tokenPrice","type":"uint256"},{"internalType":"uint256","name":"ethPrice","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"ethAmount","type":"uint256"}],"name":"getCompoundData","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getComptroller","outputs":[{"internalType":"contract ComptrollerLensInterface","name":"","type":"address"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"getDaiAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"ethAmt","type":"uint256"}],"name":"getMakerData","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getMcdAddresses","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"getOracleAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"getSoloAddress","outputs":[{"internalType":"address","name":"addr","type":"address"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"getTokenLimit","outputs":[{"components":[{"internalType":"uint256","name":"dydx","type":"uint256"},{"internalType":"uint256","name":"maker","type":"uint256"},{"internalType":"uint256","name":"compound","type":"uint256"},{"internalType":"uint256","name":"aave","type":"uint256"}],"internalType":"struct DydxFlashloanResolver.RouteData","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"tokens","type":"address[]"}],"name":"getTokensLimit","outputs":[{"components":[{"internalType":"uint256","name":"dydx","type":"uint256"},{"internalType":"uint256","name":"maker","type":"uint256"},{"internalType":"uint256","name":"compound","type":"uint256"},{"internalType":"uint256","name":"aave","type":"uint256"}],"internalType":"struct DydxFlashloanResolver.RouteData[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}]')},function(f){f.exports=JSON.parse('[{"constant":true,"inputs":[],"name":"name","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_spender","type":"address"},{"name":"_value","type":"uint256"}],"name":"approve","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"totalSupply","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"transferFrom","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"decimals","outputs":[{"name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_owner","type":"address"}],"name":"balanceOf","outputs":[{"name":"balance","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"symbol","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"transfer","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_owner","type":"address"},{"name":"_spender","type":"address"}],"name":"allowance","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"payable":true,"stateMutability":"payable","type":"fallback"},{"anonymous":false,"inputs":[{"indexed":true,"name":"owner","type":"address"},{"indexed":true,"name":"spender","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"address"},{"indexed":true,"name":"to","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Transfer","type":"event"}]')},function(f){f.exports=JSON.parse('{"contractName":"GnosisSafe","abi":[{"inputs":[],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"owner","type":"address"}],"name":"AddedOwner","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"approvedHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"owner","type":"address"}],"name":"ApproveHash","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"masterCopy","type":"address"}],"name":"ChangedMasterCopy","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"threshold","type":"uint256"}],"name":"ChangedThreshold","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"contract Module","name":"module","type":"address"}],"name":"DisabledModule","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"contract Module","name":"module","type":"address"}],"name":"EnabledModule","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"txHash","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"payment","type":"uint256"}],"name":"ExecutionFailure","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"module","type":"address"}],"name":"ExecutionFromModuleFailure","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"module","type":"address"}],"name":"ExecutionFromModuleSuccess","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"txHash","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"payment","type":"uint256"}],"name":"ExecutionSuccess","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"owner","type":"address"}],"name":"RemovedOwner","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"msgHash","type":"bytes32"}],"name":"SignMsg","type":"event"},{"payable":true,"stateMutability":"payable","type":"fallback"},{"constant":true,"inputs":[],"name":"NAME","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"_threshold","type":"uint256"}],"name":"addOwnerWithThreshold","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"approvedHashes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_masterCopy","type":"address"}],"name":"changeMasterCopy","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"_threshold","type":"uint256"}],"name":"changeThreshold","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"contract Module","name":"prevModule","type":"address"},{"internalType":"contract Module","name":"module","type":"address"}],"name":"disableModule","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"domainSeparator","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"contract Module","name":"module","type":"address"}],"name":"enableModule","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"enum Enum.Operation","name":"operation","type":"uint8"}],"name":"execTransactionFromModule","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"enum Enum.Operation","name":"operation","type":"uint8"}],"name":"execTransactionFromModuleReturnData","outputs":[{"internalType":"bool","name":"success","type":"bool"},{"internalType":"bytes","name":"returnData","type":"bytes"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"getModules","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"start","type":"address"},{"internalType":"uint256","name":"pageSize","type":"uint256"}],"name":"getModulesPaginated","outputs":[{"internalType":"address[]","name":"array","type":"address[]"},{"internalType":"address","name":"next","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getOwners","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getThreshold","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"isOwner","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"nonce","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"prevOwner","type":"address"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"_threshold","type":"uint256"}],"name":"removeOwner","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"handler","type":"address"}],"name":"setFallbackHandler","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"signedMessages","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"prevOwner","type":"address"},{"internalType":"address","name":"oldOwner","type":"address"},{"internalType":"address","name":"newOwner","type":"address"}],"name":"swapOwner","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address[]","name":"_owners","type":"address[]"},{"internalType":"uint256","name":"_threshold","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"address","name":"fallbackHandler","type":"address"},{"internalType":"address","name":"paymentToken","type":"address"},{"internalType":"uint256","name":"payment","type":"uint256"},{"internalType":"address payable","name":"paymentReceiver","type":"address"}],"name":"setup","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"enum Enum.Operation","name":"operation","type":"uint8"},{"internalType":"uint256","name":"safeTxGas","type":"uint256"},{"internalType":"uint256","name":"baseGas","type":"uint256"},{"internalType":"uint256","name":"gasPrice","type":"uint256"},{"internalType":"address","name":"gasToken","type":"address"},{"internalType":"address payable","name":"refundReceiver","type":"address"},{"internalType":"bytes","name":"signatures","type":"bytes"}],"name":"execTransaction","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"enum Enum.Operation","name":"operation","type":"uint8"}],"name":"requiredTxGas","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"hashToApprove","type":"bytes32"}],"name":"approveHash","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"signMessage","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes","name":"_data","type":"bytes"},{"internalType":"bytes","name":"_signature","type":"bytes"}],"name":"isValidSignature","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes","name":"message","type":"bytes"}],"name":"getMessageHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"enum Enum.Operation","name":"operation","type":"uint8"},{"internalType":"uint256","name":"safeTxGas","type":"uint256"},{"internalType":"uint256","name":"baseGas","type":"uint256"},{"internalType":"uint256","name":"gasPrice","type":"uint256"},{"internalType":"address","name":"gasToken","type":"address"},{"internalType":"address","name":"refundReceiver","type":"address"},{"internalType":"uint256","name":"_nonce","type":"uint256"}],"name":"encodeTransactionData","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"enum Enum.Operation","name":"operation","type":"uint8"},{"internalType":"uint256","name":"safeTxGas","type":"uint256"},{"internalType":"uint256","name":"baseGas","type":"uint256"},{"internalType":"uint256","name":"gasPrice","type":"uint256"},{"internalType":"address","name":"gasToken","type":"address"},{"internalType":"address","name":"refundReceiver","type":"address"},{"internalType":"uint256","name":"_nonce","type":"uint256"}],"name":"getTransactionHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"}],"metadata":"{\\"compiler\\":{\\"version\\":\\"0.5.16+commit.9c3226ce\\"},\\"language\\":\\"Solidity\\",\\"output\\":{\\"abi\\":[{\\"inputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"constructor\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"internalType\\":\\"address\\",\\"name\\":\\"owner\\",\\"type\\":\\"address\\"}],\\"name\\":\\"AddedOwner\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"internalType\\":\\"bytes32\\",\\"name\\":\\"approvedHash\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"owner\\",\\"type\\":\\"address\\"}],\\"name\\":\\"ApproveHash\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"internalType\\":\\"address\\",\\"name\\":\\"masterCopy\\",\\"type\\":\\"address\\"}],\\"name\\":\\"ChangedMasterCopy\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"threshold\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"ChangedThreshold\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"internalType\\":\\"contract Module\\",\\"name\\":\\"module\\",\\"type\\":\\"address\\"}],\\"name\\":\\"DisabledModule\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"internalType\\":\\"contract Module\\",\\"name\\":\\"module\\",\\"type\\":\\"address\\"}],\\"name\\":\\"EnabledModule\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"internalType\\":\\"bytes32\\",\\"name\\":\\"txHash\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"payment\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"ExecutionFailure\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"module\\",\\"type\\":\\"address\\"}],\\"name\\":\\"ExecutionFromModuleFailure\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"module\\",\\"type\\":\\"address\\"}],\\"name\\":\\"ExecutionFromModuleSuccess\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"internalType\\":\\"bytes32\\",\\"name\\":\\"txHash\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"payment\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"ExecutionSuccess\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"internalType\\":\\"address\\",\\"name\\":\\"owner\\",\\"type\\":\\"address\\"}],\\"name\\":\\"RemovedOwner\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"internalType\\":\\"bytes32\\",\\"name\\":\\"msgHash\\",\\"type\\":\\"bytes32\\"}],\\"name\\":\\"SignMsg\\",\\"type\\":\\"event\\"},{\\"payable\\":true,\\"stateMutability\\":\\"payable\\",\\"type\\":\\"fallback\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"NAME\\",\\"outputs\\":[{\\"internalType\\":\\"string\\",\\"name\\":\\"\\",\\"type\\":\\"string\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"VERSION\\",\\"outputs\\":[{\\"internalType\\":\\"string\\",\\"name\\":\\"\\",\\"type\\":\\"string\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"owner\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_threshold\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"addOwnerWithThreshold\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"bytes32\\",\\"name\\":\\"hashToApprove\\",\\"type\\":\\"bytes32\\"}],\\"name\\":\\"approveHash\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"bytes32\\",\\"name\\":\\"\\",\\"type\\":\\"bytes32\\"}],\\"name\\":\\"approvedHashes\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"_masterCopy\\",\\"type\\":\\"address\\"}],\\"name\\":\\"changeMasterCopy\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_threshold\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"changeThreshold\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"contract Module\\",\\"name\\":\\"prevModule\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"contract Module\\",\\"name\\":\\"module\\",\\"type\\":\\"address\\"}],\\"name\\":\\"disableModule\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"domainSeparator\\",\\"outputs\\":[{\\"internalType\\":\\"bytes32\\",\\"name\\":\\"\\",\\"type\\":\\"bytes32\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"contract Module\\",\\"name\\":\\"module\\",\\"type\\":\\"address\\"}],\\"name\\":\\"enableModule\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"to\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"value\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"bytes\\",\\"name\\":\\"data\\",\\"type\\":\\"bytes\\"},{\\"internalType\\":\\"enum Enum.Operation\\",\\"name\\":\\"operation\\",\\"type\\":\\"uint8\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"safeTxGas\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"baseGas\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"gasPrice\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"address\\",\\"name\\":\\"gasToken\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"address\\",\\"name\\":\\"refundReceiver\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_nonce\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"encodeTransactionData\\",\\"outputs\\":[{\\"internalType\\":\\"bytes\\",\\"name\\":\\"\\",\\"type\\":\\"bytes\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"to\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"value\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"bytes\\",\\"name\\":\\"data\\",\\"type\\":\\"bytes\\"},{\\"internalType\\":\\"enum Enum.Operation\\",\\"name\\":\\"operation\\",\\"type\\":\\"uint8\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"safeTxGas\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"baseGas\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"gasPrice\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"address\\",\\"name\\":\\"gasToken\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"address payable\\",\\"name\\":\\"refundReceiver\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"bytes\\",\\"name\\":\\"signatures\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"execTransaction\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"success\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"to\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"value\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"bytes\\",\\"name\\":\\"data\\",\\"type\\":\\"bytes\\"},{\\"internalType\\":\\"enum Enum.Operation\\",\\"name\\":\\"operation\\",\\"type\\":\\"uint8\\"}],\\"name\\":\\"execTransactionFromModule\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"success\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"to\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"value\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"bytes\\",\\"name\\":\\"data\\",\\"type\\":\\"bytes\\"},{\\"internalType\\":\\"enum Enum.Operation\\",\\"name\\":\\"operation\\",\\"type\\":\\"uint8\\"}],\\"name\\":\\"execTransactionFromModuleReturnData\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"success\\",\\"type\\":\\"bool\\"},{\\"internalType\\":\\"bytes\\",\\"name\\":\\"returnData\\",\\"type\\":\\"bytes\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"internalType\\":\\"bytes\\",\\"name\\":\\"message\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"getMessageHash\\",\\"outputs\\":[{\\"internalType\\":\\"bytes32\\",\\"name\\":\\"\\",\\"type\\":\\"bytes32\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"getModules\\",\\"outputs\\":[{\\"internalType\\":\\"address[]\\",\\"name\\":\\"\\",\\"type\\":\\"address[]\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"start\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"pageSize\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"getModulesPaginated\\",\\"outputs\\":[{\\"internalType\\":\\"address[]\\",\\"name\\":\\"array\\",\\"type\\":\\"address[]\\"},{\\"internalType\\":\\"address\\",\\"name\\":\\"next\\",\\"type\\":\\"address\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"getOwners\\",\\"outputs\\":[{\\"internalType\\":\\"address[]\\",\\"name\\":\\"\\",\\"type\\":\\"address[]\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"getThreshold\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"to\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"value\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"bytes\\",\\"name\\":\\"data\\",\\"type\\":\\"bytes\\"},{\\"internalType\\":\\"enum Enum.Operation\\",\\"name\\":\\"operation\\",\\"type\\":\\"uint8\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"safeTxGas\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"baseGas\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"gasPrice\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"address\\",\\"name\\":\\"gasToken\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"address\\",\\"name\\":\\"refundReceiver\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_nonce\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"getTransactionHash\\",\\"outputs\\":[{\\"internalType\\":\\"bytes32\\",\\"name\\":\\"\\",\\"type\\":\\"bytes32\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"owner\\",\\"type\\":\\"address\\"}],\\"name\\":\\"isOwner\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"bytes\\",\\"name\\":\\"_data\\",\\"type\\":\\"bytes\\"},{\\"internalType\\":\\"bytes\\",\\"name\\":\\"_signature\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"isValidSignature\\",\\"outputs\\":[{\\"internalType\\":\\"bytes4\\",\\"name\\":\\"\\",\\"type\\":\\"bytes4\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"nonce\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"prevOwner\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"address\\",\\"name\\":\\"owner\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_threshold\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"removeOwner\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"to\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"value\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"bytes\\",\\"name\\":\\"data\\",\\"type\\":\\"bytes\\"},{\\"internalType\\":\\"enum Enum.Operation\\",\\"name\\":\\"operation\\",\\"type\\":\\"uint8\\"}],\\"name\\":\\"requiredTxGas\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"handler\\",\\"type\\":\\"address\\"}],\\"name\\":\\"setFallbackHandler\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"address[]\\",\\"name\\":\\"_owners\\",\\"type\\":\\"address[]\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_threshold\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"address\\",\\"name\\":\\"to\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"bytes\\",\\"name\\":\\"data\\",\\"type\\":\\"bytes\\"},{\\"internalType\\":\\"address\\",\\"name\\":\\"fallbackHandler\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"address\\",\\"name\\":\\"paymentToken\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"payment\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"address payable\\",\\"name\\":\\"paymentReceiver\\",\\"type\\":\\"address\\"}],\\"name\\":\\"setup\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"bytes\\",\\"name\\":\\"_data\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"signMessage\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"internalType\\":\\"bytes32\\",\\"name\\":\\"\\",\\"type\\":\\"bytes32\\"}],\\"name\\":\\"signedMessages\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"prevOwner\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"address\\",\\"name\\":\\"oldOwner\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"address\\",\\"name\\":\\"newOwner\\",\\"type\\":\\"address\\"}],\\"name\\":\\"swapOwner\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"}],\\"devdoc\\":{\\"author\\":\\"Stefan George - <stefan@gnosis.io>Richard Meissner - <richard@gnosis.io>Ricardo Guilherme Schmidt - (Status Research & Development GmbH) - Gas Token Payment\\",\\"methods\\":{\\"addOwnerWithThreshold(address,uint256)\\":{\\"details\\":\\"Allows to add a new owner to the Safe and update the threshold at the same time.      This can only be done via a Safe transaction.\\",\\"params\\":{\\"_threshold\\":\\"New threshold.\\",\\"owner\\":\\"New owner address.\\"}},\\"approveHash(bytes32)\\":{\\"details\\":\\"Marks a hash as approved. This can be used to validate a hash that is used by a signature.\\",\\"params\\":{\\"hashToApprove\\":\\"The hash that should be marked as approved for signatures that are verified by this contract.\\"}},\\"changeMasterCopy(address)\\":{\\"details\\":\\"Allows to upgrade the contract. This can only be done via a Safe transaction.\\",\\"params\\":{\\"_masterCopy\\":\\"New contract address.\\"}},\\"changeThreshold(uint256)\\":{\\"details\\":\\"Allows to update the number of required confirmations by Safe owners.      This can only be done via a Safe transaction.\\",\\"params\\":{\\"_threshold\\":\\"New threshold.\\"}},\\"disableModule(address,address)\\":{\\"details\\":\\"Allows to remove a module from the whitelist.      This can only be done via a Safe transaction.\\",\\"params\\":{\\"module\\":\\"Module to be removed.\\",\\"prevModule\\":\\"Module that pointed to the module to be removed in the linked list\\"}},\\"enableModule(address)\\":{\\"details\\":\\"Allows to add a module to the whitelist.      This can only be done via a Safe transaction.\\",\\"params\\":{\\"module\\":\\"Module to be whitelisted.\\"}},\\"encodeTransactionData(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,uint256)\\":{\\"details\\":\\"Returns the bytes that are hashed to be signed by owners.\\",\\"params\\":{\\"_nonce\\":\\"Transaction nonce.\\",\\"baseGas\\":\\"Gas costs for data used to trigger the safe transaction.\\",\\"data\\":\\"Data payload.\\",\\"gasPrice\\":\\"Maximum gas price that should be used for this transaction.\\",\\"gasToken\\":\\"Token address (or 0 if ETH) that is used for the payment.\\",\\"operation\\":\\"Operation type.\\",\\"refundReceiver\\":\\"Address of receiver of gas payment (or 0 if tx.origin).\\",\\"safeTxGas\\":\\"Fas that should be used for the safe transaction.\\",\\"to\\":\\"Destination address.\\",\\"value\\":\\"Ether value.\\"},\\"return\\":\\"Transaction hash bytes.\\"},\\"execTransaction(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,bytes)\\":{\\"details\\":\\"Allows to execute a Safe transaction confirmed by required number of owners and then pays the account that submitted the transaction.      Note: The fees are always transfered, even if the user transaction fails.\\",\\"params\\":{\\"baseGas\\":\\"Gas costs for that are indipendent of the transaction execution(e.g. base transaction fee, signature check, payment of the refund)\\",\\"data\\":\\"Data payload of Safe transaction.\\",\\"gasPrice\\":\\"Gas price that should be used for the payment calculation.\\",\\"gasToken\\":\\"Token address (or 0 if ETH) that is used for the payment.\\",\\"operation\\":\\"Operation type of Safe transaction.\\",\\"refundReceiver\\":\\"Address of receiver of gas payment (or 0 if tx.origin).\\",\\"safeTxGas\\":\\"Gas that should be used for the Safe transaction.\\",\\"signatures\\":\\"Packed signature data ({bytes32 r}{bytes32 s}{uint8 v})\\",\\"to\\":\\"Destination address of Safe transaction.\\",\\"value\\":\\"Ether value of Safe transaction.\\"}},\\"execTransactionFromModule(address,uint256,bytes,uint8)\\":{\\"details\\":\\"Allows a Module to execute a Safe transaction without any further confirmations.\\",\\"params\\":{\\"data\\":\\"Data payload of module transaction.\\",\\"operation\\":\\"Operation type of module transaction.\\",\\"to\\":\\"Destination address of module transaction.\\",\\"value\\":\\"Ether value of module transaction.\\"}},\\"execTransactionFromModuleReturnData(address,uint256,bytes,uint8)\\":{\\"details\\":\\"Allows a Module to execute a Safe transaction without any further confirmations and return data\\",\\"params\\":{\\"data\\":\\"Data payload of module transaction.\\",\\"operation\\":\\"Operation type of module transaction.\\",\\"to\\":\\"Destination address of module transaction.\\",\\"value\\":\\"Ether value of module transaction.\\"}},\\"getMessageHash(bytes)\\":{\\"details\\":\\"Returns hash of a message that can be signed by owners.\\",\\"params\\":{\\"message\\":\\"Message that should be hashed\\"},\\"return\\":\\"Message hash.\\"},\\"getModules()\\":{\\"details\\":\\"Returns array of first 10 modules.\\",\\"return\\":\\"Array of modules.\\"},\\"getModulesPaginated(address,uint256)\\":{\\"details\\":\\"Returns array of modules.\\",\\"params\\":{\\"pageSize\\":\\"Maximum number of modules that should be returned.\\",\\"start\\":\\"Start of the page.\\"},\\"return\\":\\"Array of modules.\\"},\\"getOwners()\\":{\\"details\\":\\"Returns array of owners.\\",\\"return\\":\\"Array of Safe owners.\\"},\\"getTransactionHash(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,uint256)\\":{\\"details\\":\\"Returns hash to be signed by owners.\\",\\"params\\":{\\"_nonce\\":\\"Transaction nonce.\\",\\"baseGas\\":\\"Gas costs for data used to trigger the safe transaction.\\",\\"data\\":\\"Data payload.\\",\\"gasPrice\\":\\"Maximum gas price that should be used for this transaction.\\",\\"gasToken\\":\\"Token address (or 0 if ETH) that is used for the payment.\\",\\"operation\\":\\"Operation type.\\",\\"refundReceiver\\":\\"Address of receiver of gas payment (or 0 if tx.origin).\\",\\"safeTxGas\\":\\"Fas that should be used for the safe transaction.\\",\\"to\\":\\"Destination address.\\",\\"value\\":\\"Ether value.\\"},\\"return\\":\\"Transaction hash.\\"},\\"isValidSignature(bytes,bytes)\\":{\\"details\\":\\"Should return whether the signature provided is valid for the provided data.      The save does not implement the interface since `checkSignatures` is not a view method.      The method will not perform any state changes (see parameters of `checkSignatures`)\\",\\"params\\":{\\"_data\\":\\"Arbitrary length data signed on the behalf of address(this)\\",\\"_signature\\":\\"Signature byte array associated with _data\\"},\\"return\\":\\"a bool upon valid or invalid signature with corresponding _data\\"},\\"removeOwner(address,address,uint256)\\":{\\"details\\":\\"Allows to remove an owner from the Safe and update the threshold at the same time.      This can only be done via a Safe transaction.\\",\\"params\\":{\\"_threshold\\":\\"New threshold.\\",\\"owner\\":\\"Owner address to be removed.\\",\\"prevOwner\\":\\"Owner that pointed to the owner to be removed in the linked list\\"}},\\"requiredTxGas(address,uint256,bytes,uint8)\\":{\\"details\\":\\"Allows to estimate a Safe transaction.      This method is only meant for estimation purpose, therefore two different protection mechanism against execution in a transaction have been made:      1.) The method can only be called from the safe itself      2.) The response is returned with a revert      When estimating set `from` to the address of the safe.      Since the `estimateGas` function includes refunds, call this method to get an estimated of the costs that are deducted from the safe with `execTransaction`\\",\\"params\\":{\\"data\\":\\"Data payload of Safe transaction.\\",\\"operation\\":\\"Operation type of Safe transaction.\\",\\"to\\":\\"Destination address of Safe transaction.\\",\\"value\\":\\"Ether value of Safe transaction.\\"},\\"return\\":\\"Estimate without refunds and overhead fees (base transaction and payload data gas costs).\\"},\\"setFallbackHandler(address)\\":{\\"details\\":\\"Allows to add a contract to handle fallback calls.      Only fallback calls without value and with data will be forwarded.      This can only be done via a Safe transaction.\\",\\"params\\":{\\"handler\\":\\"contract to handle fallbacks calls.\\"}},\\"setup(address[],uint256,address,bytes,address,address,uint256,address)\\":{\\"details\\":\\"Setup function sets initial storage of contract.\\",\\"params\\":{\\"_owners\\":\\"List of Safe owners.\\",\\"_threshold\\":\\"Number of required confirmations for a Safe transaction.\\",\\"data\\":\\"Data payload for optional delegate call.\\",\\"fallbackHandler\\":\\"Handler for fallback calls to this contract\\",\\"payment\\":\\"Value that should be paid\\",\\"paymentReceiver\\":\\"Adddress that should receive the payment (or 0 if tx.origin)\\",\\"paymentToken\\":\\"Token that should be used for the payment (0 is ETH)\\",\\"to\\":\\"Contract address for optional delegate call.\\"}},\\"signMessage(bytes)\\":{\\"details\\":\\"Marks a message as signed\\",\\"params\\":{\\"_data\\":\\"Arbitrary length data that should be marked as signed on the behalf of address(this)\\"}},\\"swapOwner(address,address,address)\\":{\\"details\\":\\"Allows to swap/replace an owner from the Safe with another address.      This can only be done via a Safe transaction.\\",\\"params\\":{\\"newOwner\\":\\"New owner address.\\",\\"oldOwner\\":\\"Owner address to be replaced.\\",\\"prevOwner\\":\\"Owner that pointed to the owner to be replaced in the linked list\\"}}},\\"title\\":\\"Gnosis Safe - A multisignature wallet with support for confirmations using signed messages based on ERC191.\\"},\\"userdoc\\":{\\"methods\\":{\\"isValidSignature(bytes,bytes)\\":{\\"notice\\":\\"Implementation of ISignatureValidator (see `interfaces/ISignatureValidator.sol`)\\"}}}},\\"settings\\":{\\"compilationTarget\\":{\\"/mnt/d/Richard/Projects/safe-contracts/contracts/GnosisSafe.sol\\":\\"GnosisSafe\\"},\\"evmVersion\\":\\"istanbul\\",\\"libraries\\":{},\\"optimizer\\":{\\"enabled\\":false,\\"runs\\":200},\\"remappings\\":[]},\\"sources\\":{\\"/mnt/d/Richard/Projects/safe-contracts/contracts/GnosisSafe.sol\\":{\\"keccak256\\":\\"0xdfd7bf82cd4763e161c7d2fdcfb403978534cbbd4fa9d191fb102afd751d1657\\",\\"urls\\":[\\"bzz-raw://a347b3d31ae1acdcaf2ff2173d89cb45131c76ad2bf63392ce361294636a9029\\",\\"dweb:/ipfs/QmZggLvsosR1etmYqTnpLHLynakrap2NXRfLSPm3xiNJXg\\"]},\\"/mnt/d/Richard/Projects/safe-contracts/contracts/base/Executor.sol\\":{\\"keccak256\\":\\"0xd2835623a200b6f14979751aff14e48362b5db0d86fff17dfb6a982790ff6c67\\",\\"urls\\":[\\"bzz-raw://df85c3b4dc546ffd8790a155bf6190b55168a69f469624a9134f1e7a9e079880\\",\\"dweb:/ipfs/QmXozPPHk7KAyoihdx4FEn4dEaR2x9yDJthQcZPR3Knxpv\\"]},\\"/mnt/d/Richard/Projects/safe-contracts/contracts/base/FallbackManager.sol\\":{\\"keccak256\\":\\"0x18baeb026940c7a06ee4aceebed0118b920468777e2f08a45d39c0983ee57523\\",\\"urls\\":[\\"bzz-raw://75ec51dbc17c5e5c6701ed6809ea6c0d8bbd8dfdca944ed00d64d6f96fde98f0\\",\\"dweb:/ipfs/QmTbJz9p6oro7MCZKHBBBeoowQNYv7raQnoC5bfWxoQ4vR\\"]},\\"/mnt/d/Richard/Projects/safe-contracts/contracts/base/Module.sol\\":{\\"keccak256\\":\\"0x0d168bb2c28fe04185e992692705925d700ecc32692e1a1f997478c55722b9ad\\",\\"urls\\":[\\"bzz-raw://72b39ab237628e99e68b89269a99efbf7f4c977ce8dcda9e947e74ffffc2bf36\\",\\"dweb:/ipfs/QmekYYrv5X2wdg2QqaP96qhkxpwTT8nt47CHvuBxzHv9hp\\"]},\\"/mnt/d/Richard/Projects/safe-contracts/contracts/base/ModuleManager.sol\\":{\\"keccak256\\":\\"0xd1f41edf7fd05526882d77b9517155b5c2d30839aab3b019658d923355706c58\\",\\"urls\\":[\\"bzz-raw://b322ec622fe7860c63d7f8de376db60a58c8db37c6cedaf466ebd5de8776431a\\",\\"dweb:/ipfs/QmYor9Qm7mRyXa55VDz9Rcbf82QE2bmi9yFP5c2kMw15mk\\"]},\\"/mnt/d/Richard/Projects/safe-contracts/contracts/base/OwnerManager.sol\\":{\\"keccak256\\":\\"0xd35138614ba872903e32335245e37afebbc5ebecc2ae6dce74a90623695842c0\\",\\"urls\\":[\\"bzz-raw://caa24730520469e1f40bf072d4582f5843bb37e0a04ef09b786cab7998d28d49\\",\\"dweb:/ipfs/QmbTiyea585HTmRpYtiNRozcRjyQmhMB9ijjNhKBSfMeYN\\"]},\\"/mnt/d/Richard/Projects/safe-contracts/contracts/common/Enum.sol\\":{\\"keccak256\\":\\"0x7bc6e5afb9436d9f7e376c2cdba51ca1f337e1b31c04cca5769db3a77ed40081\\",\\"urls\\":[\\"bzz-raw://88b3a68baaff962b69b040af62698034bf9c99319e4a6dce71abc2c0c88fba91\\",\\"dweb:/ipfs/QmTefyhXcMALQew96u7YRLQBnye9vapqkKBWxbynWpMHDM\\"]},\\"/mnt/d/Richard/Projects/safe-contracts/contracts/common/MasterCopy.sol\\":{\\"keccak256\\":\\"0x1577fad0dc06cb3ac2c7d66816a00d3b70c053a21ab5834ec7aceace9a7803a7\\",\\"urls\\":[\\"bzz-raw://7f23c1e11ebb2fbd3b55a4074b4a9f343c0ac02b372cbbe66a90d71a88ce1885\\",\\"dweb:/ipfs/QmexSrdAm4DqBjGi29yQTxSGKqJ5qC8jy1b5NJH6Zy9Cvh\\"]},\\"/mnt/d/Richard/Projects/safe-contracts/contracts/common/SecuredTokenTransfer.sol\\":{\\"keccak256\\":\\"0xefb71775825579db9bab375c4e620deaf266b00a3e8c49ba382551c1dc3b66e9\\",\\"urls\\":[\\"bzz-raw://4c57d5ba7c81d72c0e537e68bc957c7429110447dc307f2a4b054594d1068603\\",\\"dweb:/ipfs/QmeEYz4hKpfpHLU8D1BDutWa1ZBav2idBfhWxtXZtrb8Vp\\"]},\\"/mnt/d/Richard/Projects/safe-contracts/contracts/common/SelfAuthorized.sol\\":{\\"keccak256\\":\\"0x4c4f094227fc466846a97fe375c47ecdfcab050c303baeb69b5970d28db717a6\\",\\"urls\\":[\\"bzz-raw://42759fe6b2433ea24fd0fbe98a144ef55e464f87861a13aa364db8a6f4a01cf1\\",\\"dweb:/ipfs/QmTWPnHdfcBbddkMJxvEvoWs3CZoKB5rtz3s8K2ii9z9CG\\"]},\\"/mnt/d/Richard/Projects/safe-contracts/contracts/common/SignatureDecoder.sol\\":{\\"keccak256\\":\\"0x9d6196319963155fd0a1dd45e6d4992489da251e18572c2fc62084482edb37a9\\",\\"urls\\":[\\"bzz-raw://0298c7d98d2368bc99ae8d28befc8d40250fd7128f45095321d3c9e199fec74b\\",\\"dweb:/ipfs/QmPK4Q2mSnsEuv5ayyDAzURAksYXmbbALQ2Z5xUcfx1q4K\\"]},\\"/mnt/d/Richard/Projects/safe-contracts/contracts/external/GnosisSafeMath.sol\\":{\\"keccak256\\":\\"0xd1e8bb20e155e717ee4d3e82bee7cf461e10be78d02647ed961e73d5716b66bc\\",\\"urls\\":[\\"bzz-raw://8ba8c3fcd407da9691ad4e0c7f1d91b67cfe568aab8338c0a47f704b86fd12c6\\",\\"dweb:/ipfs/QmZLfsQrX9uyaRL1hFN1y6uzze1ZyyhQGTtbxuaCABqJYY\\"]},\\"/mnt/d/Richard/Projects/safe-contracts/contracts/interfaces/ISignatureValidator.sol\\":{\\"keccak256\\":\\"0xb75555e8e2bbbe38c55e164dde9761a016b0b4f1b0004b93d7ec2acd873faca4\\",\\"urls\\":[\\"bzz-raw://5985325d13e7aedb3036e9f342e740c14bf57b6202b11c2a36f95867f8c9ad5e\\",\\"dweb:/ipfs/QmTRKm25xk4jsTQHww3JtaU9fNp1BiM6SKoUNp5LrcLyo5\\"]}},\\"version\\":1}","bytecode":"0x608060405234801561001057600080fd5b506001600481905550615de880620000296000396000f3fe6080604052600436106101cd5760003560e01c8063affed0e0116100f7578063e009cfde11610095578063f08a032311610064578063f08a032314611504578063f698da2514611555578063f8dc5dd914611580578063ffa1ad74146115fb576101cd565b8063e009cfde146111f6578063e318b52b14611267578063e75235b8146112f8578063e86637db14611323576101cd565b8063c4ca3a9c116100d1578063c4ca3a9c14610e8b578063cc2f845214610f5c578063d4d9bdcd1461103f578063d8d11f781461107a576101cd565b8063affed0e014610c84578063b2494df314610caf578063b63e800d14610d1b576101cd565b8063610b59251161016f5780637de7edef1161013e5780637de7edef14610ab157806385a5affe14610b02578063a0e67e2b14610b88578063a3f4df7e14610bf4576101cd565b8063610b59251461082d578063694e80c31461087e5780636a761202146108b95780637d83297414610a42576101cd565b80632f54bf6e116101ab5780632f54bf6e146104db578063468721a7146105445780635229073f1461065b5780635ae6bd37146107de576101cd565b80630a1028c4146102775780630d582f131461035357806320c13b0b146103ae575b60003411806101df5750600080369050145b156101e957610275565b60007f6c9a6c4a39284e37ed1cf53d337577d14212a4870fb976a4366c693b939918d560001b9050600081549050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461027257366000803760008036600080855af13d6000803e600081141561026d573d6000fd5b3d6000f35b50505b005b34801561028357600080fd5b5061033d6004803603602081101561029a57600080fd5b81019080803590602001906401000000008111156102b757600080fd5b8201836020820111156102c957600080fd5b803590602001918460018302840111640100000000831117156102eb57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061168b565b6040518082815260200191505060405180910390f35b34801561035f57600080fd5b506103ac6004803603604081101561037657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506117c2565b005b3480156103ba57600080fd5b50610487600480360360408110156103d157600080fd5b81019080803590602001906401000000008111156103ee57600080fd5b82018360208201111561040057600080fd5b8035906020019184600183028401116401000000008311171561042257600080fd5b90919293919293908035906020019064010000000081111561044357600080fd5b82018360208201111561045557600080fd5b8035906020019184600183028401116401000000008311171561047757600080fd5b9091929391929390505050611c0c565b60405180827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200191505060405180910390f35b3480156104e757600080fd5b5061052a600480360360208110156104fe57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611da2565b604051808215151515815260200191505060405180910390f35b34801561055057600080fd5b506106416004803603608081101561056757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001906401000000008111156105ae57600080fd5b8201836020820111156105c057600080fd5b803590602001918460018302840111640100000000831117156105e257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803560ff169060200190929190505050611e74565b604051808215151515815260200191505060405180910390f35b34801561066757600080fd5b506107586004803603608081101561067e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001906401000000008111156106c557600080fd5b8201836020820111156106d757600080fd5b803590602001918460018302840111640100000000831117156106f957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803560ff16906020019092919050505061203d565b604051808315151515815260200180602001828103825283818151815260200191508051906020019080838360005b838110156107a2578082015181840152602081019050610787565b50505050905090810190601f1680156107cf5780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b3480156107ea57600080fd5b506108176004803603602081101561080157600080fd5b8101908080359060200190929190505050612073565b6040518082815260200191505060405180910390f35b34801561083957600080fd5b5061087c6004803603602081101561085057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061208b565b005b34801561088a57600080fd5b506108b7600480360360208110156108a157600080fd5b81019080803590602001909291905050506124af565b005b3480156108c557600080fd5b50610a2860048036036101408110156108dd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019064010000000081111561092457600080fd5b82018360208201111561093657600080fd5b8035906020019184600183028401116401000000008311171561095857600080fd5b9091929391929390803560ff169060200190929190803590602001909291908035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001906401000000008111156109e457600080fd5b8201836020820111156109f657600080fd5b80359060200191846001830284011164010000000083111715610a1857600080fd5b909192939192939050505061262b565b604051808215151515815260200191505060405180910390f35b348015610a4e57600080fd5b50610a9b60048036036040811015610a6557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612894565b6040518082815260200191505060405180910390f35b348015610abd57600080fd5b50610b0060048036036020811015610ad457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506128b9565b005b348015610b0e57600080fd5b50610b8660048036036020811015610b2557600080fd5b8101908080359060200190640100000000811115610b4257600080fd5b820183602082011115610b5457600080fd5b80359060200191846001830284011164010000000083111715610b7657600080fd5b9091929391929390505050612a69565b005b348015610b9457600080fd5b50610b9d612b89565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610be0578082015181840152602081019050610bc5565b505050509050019250505060405180910390f35b348015610c0057600080fd5b50610c09612d1e565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610c49578082015181840152602081019050610c2e565b50505050905090810190601f168015610c765780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610c9057600080fd5b50610c99612d57565b6040518082815260200191505060405180910390f35b348015610cbb57600080fd5b50610cc4612d5d565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610d07578082015181840152602081019050610cec565b505050509050019250505060405180910390f35b348015610d2757600080fd5b50610e896004803603610100811015610d3f57600080fd5b8101908080359060200190640100000000811115610d5c57600080fd5b820183602082011115610d6e57600080fd5b80359060200191846020830284011164010000000083111715610d9057600080fd5b909192939192939080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190640100000000811115610ddb57600080fd5b820183602082011115610ded57600080fd5b80359060200191846001830284011164010000000083111715610e0f57600080fd5b9091929391929390803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612d76565b005b348015610e9757600080fd5b50610f4660048036036080811015610eae57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115610ef557600080fd5b820183602082011115610f0757600080fd5b80359060200191846001830284011164010000000083111715610f2957600080fd5b9091929391929390803560ff169060200190929190505050612f71565b6040518082815260200191505060405180910390f35b348015610f6857600080fd5b50610fb560048036036040811015610f7f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061311e565b60405180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825284818151815260200191508051906020019060200280838360005b8381101561102a57808201518184015260208101905061100f565b50505050905001935050505060405180910390f35b34801561104b57600080fd5b506110786004803603602081101561106257600080fd5b81019080803590602001909291905050506132fd565b005b34801561108657600080fd5b506111e0600480360361014081101561109e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001906401000000008111156110e557600080fd5b8201836020820111156110f757600080fd5b8035906020019184600183028401116401000000008311171561111957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803560ff169060200190929190803590602001909291908035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061349c565b6040518082815260200191505060405180910390f35b34801561120257600080fd5b506112656004803603604081101561121957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506134c7565b005b34801561127357600080fd5b506112f66004803603606081101561128a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506138cd565b005b34801561130457600080fd5b5061130d613f92565b6040518082815260200191505060405180910390f35b34801561132f57600080fd5b50611489600480360361014081101561134757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019064010000000081111561138e57600080fd5b8201836020820111156113a057600080fd5b803590602001918460018302840111640100000000831117156113c257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803560ff169060200190929190803590602001909291908035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050613f9c565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156114c95780820151818401526020810190506114ae565b50505050905090810190601f1680156114f65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561151057600080fd5b506115536004803603602081101561152757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506141b0565b005b34801561156157600080fd5b5061156a614240565b6040518082815260200191505060405180910390f35b34801561158c57600080fd5b506115f9600480360360608110156115a357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050614246565b005b34801561160757600080fd5b506116106146d1565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015611650578082015181840152602081019050611635565b50505050905090810190601f16801561167d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6000807f60b3cbf8b4a223d68d641b3b6ddf9a298e7f33710cf3d3a9d1146b5a6150fbca60001b83805190602001206040516020018083815260200182815260200192505050604051602081830303815290604052805190602001209050601960f81b600160f81b6006548360405160200180857effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152600101847effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260010183815260200182815260200194505050505060405160208183030381529060405280519060200120915050919050565b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611846576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180615cd5602c913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141580156118b05750600173ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b611922576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f496e76616c6964206f776e657220616464726573732070726f7669646564000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611a23576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f4164647265737320697320616c726561647920616e206f776e6572000000000081525060200191505060405180910390fd5b60026000600173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160026000600173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506003600081548092919060010191905055507f9465fa0c962cc76958e6373a993326400c1c94f8be2fe3a952adfa7f60b2ea2682604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a18060045414611c0857611c07816124af565b5b5050565b600080611c5c86868080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505061168b565b90506000848490501415611cf957600060076000838152602001908152602001600020541415611cf4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f48617368206e6f7420617070726f76656400000000000000000000000000000081525060200191505060405180910390fd5b611d8f565b611d8e8187878080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505086868080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050600061470a565b5b6320c13b0b60e01b915050949350505050565b6000600173ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614158015611e6d5750600073ffffffffffffffffffffffffffffffffffffffff16600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b9050919050565b6000600173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614158015611f3f5750600073ffffffffffffffffffffffffffffffffffffffff16600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b611f94576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526030815260200180615d016030913960400191505060405180910390fd5b611fa1858585855a615038565b90508015611ff1573373ffffffffffffffffffffffffffffffffffffffff167f6895c13664aa4f67288b25d7a21d7aaa34916e355fb9b6fae0a139a9085becb860405160405180910390a2612035565b3373ffffffffffffffffffffffffffffffffffffffff167facd2c8702804128fdb0db2bb49f6d127dd0181c13fd45dbfe16de0930e2bd37560405160405180910390a25b949350505050565b6000606061204d86868686611e74565b915060405160203d0181016040523d81523d6000602083013e8091505094509492505050565b60076020528060005260406000206000915090505481565b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461210f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180615cd5602c913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141580156121795750600173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b6121eb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f496e76616c6964206d6f64756c6520616464726573732070726f76696465640081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146122ec576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f4d6f64756c652068617320616c7265616479206265656e20616464656400000081525060200191505060405180910390fd5b60016000600173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060016000600173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fecdf3a3effea5783a3c4c2140e677577666428d44ed9d474a0b3a4c9943f844081604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612533576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180615cd5602c913960400191505060405180910390fd5b60035481111561258e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180615ba46023913960400191505060405180910390fd5b60018110156125e8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180615c7a6024913960400191505060405180910390fd5b806004819055507f610f7ff2b304ae8903c3de74c60c6ab1f7d6226b3f52c5161905bb5ad4039c936004546040518082815260200191505060405180910390a150565b60008060606126888f8f8f8f8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508e8e8e8e8e8e600554613f9c565b9050600560008154809291906001019190505550808051906020012091506126f7828287878080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050600161470a565b50885a1015612751576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180615d8a602a913960400191505060405180910390fd5b60005a90506127c28f8f8f8f8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508e60008f1480156127b1575060008d145b6127bb578e6127bd565b5a5b615038565b92506127d75a826150aa90919063ffffffff16565b9050600080905060008911156127f7576127f4828b8b8b8b6150ca565b90505b8315612841577f442e715f626346e8c54381002da614f62bee8d27386535b2521ec8540898556e8382604051808381526020018281526020019250505060405180910390a1612881565b7f23428b18acfb3ea64b08dc0c1d296ea9c09702c09083ca5272e64d115b687d238382604051808381526020018281526020019250505060405180910390a15b5050509c9b505050505050505050505050565b6008602052816000526040600020602052806000526040600020600091509150505481565b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461293d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180615cd5602c913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156129c3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180615b106024913960400191505060405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f75e41bc35ff1bf14d81d1d2f649c0084a0f974f9289c803ec9898eeec4c8d0b881604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612aed576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180615cd5602c913960400191505060405180910390fd5b6000612b3c83838080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505061168b565b905060016007600083815260200190815260200160002081905550807fe7f4675038f4f6034dfcbbb24c4dc08e4ebf10eb9d257d3d02c0f38d122ac6e460405160405180910390a2505050565b606080600354604051908082528060200260200182016040528015612bbd5781602001602082028038833980820191505090505b5090506000809050600060026000600173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505b600173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614612d155780838381518110612c6c57fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508180600101925050612c2b565b82935050505090565b6040518060400160405280600b81526020017f476e6f736973205361666500000000000000000000000000000000000000000081525081565b60055481565b606080612d6c6001600a61311e565b5090508091505090565b6000801b60065414612df0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f446f6d61696e20536570617261746f7220616c7265616479207365742100000081525060200191505060405180910390fd5b7f035aff83d86937d35b32e04f0ddc6ff469290eef2f1b692d8a815c89404d474960001b30604051602001808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405160208183030381529060405280519060200120600681905550612ebf8a8a80806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505089615296565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614612efd57612efc846156ef565b5b612f4b8787878080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505061571e565b6000821115612f6557612f63826000600186856150ca565b505b50505050505050505050565b60003073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612ff7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180615cd5602c913960400191505060405180910390fd5b60005a905061304d878787878080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050865a615038565b61305657600080fd5b60005a8203905080604051602001808281526020019150506040516020818303038152906040526040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156130e35780820151818401526020810190506130c8565b50505050905090810190601f1680156131105780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b60606000826040519080825280602002602001820160405280156131515781602001602082028038833980820191505090505b50915060008090506000600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141580156132285750600173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b801561323357508482105b156132ee578084838151811061324557fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081806001019250506131be565b80925081845250509250929050565b600073ffffffffffffffffffffffffffffffffffffffff16600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156133ff576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f4f6e6c79206f776e6572732063616e20617070726f766520612068617368000081525060200191505060405180910390fd5b6001600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff16817ff2a0eb156472d1440255b0d7c1e19cc07115d1051fe605b0dce69acfec884d9c60405160405180910390a350565b60006134b08b8b8b8b8b8b8b8b8b8b613f9c565b8051906020012090509a9950505050505050505050565b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461354b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180615cd5602c913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141580156135b55750600173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b613627576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f496e76616c6964206d6f64756c6520616464726573732070726f76696465640081525060200191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461370a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526028815260200180615b7c6028913960400191505060405180910390fd5b600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507faab4fa2b463f581b2b32cb3b7e3b704b9ce37cc209b5fb4d77e593ace405427681604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a15050565b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614613951576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180615cd5602c913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141580156139bb5750600173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b613a2d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f496e76616c6964206f776e657220616464726573732070726f7669646564000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614613b2e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f4164647265737320697320616c726561647920616e206f776e6572000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614158015613b985750600173ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b613c0a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f496e76616c6964206f776e657220616464726573732070726f7669646564000081525060200191505060405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff16600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614613ced576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180615c1e6026913960400191505060405180910390fd5b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507ff8d49fc529812e9a7c5c50e69c20f0dccc0db8fa95c98bc58cc9a4f1c1299eaf82604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a17f9465fa0c962cc76958e6373a993326400c1c94f8be2fe3a952adfa7f60b2ea2681604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1505050565b6000600454905090565b606060007fbb8310d486368db6bd6f849402fdd73ad53d316b5a4b2644ad6efe0f941286d860001b8c8c8c805190602001208c8c8c8c8c8c8c604051602001808c81526020018b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018a815260200189815260200188600181111561402c57fe5b60ff1681526020018781526020018681526020018581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019b505050505050505050505050604051602081830303815290604052805190602001209050601960f81b600160f81b6006548360405160200180857effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152600101847effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526001018381526020018281526020019450505050506040516020818303038152906040529150509a9950505050505050505050565b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614614234576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180615cd5602c913960400191505060405180910390fd5b61423d816156ef565b50565b60065481565b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146142ca576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180615cd5602c913960400191505060405180910390fd5b806001600354031015614328576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526035815260200180615bc76035913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141580156143925750600173ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b614404576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f496e76616c6964206f776e657220616464726573732070726f7669646564000081525060200191505060405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff16600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146144e7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180615c1e6026913960400191505060405180910390fd5b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600360008154809291906001900391905055507ff8d49fc529812e9a7c5c50e69c20f0dccc0db8fa95c98bc58cc9a4f1c1299eaf82604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a180600454146146cc576146cb816124af565b5b505050565b6040518060400160405280600581526020017f312e312e3100000000000000000000000000000000000000000000000000000081525081565b6000600454905060008111614787576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f5468726573686f6c64206e6565647320746f20626520646566696e656421000081525060200191505060405180910390fd5b61479b60418261593890919063ffffffff16565b83511015614811576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f5369676e617475726573206461746120746f6f2073686f72740000000000000081525060200191505060405180910390fd5b600080905060008060008060008090505b8681101561502b576148348982615972565b80945081955082965050505060008460ff161415614bc9578260001c945061486660418861593890919063ffffffff16565b8260001c10156148c1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526037815260200180615c9e6037913960400191505060405180910390fd5b88516148da60208460001c6159a190919063ffffffff16565b1115614931576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526037815260200180615d316037913960400191505060405180910390fd5b60006020838b010151905089516149678261495960208760001c6159a190919063ffffffff16565b6159a190919063ffffffff16565b11156149be576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526036815260200180615c446036913960400191505060405180910390fd5b60606020848c010190506320c13b0b60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168773ffffffffffffffffffffffffffffffffffffffff166320c13b0b8e846040518363ffffffff1660e01b8152600401808060200180602001838103835285818151815260200191508051906020019080838360005b83811015614a60578082015181840152602081019050614a45565b50505050905090810190601f168015614a8d5780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b83811015614ac6578082015181840152602081019050614aab565b50505050905090810190601f168015614af35780820380516001836020036101000a031916815260200191505b5094505050505060206040518083038186803b158015614b1257600080fd5b505afa158015614b26573d6000803e3d6000fd5b505050506040513d6020811015614b3c57600080fd5b81019080805190602001909291905050507bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614614bc2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180615b596023913960400191505060405180910390fd5b5050614ea9565b60018460ff161415614d72578260001c94508473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480614c6657506000600860008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008d81526020019081526020016000205414155b614cd8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f4861736820686173206e6f74206265656e20617070726f76656400000000000081525060200191505060405180910390fd5b878015614d1157508473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614155b15614d6d576000600860008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008d8152602001908152602001600020819055505b614ea8565b601e8460ff161115614e3d5760018b60405160200180807f19457468657265756d205369676e6564204d6573736167653a0a333200000000815250601c018281526020019150506040516020818303038152906040528051906020012060048603858560405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015614e2c573d6000803e3d6000fd5b505050602060405103519450614ea7565b60018b85858560405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015614e9a573d6000803e3d6000fd5b5050506020604051035194505b5b5b8573ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16118015614f705750600073ffffffffffffffffffffffffffffffffffffffff16600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b8015614fa95750600173ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614155b61501b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f496e76616c6964206f776e65722070726f76696465640000000000000000000081525060200191505060405180910390fd5b8495508080600101915050614822565b5050505050505050505050565b600080600181111561504657fe5b83600181111561505257fe5b141561506b57615064868686856159c0565b90506150a1565b60018081111561507757fe5b83600181111561508357fe5b141561509b576150948685846159d9565b90506150a0565b600090505b5b95945050505050565b6000828211156150b957600080fd5b600082840390508091505092915050565b600080600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146151075782615109565b325b9050600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415615204576151733a8610615150573a615152565b855b615165888a6159a190919063ffffffff16565b61593890919063ffffffff16565b91508073ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f193505050506151ff576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180615d686022913960400191505060405180910390fd5b61528c565b6152298561521b888a6159a190919063ffffffff16565b61593890919063ffffffff16565b91506152368482846159f0565b61528b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180615bfc6022913960400191505060405180910390fd5b5b5095945050505050565b60006004541461530e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f4f776e657273206861766520616c7265616479206265656e207365747570000081525060200191505060405180910390fd5b8151811115615368576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180615ba46023913960400191505060405180910390fd5b60018110156153c2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180615c7a6024913960400191505060405180910390fd5b60006001905060008090505b835181101561565b5760008482815181106153e557fe5b60200260200101519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141580156154595750600173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b6154cb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f496e76616c6964206f776e657220616464726573732070726f7669646564000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146155cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4475706c6963617465206f776e657220616464726573732070726f766964656481525060200191505060405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508092505080806001019150506153ce565b506001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550825160038190555081600481905550505050565b60007f6c9a6c4a39284e37ed1cf53d337577d14212a4870fb976a4366c693b939918d560001b90508181555050565b600073ffffffffffffffffffffffffffffffffffffffff1660016000600173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614615803576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180615b346025913960400191505060405180910390fd5b6001806000600173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614615934576158c182825a6159d9565b615933576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f436f756c64206e6f742066696e69736820696e697469616c697a6174696f6e0081525060200191505060405180910390fd5b5b5050565b60008083141561594b576000905061596c565b600082840290508284828161595c57fe5b041461596757600080fd5b809150505b92915050565b60008060008360410260208101860151925060408101860151915060ff60418201870151169350509250925092565b6000808284019050838110156159b657600080fd5b8091505092915050565b6000806000845160208601878987f19050949350505050565b60008060008451602086018786f490509392505050565b600060608383604051602401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001925050506040516020818303038152906040527fa9059cbb000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090506000808251602084016000896127105a03f16040513d81016040523d6000823e3d60008114615af25760208114615afa5760009450615b04565b829450615b04565b8151158315171594505b50505050939250505056fe496e76616c6964206d617374657220636f707920616464726573732070726f76696465644d6f64756c6573206861766520616c7265616479206265656e20696e697469616c697a6564496e76616c696420636f6e7472616374207369676e61747572652070726f7669646564496e76616c696420707265764d6f64756c652c206d6f64756c6520706169722070726f76696465645468726573686f6c642063616e6e6f7420657863656564206f776e657220636f756e744e6577206f776e657220636f756e74206e6565647320746f206265206c6172676572207468616e206e6577207468726573686f6c64436f756c64206e6f74207061792067617320636f737473207769746820746f6b656e496e76616c696420707265764f776e65722c206f776e657220706169722070726f7669646564496e76616c696420636f6e7472616374207369676e6174757265206c6f636174696f6e3a2064617461206e6f7420636f6d706c6574655468726573686f6c64206e6565647320746f2062652067726561746572207468616e2030496e76616c696420636f6e7472616374207369676e6174757265206c6f636174696f6e3a20696e736964652073746174696320706172744d6574686f642063616e206f6e6c792062652063616c6c65642066726f6d207468697320636f6e74726163744d6574686f642063616e206f6e6c792062652063616c6c65642066726f6d20616e20656e61626c6564206d6f64756c65496e76616c696420636f6e7472616374207369676e6174757265206c6f636174696f6e3a206c656e677468206e6f742070726573656e74436f756c64206e6f74207061792067617320636f73747320776974682065746865724e6f7420656e6f7567682067617320746f20657865637574652073616665207472616e73616374696f6ea265627a7a72315820116e4e6802bb4e3fb39740b715dce7a0a6f267ae9d0a756a642191516fd1959164736f6c63430005100032","deployedBytecode":"0x6080604052600436106101cd5760003560e01c8063affed0e0116100f7578063e009cfde11610095578063f08a032311610064578063f08a032314611504578063f698da2514611555578063f8dc5dd914611580578063ffa1ad74146115fb576101cd565b8063e009cfde146111f6578063e318b52b14611267578063e75235b8146112f8578063e86637db14611323576101cd565b8063c4ca3a9c116100d1578063c4ca3a9c14610e8b578063cc2f845214610f5c578063d4d9bdcd1461103f578063d8d11f781461107a576101cd565b8063affed0e014610c84578063b2494df314610caf578063b63e800d14610d1b576101cd565b8063610b59251161016f5780637de7edef1161013e5780637de7edef14610ab157806385a5affe14610b02578063a0e67e2b14610b88578063a3f4df7e14610bf4576101cd565b8063610b59251461082d578063694e80c31461087e5780636a761202146108b95780637d83297414610a42576101cd565b80632f54bf6e116101ab5780632f54bf6e146104db578063468721a7146105445780635229073f1461065b5780635ae6bd37146107de576101cd565b80630a1028c4146102775780630d582f131461035357806320c13b0b146103ae575b60003411806101df5750600080369050145b156101e957610275565b60007f6c9a6c4a39284e37ed1cf53d337577d14212a4870fb976a4366c693b939918d560001b9050600081549050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461027257366000803760008036600080855af13d6000803e600081141561026d573d6000fd5b3d6000f35b50505b005b34801561028357600080fd5b5061033d6004803603602081101561029a57600080fd5b81019080803590602001906401000000008111156102b757600080fd5b8201836020820111156102c957600080fd5b803590602001918460018302840111640100000000831117156102eb57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061168b565b6040518082815260200191505060405180910390f35b34801561035f57600080fd5b506103ac6004803603604081101561037657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506117c2565b005b3480156103ba57600080fd5b50610487600480360360408110156103d157600080fd5b81019080803590602001906401000000008111156103ee57600080fd5b82018360208201111561040057600080fd5b8035906020019184600183028401116401000000008311171561042257600080fd5b90919293919293908035906020019064010000000081111561044357600080fd5b82018360208201111561045557600080fd5b8035906020019184600183028401116401000000008311171561047757600080fd5b9091929391929390505050611c0c565b60405180827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200191505060405180910390f35b3480156104e757600080fd5b5061052a600480360360208110156104fe57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611da2565b604051808215151515815260200191505060405180910390f35b34801561055057600080fd5b506106416004803603608081101561056757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001906401000000008111156105ae57600080fd5b8201836020820111156105c057600080fd5b803590602001918460018302840111640100000000831117156105e257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803560ff169060200190929190505050611e74565b604051808215151515815260200191505060405180910390f35b34801561066757600080fd5b506107586004803603608081101561067e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001906401000000008111156106c557600080fd5b8201836020820111156106d757600080fd5b803590602001918460018302840111640100000000831117156106f957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803560ff16906020019092919050505061203d565b604051808315151515815260200180602001828103825283818151815260200191508051906020019080838360005b838110156107a2578082015181840152602081019050610787565b50505050905090810190601f1680156107cf5780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b3480156107ea57600080fd5b506108176004803603602081101561080157600080fd5b8101908080359060200190929190505050612073565b6040518082815260200191505060405180910390f35b34801561083957600080fd5b5061087c6004803603602081101561085057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061208b565b005b34801561088a57600080fd5b506108b7600480360360208110156108a157600080fd5b81019080803590602001909291905050506124af565b005b3480156108c557600080fd5b50610a2860048036036101408110156108dd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019064010000000081111561092457600080fd5b82018360208201111561093657600080fd5b8035906020019184600183028401116401000000008311171561095857600080fd5b9091929391929390803560ff169060200190929190803590602001909291908035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001906401000000008111156109e457600080fd5b8201836020820111156109f657600080fd5b80359060200191846001830284011164010000000083111715610a1857600080fd5b909192939192939050505061262b565b604051808215151515815260200191505060405180910390f35b348015610a4e57600080fd5b50610a9b60048036036040811015610a6557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612894565b6040518082815260200191505060405180910390f35b348015610abd57600080fd5b50610b0060048036036020811015610ad457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506128b9565b005b348015610b0e57600080fd5b50610b8660048036036020811015610b2557600080fd5b8101908080359060200190640100000000811115610b4257600080fd5b820183602082011115610b5457600080fd5b80359060200191846001830284011164010000000083111715610b7657600080fd5b9091929391929390505050612a69565b005b348015610b9457600080fd5b50610b9d612b89565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610be0578082015181840152602081019050610bc5565b505050509050019250505060405180910390f35b348015610c0057600080fd5b50610c09612d1e565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610c49578082015181840152602081019050610c2e565b50505050905090810190601f168015610c765780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610c9057600080fd5b50610c99612d57565b6040518082815260200191505060405180910390f35b348015610cbb57600080fd5b50610cc4612d5d565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610d07578082015181840152602081019050610cec565b505050509050019250505060405180910390f35b348015610d2757600080fd5b50610e896004803603610100811015610d3f57600080fd5b8101908080359060200190640100000000811115610d5c57600080fd5b820183602082011115610d6e57600080fd5b80359060200191846020830284011164010000000083111715610d9057600080fd5b909192939192939080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190640100000000811115610ddb57600080fd5b820183602082011115610ded57600080fd5b80359060200191846001830284011164010000000083111715610e0f57600080fd5b9091929391929390803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612d76565b005b348015610e9757600080fd5b50610f4660048036036080811015610eae57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115610ef557600080fd5b820183602082011115610f0757600080fd5b80359060200191846001830284011164010000000083111715610f2957600080fd5b9091929391929390803560ff169060200190929190505050612f71565b6040518082815260200191505060405180910390f35b348015610f6857600080fd5b50610fb560048036036040811015610f7f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061311e565b60405180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825284818151815260200191508051906020019060200280838360005b8381101561102a57808201518184015260208101905061100f565b50505050905001935050505060405180910390f35b34801561104b57600080fd5b506110786004803603602081101561106257600080fd5b81019080803590602001909291905050506132fd565b005b34801561108657600080fd5b506111e0600480360361014081101561109e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001906401000000008111156110e557600080fd5b8201836020820111156110f757600080fd5b8035906020019184600183028401116401000000008311171561111957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803560ff169060200190929190803590602001909291908035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061349c565b6040518082815260200191505060405180910390f35b34801561120257600080fd5b506112656004803603604081101561121957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506134c7565b005b34801561127357600080fd5b506112f66004803603606081101561128a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506138cd565b005b34801561130457600080fd5b5061130d613f92565b6040518082815260200191505060405180910390f35b34801561132f57600080fd5b50611489600480360361014081101561134757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019064010000000081111561138e57600080fd5b8201836020820111156113a057600080fd5b803590602001918460018302840111640100000000831117156113c257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803560ff169060200190929190803590602001909291908035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050613f9c565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156114c95780820151818401526020810190506114ae565b50505050905090810190601f1680156114f65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561151057600080fd5b506115536004803603602081101561152757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506141b0565b005b34801561156157600080fd5b5061156a614240565b6040518082815260200191505060405180910390f35b34801561158c57600080fd5b506115f9600480360360608110156115a357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050614246565b005b34801561160757600080fd5b506116106146d1565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015611650578082015181840152602081019050611635565b50505050905090810190601f16801561167d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6000807f60b3cbf8b4a223d68d641b3b6ddf9a298e7f33710cf3d3a9d1146b5a6150fbca60001b83805190602001206040516020018083815260200182815260200192505050604051602081830303815290604052805190602001209050601960f81b600160f81b6006548360405160200180857effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152600101847effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260010183815260200182815260200194505050505060405160208183030381529060405280519060200120915050919050565b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611846576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180615cd5602c913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141580156118b05750600173ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b611922576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f496e76616c6964206f776e657220616464726573732070726f7669646564000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611a23576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f4164647265737320697320616c726561647920616e206f776e6572000000000081525060200191505060405180910390fd5b60026000600173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160026000600173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506003600081548092919060010191905055507f9465fa0c962cc76958e6373a993326400c1c94f8be2fe3a952adfa7f60b2ea2682604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a18060045414611c0857611c07816124af565b5b5050565b600080611c5c86868080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505061168b565b90506000848490501415611cf957600060076000838152602001908152602001600020541415611cf4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f48617368206e6f7420617070726f76656400000000000000000000000000000081525060200191505060405180910390fd5b611d8f565b611d8e8187878080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505086868080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050600061470a565b5b6320c13b0b60e01b915050949350505050565b6000600173ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614158015611e6d5750600073ffffffffffffffffffffffffffffffffffffffff16600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b9050919050565b6000600173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614158015611f3f5750600073ffffffffffffffffffffffffffffffffffffffff16600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b611f94576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526030815260200180615d016030913960400191505060405180910390fd5b611fa1858585855a615038565b90508015611ff1573373ffffffffffffffffffffffffffffffffffffffff167f6895c13664aa4f67288b25d7a21d7aaa34916e355fb9b6fae0a139a9085becb860405160405180910390a2612035565b3373ffffffffffffffffffffffffffffffffffffffff167facd2c8702804128fdb0db2bb49f6d127dd0181c13fd45dbfe16de0930e2bd37560405160405180910390a25b949350505050565b6000606061204d86868686611e74565b915060405160203d0181016040523d81523d6000602083013e8091505094509492505050565b60076020528060005260406000206000915090505481565b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461210f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180615cd5602c913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141580156121795750600173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b6121eb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f496e76616c6964206d6f64756c6520616464726573732070726f76696465640081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146122ec576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f4d6f64756c652068617320616c7265616479206265656e20616464656400000081525060200191505060405180910390fd5b60016000600173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060016000600173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fecdf3a3effea5783a3c4c2140e677577666428d44ed9d474a0b3a4c9943f844081604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612533576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180615cd5602c913960400191505060405180910390fd5b60035481111561258e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180615ba46023913960400191505060405180910390fd5b60018110156125e8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180615c7a6024913960400191505060405180910390fd5b806004819055507f610f7ff2b304ae8903c3de74c60c6ab1f7d6226b3f52c5161905bb5ad4039c936004546040518082815260200191505060405180910390a150565b60008060606126888f8f8f8f8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508e8e8e8e8e8e600554613f9c565b9050600560008154809291906001019190505550808051906020012091506126f7828287878080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050600161470a565b50885a1015612751576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180615d8a602a913960400191505060405180910390fd5b60005a90506127c28f8f8f8f8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508e60008f1480156127b1575060008d145b6127bb578e6127bd565b5a5b615038565b92506127d75a826150aa90919063ffffffff16565b9050600080905060008911156127f7576127f4828b8b8b8b6150ca565b90505b8315612841577f442e715f626346e8c54381002da614f62bee8d27386535b2521ec8540898556e8382604051808381526020018281526020019250505060405180910390a1612881565b7f23428b18acfb3ea64b08dc0c1d296ea9c09702c09083ca5272e64d115b687d238382604051808381526020018281526020019250505060405180910390a15b5050509c9b505050505050505050505050565b6008602052816000526040600020602052806000526040600020600091509150505481565b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461293d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180615cd5602c913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156129c3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180615b106024913960400191505060405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f75e41bc35ff1bf14d81d1d2f649c0084a0f974f9289c803ec9898eeec4c8d0b881604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612aed576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180615cd5602c913960400191505060405180910390fd5b6000612b3c83838080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505061168b565b905060016007600083815260200190815260200160002081905550807fe7f4675038f4f6034dfcbbb24c4dc08e4ebf10eb9d257d3d02c0f38d122ac6e460405160405180910390a2505050565b606080600354604051908082528060200260200182016040528015612bbd5781602001602082028038833980820191505090505b5090506000809050600060026000600173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505b600173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614612d155780838381518110612c6c57fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508180600101925050612c2b565b82935050505090565b6040518060400160405280600b81526020017f476e6f736973205361666500000000000000000000000000000000000000000081525081565b60055481565b606080612d6c6001600a61311e565b5090508091505090565b6000801b60065414612df0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f446f6d61696e20536570617261746f7220616c7265616479207365742100000081525060200191505060405180910390fd5b7f035aff83d86937d35b32e04f0ddc6ff469290eef2f1b692d8a815c89404d474960001b30604051602001808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405160208183030381529060405280519060200120600681905550612ebf8a8a80806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505089615296565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614612efd57612efc846156ef565b5b612f4b8787878080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505061571e565b6000821115612f6557612f63826000600186856150ca565b505b50505050505050505050565b60003073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612ff7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180615cd5602c913960400191505060405180910390fd5b60005a905061304d878787878080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050865a615038565b61305657600080fd5b60005a8203905080604051602001808281526020019150506040516020818303038152906040526040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156130e35780820151818401526020810190506130c8565b50505050905090810190601f1680156131105780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b60606000826040519080825280602002602001820160405280156131515781602001602082028038833980820191505090505b50915060008090506000600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141580156132285750600173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b801561323357508482105b156132ee578084838151811061324557fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081806001019250506131be565b80925081845250509250929050565b600073ffffffffffffffffffffffffffffffffffffffff16600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156133ff576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f4f6e6c79206f776e6572732063616e20617070726f766520612068617368000081525060200191505060405180910390fd5b6001600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff16817ff2a0eb156472d1440255b0d7c1e19cc07115d1051fe605b0dce69acfec884d9c60405160405180910390a350565b60006134b08b8b8b8b8b8b8b8b8b8b613f9c565b8051906020012090509a9950505050505050505050565b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461354b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180615cd5602c913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141580156135b55750600173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b613627576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f496e76616c6964206d6f64756c6520616464726573732070726f76696465640081525060200191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461370a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526028815260200180615b7c6028913960400191505060405180910390fd5b600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507faab4fa2b463f581b2b32cb3b7e3b704b9ce37cc209b5fb4d77e593ace405427681604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a15050565b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614613951576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180615cd5602c913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141580156139bb5750600173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b613a2d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f496e76616c6964206f776e657220616464726573732070726f7669646564000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614613b2e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f4164647265737320697320616c726561647920616e206f776e6572000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614158015613b985750600173ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b613c0a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f496e76616c6964206f776e657220616464726573732070726f7669646564000081525060200191505060405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff16600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614613ced576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180615c1e6026913960400191505060405180910390fd5b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507ff8d49fc529812e9a7c5c50e69c20f0dccc0db8fa95c98bc58cc9a4f1c1299eaf82604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a17f9465fa0c962cc76958e6373a993326400c1c94f8be2fe3a952adfa7f60b2ea2681604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1505050565b6000600454905090565b606060007fbb8310d486368db6bd6f849402fdd73ad53d316b5a4b2644ad6efe0f941286d860001b8c8c8c805190602001208c8c8c8c8c8c8c604051602001808c81526020018b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018a815260200189815260200188600181111561402c57fe5b60ff1681526020018781526020018681526020018581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019b505050505050505050505050604051602081830303815290604052805190602001209050601960f81b600160f81b6006548360405160200180857effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152600101847effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526001018381526020018281526020019450505050506040516020818303038152906040529150509a9950505050505050505050565b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614614234576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180615cd5602c913960400191505060405180910390fd5b61423d816156ef565b50565b60065481565b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146142ca576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180615cd5602c913960400191505060405180910390fd5b806001600354031015614328576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526035815260200180615bc76035913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141580156143925750600173ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b614404576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f496e76616c6964206f776e657220616464726573732070726f7669646564000081525060200191505060405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff16600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146144e7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180615c1e6026913960400191505060405180910390fd5b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600360008154809291906001900391905055507ff8d49fc529812e9a7c5c50e69c20f0dccc0db8fa95c98bc58cc9a4f1c1299eaf82604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a180600454146146cc576146cb816124af565b5b505050565b6040518060400160405280600581526020017f312e312e3100000000000000000000000000000000000000000000000000000081525081565b6000600454905060008111614787576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f5468726573686f6c64206e6565647320746f20626520646566696e656421000081525060200191505060405180910390fd5b61479b60418261593890919063ffffffff16565b83511015614811576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f5369676e617475726573206461746120746f6f2073686f72740000000000000081525060200191505060405180910390fd5b600080905060008060008060008090505b8681101561502b576148348982615972565b80945081955082965050505060008460ff161415614bc9578260001c945061486660418861593890919063ffffffff16565b8260001c10156148c1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526037815260200180615c9e6037913960400191505060405180910390fd5b88516148da60208460001c6159a190919063ffffffff16565b1115614931576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526037815260200180615d316037913960400191505060405180910390fd5b60006020838b010151905089516149678261495960208760001c6159a190919063ffffffff16565b6159a190919063ffffffff16565b11156149be576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526036815260200180615c446036913960400191505060405180910390fd5b60606020848c010190506320c13b0b60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168773ffffffffffffffffffffffffffffffffffffffff166320c13b0b8e846040518363ffffffff1660e01b8152600401808060200180602001838103835285818151815260200191508051906020019080838360005b83811015614a60578082015181840152602081019050614a45565b50505050905090810190601f168015614a8d5780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b83811015614ac6578082015181840152602081019050614aab565b50505050905090810190601f168015614af35780820380516001836020036101000a031916815260200191505b5094505050505060206040518083038186803b158015614b1257600080fd5b505afa158015614b26573d6000803e3d6000fd5b505050506040513d6020811015614b3c57600080fd5b81019080805190602001909291905050507bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614614bc2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180615b596023913960400191505060405180910390fd5b5050614ea9565b60018460ff161415614d72578260001c94508473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480614c6657506000600860008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008d81526020019081526020016000205414155b614cd8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f4861736820686173206e6f74206265656e20617070726f76656400000000000081525060200191505060405180910390fd5b878015614d1157508473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614155b15614d6d576000600860008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008d8152602001908152602001600020819055505b614ea8565b601e8460ff161115614e3d5760018b60405160200180807f19457468657265756d205369676e6564204d6573736167653a0a333200000000815250601c018281526020019150506040516020818303038152906040528051906020012060048603858560405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015614e2c573d6000803e3d6000fd5b505050602060405103519450614ea7565b60018b85858560405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015614e9a573d6000803e3d6000fd5b5050506020604051035194505b5b5b8573ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16118015614f705750600073ffffffffffffffffffffffffffffffffffffffff16600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b8015614fa95750600173ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614155b61501b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f496e76616c6964206f776e65722070726f76696465640000000000000000000081525060200191505060405180910390fd5b8495508080600101915050614822565b5050505050505050505050565b600080600181111561504657fe5b83600181111561505257fe5b141561506b57615064868686856159c0565b90506150a1565b60018081111561507757fe5b83600181111561508357fe5b141561509b576150948685846159d9565b90506150a0565b600090505b5b95945050505050565b6000828211156150b957600080fd5b600082840390508091505092915050565b600080600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146151075782615109565b325b9050600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415615204576151733a8610615150573a615152565b855b615165888a6159a190919063ffffffff16565b61593890919063ffffffff16565b91508073ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f193505050506151ff576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180615d686022913960400191505060405180910390fd5b61528c565b6152298561521b888a6159a190919063ffffffff16565b61593890919063ffffffff16565b91506152368482846159f0565b61528b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180615bfc6022913960400191505060405180910390fd5b5b5095945050505050565b60006004541461530e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f4f776e657273206861766520616c7265616479206265656e207365747570000081525060200191505060405180910390fd5b8151811115615368576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180615ba46023913960400191505060405180910390fd5b60018110156153c2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180615c7a6024913960400191505060405180910390fd5b60006001905060008090505b835181101561565b5760008482815181106153e557fe5b60200260200101519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141580156154595750600173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b6154cb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f496e76616c6964206f776e657220616464726573732070726f7669646564000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146155cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4475706c6963617465206f776e657220616464726573732070726f766964656481525060200191505060405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508092505080806001019150506153ce565b506001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550825160038190555081600481905550505050565b60007f6c9a6c4a39284e37ed1cf53d337577d14212a4870fb976a4366c693b939918d560001b90508181555050565b600073ffffffffffffffffffffffffffffffffffffffff1660016000600173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614615803576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180615b346025913960400191505060405180910390fd5b6001806000600173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614615934576158c182825a6159d9565b615933576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f436f756c64206e6f742066696e69736820696e697469616c697a6174696f6e0081525060200191505060405180910390fd5b5b5050565b60008083141561594b576000905061596c565b600082840290508284828161595c57fe5b041461596757600080fd5b809150505b92915050565b60008060008360410260208101860151925060408101860151915060ff60418201870151169350509250925092565b6000808284019050838110156159b657600080fd5b8091505092915050565b6000806000845160208601878987f19050949350505050565b60008060008451602086018786f490509392505050565b600060608383604051602401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001925050506040516020818303038152906040527fa9059cbb000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090506000808251602084016000896127105a03f16040513d81016040523d6000823e3d60008114615af25760208114615afa5760009450615b04565b829450615b04565b8151158315171594505b50505050939250505056fe496e76616c6964206d617374657220636f707920616464726573732070726f76696465644d6f64756c6573206861766520616c7265616479206265656e20696e697469616c697a6564496e76616c696420636f6e7472616374207369676e61747572652070726f7669646564496e76616c696420707265764d6f64756c652c206d6f64756c6520706169722070726f76696465645468726573686f6c642063616e6e6f7420657863656564206f776e657220636f756e744e6577206f776e657220636f756e74206e6565647320746f206265206c6172676572207468616e206e6577207468726573686f6c64436f756c64206e6f74207061792067617320636f737473207769746820746f6b656e496e76616c696420707265764f776e65722c206f776e657220706169722070726f7669646564496e76616c696420636f6e7472616374207369676e6174757265206c6f636174696f6e3a2064617461206e6f7420636f6d706c6574655468726573686f6c64206e6565647320746f2062652067726561746572207468616e2030496e76616c696420636f6e7472616374207369676e6174757265206c6f636174696f6e3a20696e736964652073746174696320706172744d6574686f642063616e206f6e6c792062652063616c6c65642066726f6d207468697320636f6e74726163744d6574686f642063616e206f6e6c792062652063616c6c65642066726f6d20616e20656e61626c6564206d6f64756c65496e76616c696420636f6e7472616374207369676e6174757265206c6f636174696f6e3a206c656e677468206e6f742070726573656e74436f756c64206e6f74207061792067617320636f73747320776974682065746865724e6f7420656e6f7567682067617320746f20657865637574652073616665207472616e73616374696f6ea265627a7a72315820116e4e6802bb4e3fb39740b715dce7a0a6f267ae9d0a756a642191516fd1959164736f6c63430005100032","sourceMap":"658:19119:0:-;;;2468:255;8:9:-1;5:2;;;30:1;27;20:12;5:2;2468:255:0;2715:1;2703:9;:13;;;;658:19119;;;;;;","deployedSourceMap":"658:19119:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1251:1:3;1239:9;:13;:37;;;;1275:1;1256:8;;:15;;:20;1239:37;1235:74;;;1292:7;;1235:74;1318:12;376:66;1333:29;;1318:44;;1372:15;1501:4;1495:11;1484:22;;1549:1;1530:21;;:7;:21;;;1526:437;;1681:14;1678:1;1675;1662:34;1772:1;1769;1753:14;1750:1;1747;1738:7;1733:3;1728:46;1812:16;1809:1;1806;1791:38;1861:1;1852:7;1849:14;1846:2;;;1876:16;1873:1;1866:27;1846:2;1922:16;1919:1;1912:27;1644:309;1108:861;;;658:19119:0;16853:367;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16853:367:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;16853:367:0;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;16853:367:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;16853:367:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;16853:367:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;16853:367:0;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2260:645:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2260:645:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2260:645:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;16188:507:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16188:507:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;16188:507:0;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;16188:507:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;16188:507:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;16188:507:0;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;16188:507:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;16188:507:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;16188:507:0;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;6032:166:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6032:166:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6032:166:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3039:603:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3039:603:5;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;3039:603:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;3039:603:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3039:603:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3039:603:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;3039:603:5;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3993:949;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3993:949:5;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;3993:949:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;3993:949:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3993:949:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3993:949:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;3993:949:5;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3993:949:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2127:49:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2127:49:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2127:49:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1337:540:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1337:540:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1337:540:5;;;;;;;;;;;;;;;;;;;:::i;:::-;;5464:441:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5464:441:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5464:441:6;;;;;;;;;;;;;;;;;:::i;:::-;;5491:1886:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5491:1886:0;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;5491:1886:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;5491:1886:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;5491:1886:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;5491:1886:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;5491:1886:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;5491:1886:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;5491:1886:0;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2287:69;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2287:69:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2287:69:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;804:302:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;804:302:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;804:302:9;;;;;;;;;;;;;;;;;;;:::i;:::-;;15365:207:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15365:207:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15365:207:0;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;15365:207:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;15365:207:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;15365:207:0;;;;;;;;;;;;:::i;:::-;;6280:465:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6280:465:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6280:465:6;;;;;;;;;;;;;;;;;858:43:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;858:43:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;858:43:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1968:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1968:20:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5030:197:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5030:197:5;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5030:197:5;;;;;;;;;;;;;;;;;3339:1122:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3339:1122:0;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;3339:1122:0;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;3339:1122:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3339:1122:0;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;3339:1122:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;3339:1122:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3339:1122:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3339:1122:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;14111:583;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14111:583:0;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;14111:583:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;14111:583:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;14111:583:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;14111:583:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5421:808:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5421:808:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5421:808:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5421:808:5;;;;;;;;;;;;;;;;;;14938:265:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14938:265:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14938:265:0;;;;;;;;;;;;;;;;;:::i;:::-;;19271:504;;8:9:-1;5:2;;;30:1;27;20:12;5:2;19271:504:0;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;19271:504:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;19271:504:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;19271:504:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;19271:504:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;19271:504:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2138:565:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2138:565:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2138:565:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4416:859:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4416:859:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4416:859:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5911:115;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5911:115:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;17933:652:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;17933:652:0;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;17933:652:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;17933:652:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;17933:652:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;17933:652:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;17933:652:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;17933:652:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;967:135:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;967:135:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;967:135:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;1994:30:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1994:30:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3247:835:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3247:835:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3247:835:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;907:40:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;907:40:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;907:40:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16853:367;16958:7;16981:23;1588:66;17041:17;;17070:7;17060:18;;;;;;17030:49;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;17030::0;;;17007:82;;;;;;16981:108;;17151:4;17146:10;;17163:4;17158:10;;17170:15;;17187;17129:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;17129:74:0;;;17106:107;;;;;;17099:114;;;16853:367;;;:::o;2260:645:6:-;252:4:11;230:27;;:10;:27;;;222:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2440:1:6;2423:19;;:5;:19;;;;:47;;;;;479:3;2446:24;;:5;:24;;;;2423:47;2415:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2588:1;2563:27;;:6;:13;2570:5;2563:13;;;;;;;;;;;;;;;;;;;;;;;;;:27;;;2555:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2648:6;:23;479:3;2648:23;;;;;;;;;;;;;;;;;;;;;;;;;2632:6;:13;2639:5;2632:13;;;;;;;;;;;;;;;;:39;;;;;;;;;;;;;;;;;;2707:5;2681:6;:23;479:3;2681:23;;;;;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;2722:10;;:12;;;;;;;;;;;;;2749:17;2760:5;2749:17;;;;;;;;;;;;;;;;;;;;;;2847:10;2834:9;;:23;2830:68;;2871:27;2887:10;2871:15;:27::i;:::-;2830:68;2260:645;;:::o;16188:507:0:-;16297:6;16319:19;16341:21;16356:5;;16341:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;16341:21:0;;;;;;:14;:21::i;:::-;16319:43;;16397:1;16376:10;;:17;;:22;16372:281;;;16453:1;16422:14;:27;16437:11;16422:27;;;;;;;;;;;;:32;;16414:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16372:281;;;16588:54;16604:11;16617:5;;16588:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;16588:54:0;;;;;;16624:10;;16588:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;16588:54:0;;;;;;16636:5;16588:15;:54::i;:::-;16372:281;181:10:18;16669:19:0;;16662:26;;;16188:507;;;;;;:::o;6032:166:6:-;6109:4;479:3;6136:24;;:5;:24;;;;:55;;;;;6189:1;6164:27;;:6;:13;6171:5;6164:13;;;;;;;;;;;;;;;;;;;;;;;;;:27;;;;6136:55;6129:62;;6032:166;;;:::o;3039:603:5:-;3178:12;673:3;3263:30;;:10;:30;;;;:67;;;;;3328:1;3297:33;;:7;:19;3305:10;3297:19;;;;;;;;;;;;;;;;;;;;;;;;;:33;;;;3263:67;3255:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3465:46;3473:2;3477:5;3484:4;3490:9;3501;3465:7;:46::i;:::-;3455:56;;3525:7;3521:114;;;3566:10;3539:38;;;;;;;;;;;;3521:114;;;3624:10;3597:38;;;;;;;;;;;;3521:114;3039:603;;;;;;:::o;3993:949::-;4142:12;4156:23;4205:53;4231:2;4235:5;4242:4;4248:9;4205:25;:53::i;:::-;4195:63;;4413:4;4407:11;4655:4;4637:16;4633:27;4628:3;4624:37;4618:4;4611:51;4717:16;4712:3;4705:29;4811:16;4808:1;4801:4;4796:3;4792:14;4777:51;4923:3;4909:17;;4341:595;;;;;;;;:::o;2127:49:0:-;;;;;;;;;;;;;;;;;:::o;1337:540:5:-;252:4:11;230:27;;:10;:27;;;222:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1511:1:5;1484:29;;1492:6;1484:29;;;;:68;;;;;673:3;1517:35;;1525:6;1517:35;;;;1484:68;1476:112;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1683:1;1647:38;;:7;:24;1663:6;1647:24;;;;;;;;;;;;;;;;;;;;;;;;;:38;;;1639:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1756:7;:25;673:3;1756:25;;;;;;;;;;;;;;;;;;;;;;;;;1729:7;:24;1745:6;1729:24;;;;;;;;;;;;;;;;:52;;;;;;;;;;;;;;;;;;1827:6;1791:7;:25;673:3;1791:25;;;;;;;;;;;;;;;;:43;;;;;;;;;;;;;;;;;;1849:21;1863:6;1849:21;;;;;;;;;;;;;;;;;;;;;;1337:540;:::o;5464:441:6:-;252:4:11;230:27;;:10;:27;;;222:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5648:10:6;;5634;:24;;5626:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5782:1;5768:10;:15;;5760:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5846:10;5834:9;:22;;;;5871:27;5888:9;;5871:27;;;;;;;;;;;;;;;;;;5464:441;:::o;5491:1886:0:-;5841:12;5869:14;5996:23;6022:210;6061:2;6065:5;6072:4;;6022:210;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;6022:210:0;;;;;;6078:9;6125;6136:7;6145:8;6155;6165:14;6213:5;;6022:21;:210::i;:::-;5996:236;;6301:5;;:7;;;;;;;;;;;;;6341:10;6331:21;;;;;;6322:30;;6366:53;6382:6;6390:10;6402;;6366:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;6366:53:0;;;;;;6414:4;6366:15;:53::i;:::-;5491:1886;6460:9;6447;:22;;6439:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6629:15;6647:9;6629:27;;6791:92;6799:2;6803:5;6810:4;;6791:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;6791:92:0;;;;;;6816:9;6840:1;6827:9;:14;:31;;;;;6857:1;6845:8;:13;6827:31;:55;;6873:9;6827:55;;;6861:9;6827:55;6791:7;:92::i;:::-;6781:102;;6907:22;6919:9;6907:7;:11;;:22;;;;:::i;:::-;6897:32;;7078:15;7096:1;7078:19;;7126:1;7115:8;:12;7111:128;;;7157:67;7171:7;7180;7189:8;7199;7209:14;7157:13;:67::i;:::-;7147:77;;7111:128;7256:7;7252:108;;;7270:33;7287:6;7295:7;7270:33;;;;;;;;;;;;;;;;;;;;;;;;7252:108;;;7327:33;7344:6;7352:7;7327:33;;;;;;;;;;;;;;;;;;;;;;;;7252:108;5491:1886;;;;;;;;;;;;;;;;;:::o;2287:69::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;804:302:9:-;252:4:11;230:27;;:10;:27;;;222:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;977:1:9;954:25;;:11;:25;;;;946:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1043:11;1030:10;;:24;;;;;;;;;;;;;;;;;;1069:30;1087:11;1069:30;;;;;;;;;;;;;;;;;;;;;;804:302;:::o;15365:207:0:-;252:4:11;230:27;;:10;:27;;;222:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15458:15:0;15476:21;15491:5;;15476:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;15476:21:0;;;;;;:14;:21::i;:::-;15458:39;;15533:1;15507:14;:23;15522:7;15507:23;;;;;;;;;;;:27;;;;15557:7;15549:16;;;;;;;;;;316:1:11;15365:207:0;;:::o;6280:465:6:-;6346:16;6378:22;6417:10;;6403:25;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;6403:25:6;;;;6378:50;;6472:13;6488:1;6472:17;;6499:20;6522:6;:23;479:3;6522:23;;;;;;;;;;;;;;;;;;;;;;;;;6499:46;;6555:162;479:3;6561:31;;:12;:31;;;6555:162;;6623:12;6608:5;6614;6608:12;;;;;;;;;;;;;:27;;;;;;;;;;;6664:6;:20;6671:12;6664:20;;;;;;;;;;;;;;;;;;;;;;;;;6649:35;;6698:8;;;;;;;6555:162;;;6733:5;6726:12;;;;;6280:465;:::o;858:43:0:-;;;;;;;;;;;;;;;;;;;:::o;1968:20::-;;;;:::o;5030:197:5:-;5097:16;5130:22;5157:41;673:3;5195:2;5157:19;:41::i;:::-;5129:69;;;5215:5;5208:12;;;5030:197;:::o;3339:1122:0:-;3660:1;3641:20;;:15;;:20;3633:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1085:66;3744:25;;3771:4;3733:43;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3733:43:0;;;3723:54;;;;;;3705:15;:72;;;;3787:32;3799:7;;3787:32;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;3787:32:0;;;;;;3808:10;3787:11;:32::i;:::-;3860:1;3833:29;;:15;:29;;;3829:78;;3864:43;3891:15;3864:26;:43::i;:::-;3829:78;4042:22;4055:2;4059:4;;4042:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;4042:22:0;;;;;;:12;:22::i;:::-;4089:1;4079:7;:11;4075:380;;;4385:59;4399:7;4408:1;4411;4414:12;4428:15;4385:13;:59::i;:::-;;4075:380;3339:1122;;;;;;;;;;:::o;14111:583::-;14261:7;252:4:11;230:27;;:10;:27;;;222:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14284:16:0;14303:9;14284:28;;14466:46;14474:2;14478:5;14485:4;;14466:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;14466:46:0;;;;;;14491:9;14502;14466:7;:46::i;:::-;14458:55;;;;;;14523:19;14556:9;14545:8;:20;14523:42;;14673:11;14656:29;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;14656:29:0;;;14642:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;14642:45:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5421:808:5;5528:22;5552:12;5643:8;5629:23;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;5629:23:5;;;;5621:31;;5696:19;5718:1;5696:23;;5729:21;5753:7;:14;5761:5;5753:14;;;;;;;;;;;;;;;;;;;;;;;;;5729:38;;5777:238;5808:3;5783:29;;:13;:29;;;;:66;;;;;673:3;5816:33;;:13;:33;;;;5783:66;:92;;;;;5867:8;5853:11;:22;5783:92;5777:238;;;5912:13;5891:5;5897:11;5891:18;;;;;;;;;;;;;:34;;;;;;;;;;;5955:7;:22;5963:13;5955:22;;;;;;;;;;;;;;;;;;;;;;;;;5939:38;;5991:13;;;;;;;5777:238;;;6031:13;6024:20;;6201:11;6194:5;6187:26;6173:50;;;;;;;:::o;14938:265:0:-;15051:1;15021:32;;:6;:18;15028:10;15021:18;;;;;;;;;;;;;;;;;;;;;;;;;:32;;;;15013:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15142:1;15098:14;:26;15113:10;15098:26;;;;;;;;;;;;;;;:41;15125:13;15098:41;;;;;;;;;;;:45;;;;15185:10;15158:38;;15170:13;15158:38;;;;;;;;;;14938:265;:::o;19271:504::-;19614:7;19654:113;19676:2;19680:5;19687:4;19693:9;19704;19715:7;19724:8;19734;19744:14;19760:6;19654:21;:113::i;:::-;19644:124;;;;;;19637:131;;19271:504;;;;;;;;;;;;:::o;2138:565:5:-;252:4:11;230:27;;:10;:27;;;222:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2360:1:5;2333:29;;2341:6;2333:29;;;;:68;;;;;673:3;2366:35;;2374:6;2366:35;;;;2333:68;2325:112;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2495:6;2455:47;;:7;:28;2471:10;2455:28;;;;;;;;;;;;;;;;;;;;;;;;;:47;;;2447:100;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2588:7;:24;2604:6;2588:24;;;;;;;;;;;;;;;;;;;;;;;;;2557:7;:28;2573:10;2557:28;;;;;;;;;;;;;;;;:55;;;;;;;;;;;;;;;;;;2657:1;2622:7;:24;2638:6;2622:24;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;2674:22;2689:6;2674:22;;;;;;;;;;;;;;;;;;;;;;2138:565;;:::o;4416:859:6:-;252:4:11;230:27;;:10;:27;;;222:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4607:1:6;4587:22;;:8;:22;;;;:53;;;;;479:3;4613:27;;:8;:27;;;;4587:53;4579:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4761:1;4733:30;;:6;:16;4740:8;4733:16;;;;;;;;;;;;;;;;;;;;;;;;;:30;;;4725:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4916:1;4896:22;;:8;:22;;;;:53;;;;;479:3;4922:27;;:8;:27;;;;4896:53;4888:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5023:8;5002:29;;:6;:17;5009:9;5002:17;;;;;;;;;;;;;;;;;;;;;;;;;:29;;;4994:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5103:6;:16;5110:8;5103:16;;;;;;;;;;;;;;;;;;;;;;;;;5084:6;:16;5091:8;5084:16;;;;;;;;;;;;;;;;:35;;;;;;;;;;;;;;;;;;5149:8;5129:6;:17;5136:9;5129:17;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;5194:1;5167:6;:16;5174:8;5167:16;;;;;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;5211:22;5224:8;5211:22;;;;;;;;;;;;;;;;;;;;;;5248:20;5259:8;5248:20;;;;;;;;;;;;;;;;;;;;;;4416:859;;;:::o;5911:115::-;5980:7;6010:9;;6003:16;;5911:115;:::o;17933:652:0:-;18279:12;18307:18;1405:66;18362:16;;18380:2;18384:5;18401:4;18391:15;;;;;;18408:9;18419;18430:7;18439:8;18449;18459:14;18475:6;18351:131;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;18351:131:0;;;18328:164;;;;;;18307:185;;18531:4;18526:10;;18543:4;18538:10;;18550:15;;18567:10;18509:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;18509:69:0;;;18502:76;;;17933:652;;;;;;;;;;;;:::o;967:135:3:-;252:4:11;230:27;;:10;:27;;;222:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1060:35:3;1087:7;1060:26;:35::i;:::-;967:135;:::o;1994:30:0:-;;;;:::o;3247:835:6:-;252:4:11;230:27;;:10;:27;;;222:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3473:10:6;3468:1;3455:10;;:14;:28;;3447:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3656:1;3639:19;;:5;:19;;;;:47;;;;;479:3;3662:24;;:5;:24;;;;3639:47;3631:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3760:5;3739:26;;:6;:17;3746:9;3739:17;;;;;;;;;;;;;;;;;;;;;;;;;:26;;;3731:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3838:6;:13;3845:5;3838:13;;;;;;;;;;;;;;;;;;;;;;;;;3818:6;:17;3825:9;3818:17;;;;;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;3885:1;3861:6;:13;3868:5;3861:13;;;;;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;3897:10;;:12;;;;;;;;;;;;;;3924:19;3937:5;3924:19;;;;;;;;;;;;;;;;;;;;;;4024:10;4011:9;;:23;4007:68;;4048:27;4064:10;4048:15;:27::i;:::-;4007:68;3247:835;;;:::o;907:40:0:-;;;;;;;;;;;;;;;;;;;:::o;8890:4309::-;9084:18;9105:9;;9084:30;;9186:1;9173:10;:14;9165:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9328:18;9343:2;9328:10;:14;;:18;;;;:::i;:::-;9307:10;:17;:39;;9299:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9438:17;9466:1;9438:30;;9478:20;9508:7;9525:9;9544;9563;9591:1;9587:5;;9582:3611;9598:10;9594:1;:14;9582:3611;;;9641:29;9656:10;9668:1;9641:14;:29::i;:::-;9629:41;;;;;;;;;;;;9750:1;9745;:6;;;9741:3211;;;9901:1;9893:10;;9870:34;;10305:18;10320:2;10305:10;:14;;:18;;;;:::i;:::-;10299:1;10291:10;;:32;;10283:100;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10545:10;:17;10523:18;10538:2;10531:1;10523:10;;:14;;:18;;;;:::i;:::-;:39;;10515:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10766:28;10969:4;10965:1;10953:10;10949:18;10945:29;10939:36;10915:60;;11066:10;:17;11018:44;11041:20;11018:18;11033:2;11026:1;11018:10;;:14;;:18;;;;:::i;:::-;:22;;:44;;;;:::i;:::-;:65;;11010:132;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11196:30;11531:4;11527:1;11515:10;11511:18;11507:29;11486:50;;181:10:18;11658:19:0;;11579:98;;;11599:12;11579:50;;;11630:4;11636:17;11579:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11579:75:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11579:75:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11579:75:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11579:75:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11579:75:0;;;;;;;;;;;;;;;;:98;;;;11571:146;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9741:3211;;;;;11800:1;11795;:6;;;11791:1161;;;11947:1;11939:10;;11916:34;;12135:12;12121:26;;:10;:26;;;:73;;;;12193:1;12151:14;:28;12166:12;12151:28;;;;;;;;;;;;;;;:38;12180:8;12151:38;;;;;;;;;;;;:43;;12121:73;12113:112;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12347:11;:41;;;;;12376:12;12362:26;;:10;:26;;;;12347:41;12343:130;;;12453:1;12412:14;:28;12427:12;12412:28;;;;;;;;;;;;;;;:38;12441:8;12412:38;;;;;;;;;;;:42;;;;12343:130;11791:1161;;;12501:2;12497:1;:6;;;12493:459;;;12685:97;12758:8;12705:62;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;12705:62:0;;;12695:73;;;;;;12774:1;12770;:5;12777:1;12780;12685:97;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12685:97:0;;;;;;;;12670:112;;12493:459;;;12909:28;12919:8;12929:1;12932;12935;12909:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12909:28:0;;;;;;;;12894:43;;12493:459;11791:1161;9741:3211;13006:9;12991:24;;:12;:24;;;:62;;;;;13051:1;13019:34;;:6;:20;13026:12;13019:20;;;;;;;;;;;;;;;;;;;;;;;;;:34;;;;12991:62;:97;;;;;479:3:6;13057:31:0;;:12;:31;;;;12991:97;12965:179;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13170:12;13158:24;;9610:3;;;;;;;9582:3611;;;8890:4309;;;;;;;;;;;:::o;202:429:2:-;340:12;385:19;372:32;;;;;;;;:9;:32;;;;;;;;;368:256;;;428:35;440:2;444:5;451:4;457:5;428:11;:35::i;:::-;418:45;;368:256;;;495:27;482:40;;;;;;;;:9;:40;;;;;;;;;478:146;;;546:36;566:2;570:4;576:5;546:19;:36::i;:::-;536:46;;478:146;;;619:5;609:15;;478:146;368:256;202:429;;;;;;;:::o;1215:131:13:-;1273:7;1301:1;1296;:6;;1288:15;;;;;;1309:9;1325:1;1321;:5;1309:17;;1340:1;1333:8;;;1215:131;;;;:::o;7383:952:0:-;7587:15;7676:24;7729:1;7703:28;;:14;:28;;;:57;;7746:14;7703:57;;;7734:9;7703:57;7676:84;;7794:1;7774:22;;:8;:22;;;7770:559;;;7927:73;7963:11;7952:8;:22;:47;;7988:11;7952:47;;;7977:8;7952:47;7927:20;7939:7;7927;:11;;:20;;;;:::i;:::-;:24;;:73;;;;:::i;:::-;7917:83;;8079:8;:13;;:22;8093:7;8079:22;;;;;;;;;;;;;;;;;;;;;;;8071:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7770:559;;;8181:34;8206:8;8181:20;8193:7;8181;:11;;:20;;;;:::i;:::-;:24;;:34;;;;:::i;:::-;8171:44;;8237:42;8251:8;8261;8271:7;8237:13;:42::i;:::-;8229:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7770:559;7383:952;;;;;;;;:::o;785:1235:6:-;1028:1;1015:9;;:14;1007:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1171:7;:14;1157:10;:28;;1149:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1309:1;1295:10;:15;;1287:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1398:20;479:3;1398:38;;1451:9;1463:1;1451:13;;1446:451;1470:7;:14;1466:1;:18;1446:451;;;1550:13;1566:7;1574:1;1566:10;;;;;;;;;;;;;;1550:26;;1615:1;1598:19;;:5;:19;;;;:47;;;;;479:3;1621:24;;:5;:24;;;;1598:47;1590:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1771:1;1746:27;;:6;:13;1753:5;1746:13;;;;;;;;;;;;;;;;;;;;;;;;;:27;;;1738:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1847:5;1824:6;:20;1831:12;1824:20;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;1881:5;1866:20;;1446:451;1486:3;;;;;;;1446:451;;;;479:3;1906:6;:20;1913:12;1906:20;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;1967:7;:14;1954:10;:27;;;;2003:10;1991:9;:22;;;;785:1235;;;:::o;449:250:3:-;521:12;376:66;536:29;;521:44;;675:7;669:4;662:21;648:45;;:::o;736:434:5:-;865:1;828:39;;:7;:25;673:3;828:25;;;;;;;;;;;;;;;;;;;;;;;;;:39;;;820:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;673:3;919:7;:25;673:3;919:25;;;;;;;;;;;;;;;;:44;;;;;;;;;;;;;;;;;;991:1;977:16;;:2;:16;;;973:190;;1087:40;1107:2;1111:4;1117:9;1087:19;:40::i;:::-;1079:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;973:190;736:434;;:::o;341:381:13:-;399:7;628:1;623;:6;619:35;;;646:1;639:8;;;;619:35;660:9;676:1;672;:5;660:17;;700:1;695;691;:5;;;;;;:10;683:19;;;;;;716:1;709:8;;;341:381;;;;;:::o;1223:921:12:-;1332:7;1341:9;1352;1652:3;1646:4;1642:14;1714:4;1700:12;1696:23;1684:10;1680:40;1674:47;1669:52;;1779:4;1765:12;1761:23;1749:10;1745:40;1739:47;1734:52;;2123:4;2114;2100:12;2096:23;2084:10;2080:40;2074:47;2070:58;2065:63;;1608:530;;;;;;:::o;1409:131:13:-;1467:7;1482:9;1498:1;1494;:5;1482:17;;1518:1;1513;:6;;1505:15;;;;;;1534:1;1527:8;;;1409:131;;;;:::o;637:316:2:-;753:12;935:1;932;925:4;919:11;912:4;906;902:15;895:5;891:2;884:5;879:58;868:69;;854:93;;;;;;:::o;959:310::-;1068:12;1251:1;1248;1241:4;1235:11;1228:4;1222;1218:15;1214:2;1207:5;1194:59;1183:70;;1169:94;;;;;:::o;438:807:10:-;575:16;607:17;680:8;690:6;627:70;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;627:70:10;;;;;;;38:4:-1;29:7;25:18;67:10;61:17;96:58;199:8;192:4;186;182:15;179:29;167:10;160:49;0:215;;;627:70:10;607:90;;874:1;871;864:4;858:11;851:4;845;841:15;838:1;831:5;823;818:3;814:15;809:67;906:4;900:11;946:16;941:3;937:26;931:4;924:40;1000:16;997:1;992:3;977:40;1037:16;1071:1;1066:33;;;;1117:4;1112:76;;;;1226:1;1211:16;;1030:199;;1066:33;1090:7;1075:22;;1066:33;;1112:76;1179:3;1173:10;1166:18;1156:7;1149:15;1146:39;1139:47;1124:62;;1030:199;;780:459;;;;;;;;:::o","source":"pragma solidity >=0.5.0 <0.7.0;\\nimport \\"./base/ModuleManager.sol\\";\\nimport \\"./base/OwnerManager.sol\\";\\nimport \\"./base/FallbackManager.sol\\";\\nimport \\"./common/MasterCopy.sol\\";\\nimport \\"./common/SignatureDecoder.sol\\";\\nimport \\"./common/SecuredTokenTransfer.sol\\";\\nimport \\"./interfaces/ISignatureValidator.sol\\";\\nimport \\"./external/GnosisSafeMath.sol\\";\\n\\n/// @title Gnosis Safe - A multisignature wallet with support for confirmations using signed messages based on ERC191.\\n/// @author Stefan George - <stefan@gnosis.io>\\n/// @author Richard Meissner - <richard@gnosis.io>\\n/// @author Ricardo Guilherme Schmidt - (Status Research & Development GmbH) - Gas Token Payment\\ncontract GnosisSafe\\n    is MasterCopy, ModuleManager, OwnerManager, SignatureDecoder, SecuredTokenTransfer, ISignatureValidatorConstants, FallbackManager {\\n\\n    using GnosisSafeMath for uint256;\\n\\n    string public constant NAME = \\"Gnosis Safe\\";\\n    string public constant VERSION = \\"1.1.1\\";\\n\\n    //keccak256(\\n    //    \\"EIP712Domain(address verifyingContract)\\"\\n    //);\\n    bytes32 private constant DOMAIN_SEPARATOR_TYPEHASH = 0x035aff83d86937d35b32e04f0ddc6ff469290eef2f1b692d8a815c89404d4749;\\n\\n    //keccak256(\\n    //    \\"SafeTx(address to,uint256 value,bytes data,uint8 operation,uint256 safeTxGas,uint256 baseGas,uint256 gasPrice,address gasToken,address refundReceiver,uint256 nonce)\\"\\n    //);\\n    bytes32 private constant SAFE_TX_TYPEHASH = 0xbb8310d486368db6bd6f849402fdd73ad53d316b5a4b2644ad6efe0f941286d8;\\n\\n    //keccak256(\\n    //    \\"SafeMessage(bytes message)\\"\\n    //);\\n    bytes32 private constant SAFE_MSG_TYPEHASH = 0x60b3cbf8b4a223d68d641b3b6ddf9a298e7f33710cf3d3a9d1146b5a6150fbca;\\n\\n    event ApproveHash(\\n        bytes32 indexed approvedHash,\\n        address indexed owner\\n    );\\n    event SignMsg(\\n        bytes32 indexed msgHash\\n    );\\n    event ExecutionFailure(\\n        bytes32 txHash, uint256 payment\\n    );\\n    event ExecutionSuccess(\\n        bytes32 txHash, uint256 payment\\n    );\\n\\n    uint256 public nonce;\\n    bytes32 public domainSeparator;\\n    // Mapping to keep track of all message hashes that have been approve by ALL REQUIRED owners\\n    mapping(bytes32 => uint256) public signedMessages;\\n    // Mapping to keep track of all hashes (message or transaction) that have been approve by ANY owners\\n    mapping(address => mapping(bytes32 => uint256)) public approvedHashes;\\n\\n    // This constructor ensures that this contract can only be used as a master copy for Proxy contracts\\n    constructor() public {\\n        // By setting the threshold it is not possible to call setup anymore,\\n        // so we create a Safe with 0 owners and threshold 1.\\n        // This is an unusable Safe, perfect for the mastercopy\\n        threshold = 1;\\n    }\\n\\n    /// @dev Setup function sets initial storage of contract.\\n    /// @param _owners List of Safe owners.\\n    /// @param _threshold Number of required confirmations for a Safe transaction.\\n    /// @param to Contract address for optional delegate call.\\n    /// @param data Data payload for optional delegate call.\\n    /// @param fallbackHandler Handler for fallback calls to this contract\\n    /// @param paymentToken Token that should be used for the payment (0 is ETH)\\n    /// @param payment Value that should be paid\\n    /// @param paymentReceiver Adddress that should receive the payment (or 0 if tx.origin)\\n    function setup(\\n        address[] calldata _owners,\\n        uint256 _threshold,\\n        address to,\\n        bytes calldata data,\\n        address fallbackHandler,\\n        address paymentToken,\\n        uint256 payment,\\n        address payable paymentReceiver\\n    )\\n        external\\n    {\\n        require(domainSeparator == 0, \\"Domain Separator already set!\\");\\n        domainSeparator = keccak256(abi.encode(DOMAIN_SEPARATOR_TYPEHASH, this));\\n        setupOwners(_owners, _threshold);\\n        if (fallbackHandler != address(0)) internalSetFallbackHandler(fallbackHandler);\\n        // As setupOwners can only be called if the contract has not been initialized we don\'t need a check for setupModules\\n        setupModules(to, data);\\n\\n        if (payment > 0) {\\n            // To avoid running into issues with EIP-170 we reuse the handlePayment function (to avoid adjusting code of that has been verified we do not adjust the method itself)\\n            // baseGas = 0, gasPrice = 1 and gas = payment => amount = (payment + 0) * 1 = payment\\n            handlePayment(payment, 0, 1, paymentToken, paymentReceiver);\\n        }\\n    }\\n\\n    /// @dev Allows to execute a Safe transaction confirmed by required number of owners and then pays the account that submitted the transaction.\\n    ///      Note: The fees are always transfered, even if the user transaction fails.\\n    /// @param to Destination address of Safe transaction.\\n    /// @param value Ether value of Safe transaction.\\n    /// @param data Data payload of Safe transaction.\\n    /// @param operation Operation type of Safe transaction.\\n    /// @param safeTxGas Gas that should be used for the Safe transaction.\\n    /// @param baseGas Gas costs for that are indipendent of the transaction execution(e.g. base transaction fee, signature check, payment of the refund)\\n    /// @param gasPrice Gas price that should be used for the payment calculation.\\n    /// @param gasToken Token address (or 0 if ETH) that is used for the payment.\\n    /// @param refundReceiver Address of receiver of gas payment (or 0 if tx.origin).\\n    /// @param signatures Packed signature data ({bytes32 r}{bytes32 s}{uint8 v})\\n    function execTransaction(\\n        address to,\\n        uint256 value,\\n        bytes calldata data,\\n        Enum.Operation operation,\\n        uint256 safeTxGas,\\n        uint256 baseGas,\\n        uint256 gasPrice,\\n        address gasToken,\\n        address payable refundReceiver,\\n        bytes calldata signatures\\n    )\\n        external\\n        returns (bool success)\\n    {\\n        bytes32 txHash;\\n        // Use scope here to limit variable lifetime and prevent `stack too deep` errors\\n        {\\n            bytes memory txHashData = encodeTransactionData(\\n                to, value, data, operation, // Transaction info\\n                safeTxGas, baseGas, gasPrice, gasToken, refundReceiver, // Payment info\\n                nonce\\n            );\\n            // Increase nonce and execute transaction.\\n            nonce++;\\n            txHash = keccak256(txHashData);\\n            checkSignatures(txHash, txHashData, signatures, true);\\n        }\\n        require(gasleft() >= safeTxGas, \\"Not enough gas to execute safe transaction\\");\\n        // Use scope here to limit variable lifetime and prevent `stack too deep` errors\\n        {\\n            uint256 gasUsed = gasleft();\\n            // If no safeTxGas has been set and the gasPrice is 0 we assume that all available gas can be used\\n            success = execute(to, value, data, operation, safeTxGas == 0 && gasPrice == 0 ? gasleft() : safeTxGas);\\n            gasUsed = gasUsed.sub(gasleft());\\n            // We transfer the calculated tx costs to the tx.origin to avoid sending it to intermediate contracts that have made calls\\n            uint256 payment = 0;\\n            if (gasPrice > 0) {\\n                payment = handlePayment(gasUsed, baseGas, gasPrice, gasToken, refundReceiver);\\n            }\\n            if (success) emit ExecutionSuccess(txHash, payment);\\n            else emit ExecutionFailure(txHash, payment);\\n        }\\n    }\\n\\n    function handlePayment(\\n        uint256 gasUsed,\\n        uint256 baseGas,\\n        uint256 gasPrice,\\n        address gasToken,\\n        address payable refundReceiver\\n    )\\n        private\\n        returns (uint256 payment)\\n    {\\n        // solium-disable-next-line security/no-tx-origin\\n        address payable receiver = refundReceiver == address(0) ? tx.origin : refundReceiver;\\n        if (gasToken == address(0)) {\\n            // For ETH we will only adjust the gas price to not be higher than the actual used gas price\\n            payment = gasUsed.add(baseGas).mul(gasPrice < tx.gasprice ? gasPrice : tx.gasprice);\\n            // solium-disable-next-line security/no-send\\n            require(receiver.send(payment), \\"Could not pay gas costs with ether\\");\\n        } else {\\n            payment = gasUsed.add(baseGas).mul(gasPrice);\\n            require(transferToken(gasToken, receiver, payment), \\"Could not pay gas costs with token\\");\\n        }\\n    }\\n\\n    /**\\n    * @dev Checks whether the signature provided is valid for the provided data, hash. Will revert otherwise.\\n    * @param dataHash Hash of the data (could be either a message hash or transaction hash)\\n    * @param data That should be signed (this is passed to an external validator contract)\\n    * @param signatures Signature data that should be verified. Can be ECDSA signature, contract signature (EIP-1271) or approved hash.\\n    * @param consumeHash Indicates that in case of an approved hash the storage can be freed to save gas\\n    */\\n    function checkSignatures(bytes32 dataHash, bytes memory data, bytes memory signatures, bool consumeHash)\\n        internal\\n    {\\n        // Load threshold to avoid multiple storage loads\\n        uint256 _threshold = threshold;\\n        // Check that a threshold is set\\n        require(_threshold > 0, \\"Threshold needs to be defined!\\");\\n        // Check that the provided signature data is not too short\\n        require(signatures.length >= _threshold.mul(65), \\"Signatures data too short\\");\\n        // There cannot be an owner with address 0.\\n        address lastOwner = address(0);\\n        address currentOwner;\\n        uint8 v;\\n        bytes32 r;\\n        bytes32 s;\\n        uint256 i;\\n        for (i = 0; i < _threshold; i++) {\\n            (v, r, s) = signatureSplit(signatures, i);\\n            // If v is 0 then it is a contract signature\\n            if (v == 0) {\\n                // When handling contract signatures the address of the contract is encoded into r\\n                currentOwner = address(uint256(r));\\n\\n                // Check that signature data pointer (s) is not pointing inside the static part of the signatures bytes\\n                // This check is not completely accurate, since it is possible that more signatures than the threshold are send.\\n                // Here we only check that the pointer is not pointing inside the part that is being processed\\n                require(uint256(s) >= _threshold.mul(65), \\"Invalid contract signature location: inside static part\\");\\n\\n                // Check that signature data pointer (s) is in bounds (points to the length of data -> 32 bytes)\\n                require(uint256(s).add(32) <= signatures.length, \\"Invalid contract signature location: length not present\\");\\n\\n                // Check if the contract signature is in bounds: start of data is s + 32 and end is start + signature length\\n                uint256 contractSignatureLen;\\n                // solium-disable-next-line security/no-inline-assembly\\n                assembly {\\n                    contractSignatureLen := mload(add(add(signatures, s), 0x20))\\n                }\\n                require(uint256(s).add(32).add(contractSignatureLen) <= signatures.length, \\"Invalid contract signature location: data not complete\\");\\n\\n                // Check signature\\n                bytes memory contractSignature;\\n                // solium-disable-next-line security/no-inline-assembly\\n                assembly {\\n                    // The signature data for contract signatures is appended to the concatenated signatures and the offset is stored in s\\n                    contractSignature := add(add(signatures, s), 0x20)\\n                }\\n                require(ISignatureValidator(currentOwner).isValidSignature(data, contractSignature) == EIP1271_MAGIC_VALUE, \\"Invalid contract signature provided\\");\\n            // If v is 1 then it is an approved hash\\n            } else if (v == 1) {\\n                // When handling approved hashes the address of the approver is encoded into r\\n                currentOwner = address(uint256(r));\\n                // Hashes are automatically approved by the sender of the message or when they have been pre-approved via a separate transaction\\n                require(msg.sender == currentOwner || approvedHashes[currentOwner][dataHash] != 0, \\"Hash has not been approved\\");\\n                // Hash has been marked for consumption. If this hash was pre-approved free storage\\n                if (consumeHash && msg.sender != currentOwner) {\\n                    approvedHashes[currentOwner][dataHash] = 0;\\n                }\\n            } else if (v > 30) {\\n                // To support eth_sign and similar we adjust v and hash the messageHash with the Ethereum message prefix before applying ecrecover\\n                currentOwner = ecrecover(keccak256(abi.encodePacked(\\"\\\\x19Ethereum Signed Message:\\\\n32\\", dataHash)), v - 4, r, s);\\n            } else {\\n                // Use ecrecover with the messageHash for EOA signatures\\n                currentOwner = ecrecover(dataHash, v, r, s);\\n            }\\n            require (\\n                currentOwner > lastOwner && owners[currentOwner] != address(0) && currentOwner != SENTINEL_OWNERS,\\n                \\"Invalid owner provided\\"\\n            );\\n            lastOwner = currentOwner;\\n        }\\n    }\\n\\n    /// @dev Allows to estimate a Safe transaction.\\n    ///      This method is only meant for estimation purpose, therefore two different protection mechanism against execution in a transaction have been made:\\n    ///      1.) The method can only be called from the safe itself\\n    ///      2.) The response is returned with a revert\\n    ///      When estimating set `from` to the address of the safe.\\n    ///      Since the `estimateGas` function includes refunds, call this method to get an estimated of the costs that are deducted from the safe with `execTransaction`\\n    /// @param to Destination address of Safe transaction.\\n    /// @param value Ether value of Safe transaction.\\n    /// @param data Data payload of Safe transaction.\\n    /// @param operation Operation type of Safe transaction.\\n    /// @return Estimate without refunds and overhead fees (base transaction and payload data gas costs).\\n    function requiredTxGas(address to, uint256 value, bytes calldata data, Enum.Operation operation)\\n        external\\n        authorized\\n        returns (uint256)\\n    {\\n        uint256 startGas = gasleft();\\n        // We don\'t provide an error message here, as we use it to return the estimate\\n        // solium-disable-next-line error-reason\\n        require(execute(to, value, data, operation, gasleft()));\\n        uint256 requiredGas = startGas - gasleft();\\n        // Convert response to string and return via error message\\n        revert(string(abi.encodePacked(requiredGas)));\\n    }\\n\\n    /**\\n    * @dev Marks a hash as approved. This can be used to validate a hash that is used by a signature.\\n    * @param hashToApprove The hash that should be marked as approved for signatures that are verified by this contract.\\n    */\\n    function approveHash(bytes32 hashToApprove)\\n        external\\n    {\\n        require(owners[msg.sender] != address(0), \\"Only owners can approve a hash\\");\\n        approvedHashes[msg.sender][hashToApprove] = 1;\\n        emit ApproveHash(hashToApprove, msg.sender);\\n    }\\n\\n    /**\\n    * @dev Marks a message as signed\\n    * @param _data Arbitrary length data that should be marked as signed on the behalf of address(this)\\n    */\\n    function signMessage(bytes calldata _data)\\n        external\\n        authorized\\n    {\\n        bytes32 msgHash = getMessageHash(_data);\\n        signedMessages[msgHash] = 1;\\n        emit SignMsg(msgHash);\\n    }\\n\\n    /**\\n    * Implementation of ISignatureValidator (see `interfaces/ISignatureValidator.sol`)\\n    * @dev Should return whether the signature provided is valid for the provided data.\\n    *       The save does not implement the interface since `checkSignatures` is not a view method.\\n    *       The method will not perform any state changes (see parameters of `checkSignatures`)\\n    * @param _data Arbitrary length data signed on the behalf of address(this)\\n    * @param _signature Signature byte array associated with _data\\n    * @return a bool upon valid or invalid signature with corresponding _data\\n    */\\n    function isValidSignature(bytes calldata _data, bytes calldata _signature)\\n        external\\n        returns (bytes4)\\n    {\\n        bytes32 messageHash = getMessageHash(_data);\\n        if (_signature.length == 0) {\\n            require(signedMessages[messageHash] != 0, \\"Hash not approved\\");\\n        } else {\\n            // consumeHash needs to be false, as the state should not be changed\\n            checkSignatures(messageHash, _data, _signature, false);\\n        }\\n        return EIP1271_MAGIC_VALUE;\\n    }\\n\\n    /// @dev Returns hash of a message that can be signed by owners.\\n    /// @param message Message that should be hashed\\n    /// @return Message hash.\\n    function getMessageHash(\\n        bytes memory message\\n    )\\n        public\\n        view\\n        returns (bytes32)\\n    {\\n        bytes32 safeMessageHash = keccak256(\\n            abi.encode(SAFE_MSG_TYPEHASH, keccak256(message))\\n        );\\n        return keccak256(\\n            abi.encodePacked(byte(0x19), byte(0x01), domainSeparator, safeMessageHash)\\n        );\\n    }\\n\\n    /// @dev Returns the bytes that are hashed to be signed by owners.\\n    /// @param to Destination address.\\n    /// @param value Ether value.\\n    /// @param data Data payload.\\n    /// @param operation Operation type.\\n    /// @param safeTxGas Fas that should be used for the safe transaction.\\n    /// @param baseGas Gas costs for data used to trigger the safe transaction.\\n    /// @param gasPrice Maximum gas price that should be used for this transaction.\\n    /// @param gasToken Token address (or 0 if ETH) that is used for the payment.\\n    /// @param refundReceiver Address of receiver of gas payment (or 0 if tx.origin).\\n    /// @param _nonce Transaction nonce.\\n    /// @return Transaction hash bytes.\\n    function encodeTransactionData(\\n        address to,\\n        uint256 value,\\n        bytes memory data,\\n        Enum.Operation operation,\\n        uint256 safeTxGas,\\n        uint256 baseGas,\\n        uint256 gasPrice,\\n        address gasToken,\\n        address refundReceiver,\\n        uint256 _nonce\\n    )\\n        public\\n        view\\n        returns (bytes memory)\\n    {\\n        bytes32 safeTxHash = keccak256(\\n            abi.encode(SAFE_TX_TYPEHASH, to, value, keccak256(data), operation, safeTxGas, baseGas, gasPrice, gasToken, refundReceiver, _nonce)\\n        );\\n        return abi.encodePacked(byte(0x19), byte(0x01), domainSeparator, safeTxHash);\\n    }\\n\\n    /// @dev Returns hash to be signed by owners.\\n    /// @param to Destination address.\\n    /// @param value Ether value.\\n    /// @param data Data payload.\\n    /// @param operation Operation type.\\n    /// @param safeTxGas Fas that should be used for the safe transaction.\\n    /// @param baseGas Gas costs for data used to trigger the safe transaction.\\n    /// @param gasPrice Maximum gas price that should be used for this transaction.\\n    /// @param gasToken Token address (or 0 if ETH) that is used for the payment.\\n    /// @param refundReceiver Address of receiver of gas payment (or 0 if tx.origin).\\n    /// @param _nonce Transaction nonce.\\n    /// @return Transaction hash.\\n    function getTransactionHash(\\n        address to,\\n        uint256 value,\\n        bytes memory data,\\n        Enum.Operation operation,\\n        uint256 safeTxGas,\\n        uint256 baseGas,\\n        uint256 gasPrice,\\n        address gasToken,\\n        address refundReceiver,\\n        uint256 _nonce\\n    )\\n        public\\n        view\\n        returns (bytes32)\\n    {\\n        return keccak256(encodeTransactionData(to, value, data, operation, safeTxGas, baseGas, gasPrice, gasToken, refundReceiver, _nonce));\\n    }\\n}\\n","compiler":{"name":"solc","version":"0.5.16+commit.9c3226ce.Emscripten.clang"},"networks":{"1":{"links":{},"events":{},"address":"0x34CfAC646f301356fAa8B21e94227e3583Fe3F5F","updated_at":1587391878775},"4":{"links":{},"events":{},"address":"0x34CfAC646f301356fAa8B21e94227e3583Fe3F5F","updated_at":1587391878875},"5":{"links":{},"events":{},"address":"0x34CfAC646f301356fAa8B21e94227e3583Fe3F5F","updated_at":1587391879067},"42":{"links":{},"events":{},"address":"0x34CfAC646f301356fAa8B21e94227e3583Fe3F5F","updated_at":1587391878968}},"schemaVersion":"3.1.0","updatedAt":"2020-04-20T14:11:17.641Z","devdoc":{"author":"Stefan George - <stefan@gnosis.io>Richard Meissner - <richard@gnosis.io>Ricardo Guilherme Schmidt - (Status Research & Development GmbH) - Gas Token Payment","methods":{"addOwnerWithThreshold(address,uint256)":{"details":"Allows to add a new owner to the Safe and update the threshold at the same time.      This can only be done via a Safe transaction.","params":{"_threshold":"New threshold.","owner":"New owner address."}},"approveHash(bytes32)":{"details":"Marks a hash as approved. This can be used to validate a hash that is used by a signature.","params":{"hashToApprove":"The hash that should be marked as approved for signatures that are verified by this contract."}},"changeMasterCopy(address)":{"details":"Allows to upgrade the contract. This can only be done via a Safe transaction.","params":{"_masterCopy":"New contract address."}},"changeThreshold(uint256)":{"details":"Allows to update the number of required confirmations by Safe owners.      This can only be done via a Safe transaction.","params":{"_threshold":"New threshold."}},"disableModule(address,address)":{"details":"Allows to remove a module from the whitelist.      This can only be done via a Safe transaction.","params":{"module":"Module to be removed.","prevModule":"Module that pointed to the module to be removed in the linked list"}},"enableModule(address)":{"details":"Allows to add a module to the whitelist.      This can only be done via a Safe transaction.","params":{"module":"Module to be whitelisted."}},"encodeTransactionData(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,uint256)":{"details":"Returns the bytes that are hashed to be signed by owners.","params":{"_nonce":"Transaction nonce.","baseGas":"Gas costs for data used to trigger the safe transaction.","data":"Data payload.","gasPrice":"Maximum gas price that should be used for this transaction.","gasToken":"Token address (or 0 if ETH) that is used for the payment.","operation":"Operation type.","refundReceiver":"Address of receiver of gas payment (or 0 if tx.origin).","safeTxGas":"Fas that should be used for the safe transaction.","to":"Destination address.","value":"Ether value."},"return":"Transaction hash bytes."},"execTransaction(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,bytes)":{"details":"Allows to execute a Safe transaction confirmed by required number of owners and then pays the account that submitted the transaction.      Note: The fees are always transfered, even if the user transaction fails.","params":{"baseGas":"Gas costs for that are indipendent of the transaction execution(e.g. base transaction fee, signature check, payment of the refund)","data":"Data payload of Safe transaction.","gasPrice":"Gas price that should be used for the payment calculation.","gasToken":"Token address (or 0 if ETH) that is used for the payment.","operation":"Operation type of Safe transaction.","refundReceiver":"Address of receiver of gas payment (or 0 if tx.origin).","safeTxGas":"Gas that should be used for the Safe transaction.","signatures":"Packed signature data ({bytes32 r}{bytes32 s}{uint8 v})","to":"Destination address of Safe transaction.","value":"Ether value of Safe transaction."}},"execTransactionFromModule(address,uint256,bytes,uint8)":{"details":"Allows a Module to execute a Safe transaction without any further confirmations.","params":{"data":"Data payload of module transaction.","operation":"Operation type of module transaction.","to":"Destination address of module transaction.","value":"Ether value of module transaction."}},"execTransactionFromModuleReturnData(address,uint256,bytes,uint8)":{"details":"Allows a Module to execute a Safe transaction without any further confirmations and return data","params":{"data":"Data payload of module transaction.","operation":"Operation type of module transaction.","to":"Destination address of module transaction.","value":"Ether value of module transaction."}},"getMessageHash(bytes)":{"details":"Returns hash of a message that can be signed by owners.","params":{"message":"Message that should be hashed"},"return":"Message hash."},"getModules()":{"details":"Returns array of first 10 modules.","return":"Array of modules."},"getModulesPaginated(address,uint256)":{"details":"Returns array of modules.","params":{"pageSize":"Maximum number of modules that should be returned.","start":"Start of the page."},"return":"Array of modules."},"getOwners()":{"details":"Returns array of owners.","return":"Array of Safe owners."},"getTransactionHash(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,uint256)":{"details":"Returns hash to be signed by owners.","params":{"_nonce":"Transaction nonce.","baseGas":"Gas costs for data used to trigger the safe transaction.","data":"Data payload.","gasPrice":"Maximum gas price that should be used for this transaction.","gasToken":"Token address (or 0 if ETH) that is used for the payment.","operation":"Operation type.","refundReceiver":"Address of receiver of gas payment (or 0 if tx.origin).","safeTxGas":"Fas that should be used for the safe transaction.","to":"Destination address.","value":"Ether value."},"return":"Transaction hash."},"isValidSignature(bytes,bytes)":{"details":"Should return whether the signature provided is valid for the provided data.      The save does not implement the interface since `checkSignatures` is not a view method.      The method will not perform any state changes (see parameters of `checkSignatures`)","params":{"_data":"Arbitrary length data signed on the behalf of address(this)","_signature":"Signature byte array associated with _data"},"return":"a bool upon valid or invalid signature with corresponding _data"},"removeOwner(address,address,uint256)":{"details":"Allows to remove an owner from the Safe and update the threshold at the same time.      This can only be done via a Safe transaction.","params":{"_threshold":"New threshold.","owner":"Owner address to be removed.","prevOwner":"Owner that pointed to the owner to be removed in the linked list"}},"requiredTxGas(address,uint256,bytes,uint8)":{"details":"Allows to estimate a Safe transaction.      This method is only meant for estimation purpose, therefore two different protection mechanism against execution in a transaction have been made:      1.) The method can only be called from the safe itself      2.) The response is returned with a revert      When estimating set `from` to the address of the safe.      Since the `estimateGas` function includes refunds, call this method to get an estimated of the costs that are deducted from the safe with `execTransaction`","params":{"data":"Data payload of Safe transaction.","operation":"Operation type of Safe transaction.","to":"Destination address of Safe transaction.","value":"Ether value of Safe transaction."},"return":"Estimate without refunds and overhead fees (base transaction and payload data gas costs)."},"setFallbackHandler(address)":{"details":"Allows to add a contract to handle fallback calls.      Only fallback calls without value and with data will be forwarded.      This can only be done via a Safe transaction.","params":{"handler":"contract to handle fallbacks calls."}},"setup(address[],uint256,address,bytes,address,address,uint256,address)":{"details":"Setup function sets initial storage of contract.","params":{"_owners":"List of Safe owners.","_threshold":"Number of required confirmations for a Safe transaction.","data":"Data payload for optional delegate call.","fallbackHandler":"Handler for fallback calls to this contract","payment":"Value that should be paid","paymentReceiver":"Adddress that should receive the payment (or 0 if tx.origin)","paymentToken":"Token that should be used for the payment (0 is ETH)","to":"Contract address for optional delegate call."}},"signMessage(bytes)":{"details":"Marks a message as signed","params":{"_data":"Arbitrary length data that should be marked as signed on the behalf of address(this)"}},"swapOwner(address,address,address)":{"details":"Allows to swap/replace an owner from the Safe with another address.      This can only be done via a Safe transaction.","params":{"newOwner":"New owner address.","oldOwner":"Owner address to be replaced.","prevOwner":"Owner that pointed to the owner to be replaced in the linked list"}}},"title":"Gnosis Safe - A multisignature wallet with support for confirmations using signed messages based on ERC191."},"userdoc":{"methods":{"isValidSignature(bytes,bytes)":{"notice":"Implementation of ISignatureValidator (see `interfaces/ISignatureValidator.sol`)"}}}}')},function(f,e,t){f.exports=class{constructor(f){this.ABI=f.ABI,this.address=f.address,this.web3=f.web3,this.mode=f.mode,this.privateKey=f.privateKey}getTarget(f){const e=this.address.connectors[f];return e||console.error(`${f} is invalid connector.`)}async getTxObj(f){if(!f.from)throw new Error("'from' is not defined.");if(!f.callData)throw new Error("'calldata' is not defined.");if(!f.to)throw new Error("'to' is not defined.");0==f.type||f.type||(f.type=0);let e={from:f.from,to:f.to,data:"0x"==f.callData?"0x":f.callData,value:f.value?f.value:0};if(0==f.type){let t={...e};if(e.gas=f.gas?f.gas:(1.1*await this.web3.eth.estimateGas(t)).toFixed(0),"node"==this.mode){if(!f.gasPrice)throw new Error("`gasPrice` is not defined.");e.nonce=f.nonce?f.nonce:await this.web3.eth.getTransactionCount(e.from)}f.gasPrice&&(e.gasPrice=f.gasPrice)}return e}getInterface(f,e,t){const n=this.ABI[f][e];for(let f=0;f<n.length;f++)if(n[f].name==t)return n[f];return console.error(`${t} is invalid method.`)}getConnectorInterface(f,e){return this.getInterface("connectors",f,e)}encodeMethod(f){let e=f.connector,t=f.method,n=f.args,a=this.getInterface("connectors",e,t);return this.web3.eth.abi.encodeFunctionCall(a,n)}encodeSpells(f){let e=Array.isArray(f.data)?f.data:f.spells.data,t=[],n=[];for(let f=0;f<e.length;f++)t.push(this.getTarget(e[f].connector)),n.push(this.encodeMethod(e[f]));return[t,n]}async getAddress(){if("node"==this.mode)return this.web3.eth.accounts.privateKeyToAccount(this.privateKey).address;let f=await this.web3.eth.getAccounts();return 0==f.length?console.log("No ethereum address detected."):f[0]}filterAddress(f){if(this.web3.utils.isAddress(f.toLowerCase()))return this.web3.utils.toChecksumAddress(f.toLowerCase());{let e=t(8);if(-1==Object.keys(e).indexOf(f.toLowerCase()))throw new Error("'token' symbol not found.");return this.web3.utils.toChecksumAddress(e[f.toLowerCase()].address)}}async estimateGas(f){let e=this.web3.eth.abi.encodeFunctionCall(f.abi,f.args),t=this.web3;return new Promise(async(n,a)=>{await t.eth.estimateGas({from:f.from,to:f.to,data:e,value:f.value}).then(f=>{n(f)}).catch(t=>{a({error:t,data:{abi:f.abi,args:f.args,from:f.from,to:f.to,data:e,value:f.value}}),console.error(t)})})}}},function(f,e,t){const n=t(9);f.exports=class extends n{constructor(f){super(f),this.ABI=f.ABI,this.tokens=f.tokens,this.math=f.math,this.internal=f.internal,this.web3=f.web3,this.dsa=f}async transfer(f){let e,t=await this.internal.getAddress(),n=this.dsa?this.dsa:this;if(!f.token)throw new Error("'token' is not defined.");if(!f.to&&(f.to=n.instance.address,f.to==n.address.genesis))throw new Error("'to' is not defined and instance is not set.");if(!f.amount)throw new Error("'amount' is not defined");if(f.from||(f.from=t),"eth"==f.token.toLowerCase()||f.token.toLowerCase()==this.tokens.info.eth.address){if("-1"==f.amount||f.amount==n.maxValue)throw new Error("ETH amount value cannot be passed as '-1'.");f.value=f.amount,f.callData="0x",e=await this.internal.getTxObj(f)}else{f.toAddr=f.to,f.to=this.internal.filterAddress(f.token);var a=await new this.web3.eth.Contract(this.ABI.basic.erc20,this.internal.filterAddress(f.token));("-1"==f.amount||f.amount==n.maxValue)&&await a.methods.balanceOf(f.from).call().then(e=>f.amount=e).catch(f=>{throw new Error(`Error while getting token balance: ${f}`)}),f.callData=a.methods.transfer(f.toAddr,this.math.bigNumInString(f.amount)).encodeABI(),e=await this.internal.getTxObj(f)}return new Promise((f,t)=>n.sendTxn(e).then(e=>f(e)).catch(f=>t(f)))}async approve(f){let e,t=await this.internal.getAddress(),n=this.dsa;if(!f.token)throw new Error("'token' is not defined.");if(!f.to)throw new Error("'to' address is not defined");if(!f.amount)throw new Error("'amount' is not defined");if(f.from||(f.from=t),"eth"==f.token.toLowerCase()||f.token.toLowerCase()==this.tokens.info.eth.address)return new Promise((f,e)=>{e("ETH does not require approve.")});f.toAddr=f.to,f.to=this.internal.filterAddress(f.token);var a=await new this.web3.eth.Contract(this.ABI.basic.erc20,this.internal.filterAddress(f.token));return f.callData=a.methods.approve(f.toAddr,f.amount).encodeABI(),e=await this.internal.getTxObj(f),new Promise((f,t)=>n.sendTxn(e).then(e=>f(e)).catch(f=>t(f)))}async getAllowance(f){let e=await this.internal.getAddress(),t=this.web3;if(!f.token)throw new Error("'token' is not defined.");if(!f.to)throw new Error("'to' address is not defined");if(f.from||(f.from=e),"eth"==f.token.toLowerCase()||f.token.toLowerCase()==this.tokens.info.eth.address)return new Promise(f=>{f("ETH does not have allowance.")});var n=await new t.eth.Contract(this.ABI.basic.erc20,this.internal.filterAddress(f.token));return new Promise((e,t)=>n.methods.allowance(f.from,f.to).call().then(f=>{e(f)}).catch(f=>{t(f)}))}async decimal(f){let e=this.web3;if(!this.web3.utils.isAddress(f.toLowerCase()))throw new Error("'token' address not vaild.");var t=await new e.eth.Contract(this.ABI.basic.erc20,f);return new Promise((f,e)=>t.methods.decimals().call().then(e=>{f(e)}).catch(f=>{e(f)}))}async fromDecimalInternal(f,e){if(!this.web3.utils.isAddress(e.toLowerCase()))throw new Error("'token' address not vaild.");return new Promise((t,n)=>this.decimal(e).then(e=>{var n=this.math.bigNumInString(f*10**e);t(n)}).catch(f=>{n(f)}))}async toDecimalInternal(f,e){if(!this.web3.utils.isAddress(e.toLowerCase()))throw new Error("'token' address not vaild.");return new Promise((t,n)=>this.decimal(e).then(e=>{var n=this.math.bigNumInString(f/10**e);t(n)}).catch(f=>{n(f)}))}}},function(f,e){f.exports=class{constructor(f){this.ABI=f.ABI,this.address=f.address,this.internal=f.internal,this.web3=f.web3,this.instance=f.instance,this.origin=f.origin,this.dsa=f}encoded(f){var e=this.internal.encodeSpells(f);return{targets:e[0],spells:e[1]}}async estimateGas(f){var e=this.internal,t=e.encodeSpells(f);if(t.push(this.origin),f.to||(f.to=this.instance.address),f.to==this.address.genesis)throw new Error("Please configure the DSA instance by calling dsa.setInstance(dsaId). More details: https://docs.instadapp.io/setup");f.from||(f.from=await e.getAddress()),f.value||(f.value="0");var n={abi:e.getInterface("core","account","cast"),args:t,from:f.from,to:f.to,value:f.value};return new Promise((f,t)=>{e.estimateGas(n).then(e=>{f(e)}).catch(f=>{t(f)})})}encodeABI(f){let e=this.internal.encodeSpells(f);if(f.to||(f.to=this.instance.address),f.to==this.address.genesis)throw new Error("Please configure the DSA instance by calling dsa.setInstance(dsaId). More details: https://docs.instadapp.io/setup");return f.origin||(f.origin=this.origin),new this.web3.eth.Contract(this.ABI.core.account,f.to).methods.cast(...e,f.origin).encodeABI()}}},function(f,e){f.exports=class{constructor(f){this.ABI=f.ABI,this.address=f.address,this.internal=f.internal,this.web3=f.web3,this.mode=f.mode,this.privateKey=f.privateKey,this.dsa=f}async send(f){return new Promise((e,t)=>f.to==this.address.genesis?t("Please configure the DSA instance by calling dsa.setInstance(dsaId). More details: https://docs.instadapp.io/setup"):void("node"==this.mode?this.web3.eth.accounts.signTransaction(f,this.privateKey).then(f=>{this.web3.eth.sendSignedTransaction(f.rawTransaction).on("transactionHash",f=>{e(f)}).on("error",f=>{t(f)})}):this.web3.eth.sendTransaction(f).on("transactionHash",f=>{e(f)}).on("error",f=>{t(f)})))}async cancel(f){return f.nonce||reject("'nonce` not defined."),f.gasPrice||reject("'gasPrice` not defined."),new Promise(async(e,t)=>{let n=await this.internal.getAddress(),a={from:n,to:n,value:0,data:"0x",gasPrice:f.gasPrice,gas:"27500",nonce:f.nonce};await this.send(a).then(f=>e(f)).catch(f=>t(f))})}async speedUp(f){return new Promise(async(e,t)=>{let n=await this.internal.getAddress();f.txHash||t("'txHash` not defined."),f.gasPrice||t("'gasPrice` not defined."),this.web3.eth.getTransaction(f.txHash).then(async a=>{a.from.toLowerCase()!=n.toLowerCase()&&t("'from' address doesnt match.");let i={from:a.from,to:a.to,value:a.value,data:a.input,gasPrice:f.gasPrice.toFixed(0),gas:a.gas,nonce:a.nonce};await this.send(i).then(f=>e(f)).catch(f=>t(f))}).catch(f=>t(f))})}async getTxNonce(f){return new Promise(async(e,t)=>{this.web3.eth.getTransaction(f).then(f=>e(f.nonce)).catch(f=>t(f))})}async getTxCount(f){return new Promise(async(e,t)=>{this.web3.eth.getTransactionCount(f).then(f=>e(f)).catch(f=>t(f))})}}},function(f,e){f.exports=class{constructor(f){this.web3=f.web3}divWithDec(f,e){return+f/10**(e=e||0)}bigNumInString(f){var e;1>Math.abs(f)?(e=parseInt(f.toString().split("e-")[1]))&&(f*=Math.pow(10,e-1),f="0."+Array(e).join("0")+f.toString().substring(2)):20<(e=parseInt(f.toString().split("+")[1]))&&(e-=20,f/=Math.pow(10,e),f+=Array(e+1).join("0"));return f+""}}},function(f,e){f.exports=class{constructor(f){this.web3=f.web3,this.ABI=f.ABI,this.address=f.address,this.internal=f.internal}async count(){var f=new this.web3.eth.Contract(this.ABI.core.list,this.address.core.list);return new Promise((e,t)=>f.methods.accounts().call({from:this.address.genesis}).then(f=>{e(f)}).catch(f=>{t(f)}))}async getAccounts(f){f.includes(".eth")&&(f=await this.internal.web3.eth.ens.getAddress(f)),f||(f=await this.internal.getAddress());var e=new this.web3.eth.Contract(this.ABI.read.core,this.address.read.core);return new Promise((t,n)=>e.methods.getAuthorityDetails(f).call({from:this.address.genesis}).then(f=>{for(var e=f.IDs.length,n=[],a=0;a<e;a++)n.push({id:f.IDs[a],address:f.accounts[a],version:f.versions[a]});t(n)}).catch(f=>{n(f)}))}async getAuthById(f){var e=new this.web3.eth.Contract(this.ABI.read.core,this.address.read.core);return new Promise((t,n)=>e.methods.getIDAuthorities(f).call({from:this.address.genesis}).then(f=>{t(f)}).catch(f=>{n(f)}))}async getAuthByAddress(f){var e=new this.web3.eth.Contract(this.ABI.read.core,this.address.read.core);return new Promise((t,n)=>e.methods.getAccountAuthorities(f).call({from:this.address.genesis}).then(f=>{t(f)}).catch(f=>{n(f)}))}async getAuthoritiesTypes(f){var e=new this.web3.eth.Contract(this.ABI.read.core,this.address.read.core);return new Promise((t,n)=>e.methods.getAccountAuthoritiesTypes(f).call({from:this.address.genesis}).then(f=>{t(f)}).catch(f=>{n(f)}))}}},function(f,e){f.exports=class{constructor(f){this.ABI=f.ABI,this.address=f.address,this.tokens=f.tokens,this.web3=f.web3,this.instance=f.instance,this.dsa=f}ctokenMap(f){const e=this.tokens.getList({type:"ctoken"});for(const t in e)if(e[t].symbol===f)return e[t].root}getCtokens(){var f=this.tokens.info,e={};return Object.keys(f).forEach(t=>{"ctoken"==f[t].type&&(e[t]=f[t])}),e}getCtokensAddresses(f){f||(f=getCtokens());var e=[];return Object.keys(f).forEach(t=>{e.push(f[t].address)}),e}getPosition(f,e){var t=f||this.instance.address,n=this.getCtokens(),a={protocol:"compound",method:"getPosition",args:[t,this.getCtokensAddresses(n)]};return new Promise(async(f,t)=>{await this.dsa.read(a).then(t=>{var a={},i=0,s=0,r=0;Object.keys(n).forEach((f,o)=>{var d,u=n[f].root;d="ctoken"==e?f:"caddress"==e?n[f].address:"address"==e?this.tokens.info[u].address:u;var p=t[0][o],l=this.tokens.info[n[f].root].decimals;a[d]={};var y=p[0]/10**18,c=p[1]/10**18;a[d].priceInEth=y,a[d].priceInUsd=c;var m=p[2]/1e18;a[d].exchangeRate=m,a[d].ctknBalance=+p[3];var b=p[3]*m/10**l;a[d].supply=b,i+=b*y,r+=b*y*n[f].factor;var h=p[4]/10**l;a[d].borrow=h,s+=h*y;var T=2102400*p[5]/1e18;a[d].supplyRate=100*T,a[d].supplyYield=100*((1+T/365)**365-1);var g=2102400*p[6]/1e18;a[d].borrowRate=100*g,a[d].borrowYield=100*((1+g/365)**365-1)}),a.totalSupplyInEth=i,a.totalBorrowInEth=s,a.maxBorrowLimitInEth=r;var o=s/i;a.status=o;var d=r/i;a.liquidation=d,a.compBalance=t[1].balance/10**18,a.compAccrued=t[1].allocated/10**18,a.compDelegate=t[1].delegate,a.compVotes=t[1].votes,f(a)}).catch(f=>{t(f)})})}}},function(f,e){var t={"ETH-A":{token:"ETH",ratio:2/3,joinAddr:"0x2F0b23f53734252Bda2277357e97e1517d6B042A",addr:"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",stabiltyRate:0,price:0,typeBytes:"0x4554482d41000000000000000000000000000000000000000000000000000000"},"ETH-B":{token:"ETH",ratio:10/13,joinAddr:"0x08638eF1A205bE6762A8b935F5da9b700Cf7322c",addr:"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",stabiltyRate:0,price:0,typeBytes:"0x4554482d42000000000000000000000000000000000000000000000000000000"},"BAT-A":{token:"BAT",ratio:2/3,joinAddr:"0x3D0B1912B66114d4096F48A8CEe3A56C231772cA",addr:"0x0d8775f648430679a709e98d2b0cb6250d2887ef",stabiltyRate:0,price:0,typeBytes:"0x4241542d41000000000000000000000000000000000000000000000000000000"},"USDC-A":{token:"USDC",ratio:10/11,joinAddr:"0xa191e578a6736167326d05c119ce0c90849e84b7",addr:"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48",stabiltyRate:0,price:0,typeBytes:"0x555344432d410000000000000000000000000000000000000000000000000000"},"WBTC-A":{token:"WBTC",ratio:2/3,joinAddr:"0xBF72Da2Bd84c5170618Fbe5914B0ECA9638d5eb5",addr:"0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599",stabiltyRate:0,price:0,typeBytes:"0x574254432d410000000000000000000000000000000000000000000000000000"},"USDC-B":{token:"USDC",ratio:5/6,joinAddr:"0x2600004fd1585f7270756DDc88aD9cfA10dD0428",addr:"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48",stabiltyRate:0,price:0,typeBytes:"0x555344432d420000000000000000000000000000000000000000000000000000"},"ZRX-A":{token:"ZRX",ratio:4/7,joinAddr:"0xc7e8Cd72BDEe38865b4F5615956eF47ce1a7e5D0",addr:"0xE41d2489571d322189246DaFA5ebDe1F4699F498",stabiltyRate:0,price:0,typeBytes:"0x5a52582d41000000000000000000000000000000000000000000000000000000"},"KNC-A":{token:"KNC",ratio:4/7,joinAddr:"0x475F1a89C1ED844A08E8f6C50A00228b5E59E4A9",addr:"0xdd974D5C2e2928deA5F71b9825b8b646686BD200",stabiltyRate:0,price:0,typeBytes:"0x4b4e432d41000000000000000000000000000000000000000000000000000000"},"MANA-A":{token:"MANA",ratio:4/7,joinAddr:"0xA6EA3b9C04b8a38Ff5e224E7c3D6937ca44C0ef9",addr:"0x0F5D2fB29fb7d3CFeE444a200298f468908cC942",stabiltyRate:0,price:0,typeBytes:"0x4d414e412d410000000000000000000000000000000000000000000000000000"},"USDT-A":{token:"USDT",ratio:2/3,joinAddr:"0x0Ac6A1D74E84C2dF9063bDDc31699FF2a2BB22A2",addr:"0xdAC17F958D2ee523a2206206994597C13D831ec7",stabiltyRate:0,price:0,typeBytes:"0x555344542d410000000000000000000000000000000000000000000000000000"},"PAXUSD-A":{token:"PAX",ratio:5/6,joinAddr:"0x7e62B7E279DFC78DEB656E34D6a435cC08a44666",addr:"0x8E870D67F660D95d5be530380D0eC0bd388289E1",stabiltyRate:0,price:0,typeBytes:"0x5041585553442d41000000000000000000000000000000000000000000000000"},"TUSD-A":{token:"TUSD",ratio:5/6,joinAddr:"0x4454aF7C8bb9463203b66C816220D41ED7837f44",addr:"0x0000000000085d4780B73119b644AE5ecd22b376",stabiltyRate:0,price:0,typeBytes:"0x545553442d410000000000000000000000000000000000000000000000000000"},"COMP-A":{token:"COMP",ratio:4/7,joinAddr:"0xBEa7cDfB4b49EC154Ae1c0D731E4DC773A3265aA",addr:"0xc00e94Cb662C3520282E6f5717214004A7f26888",stabiltyRate:0,price:0,typeBytes:"0x434f4d502d410000000000000000000000000000000000000000000000000000"},"LINK-A":{token:"LINK",ratio:4/7,joinAddr:"0xdFccAf8fDbD2F4805C174f856a317765B49E4a50",addr:"0x514910771AF9Ca656af840dff83E8264EcF986CA",stabiltyRate:0,price:0,typeBytes:"0x4c494e4b2d410000000000000000000000000000000000000000000000000000"},"LRC-A":{token:"LRC",ratio:4/7,joinAddr:"0xBBbbCA6A901c926F240b89EacB641d8Aec7AEafD",addr:"0x6C186404A7A238D3d6027C0299D1822c1cf5d8f1",stabiltyRate:0,price:0,typeBytes:"0x4c52432d41000000000000000000000000000000000000000000000000000000"}};f.exports=class{constructor(f){this.ABI=f.ABI,this.address=f.address,this.tokens=f.tokens,this.web3=f.web3,this.math=f.math,this.dsa=f,this.colInfo=t}calRate(f){return(f=+f/10**27)**31545e3-1}async getVaults(f){var e={protocol:"maker",method:"getVaults",args:[f||this.instance.address]};return new Promise(async(f,t)=>{await this.dsa.read(e).then(e=>{for(var t,n=e,a={},i=0;i<n.length;i++){a[t=n[i][0]]={},a[t].owner=n[i][1],a[t].colName=n[i][2],a[t].token=this.colInfo[n[i][2]].token;var s=this.math.divWithDec(n[i][3],18);a[t].col=s;var r=this.math.divWithDec(n[i][5],18);a[t].debt=r,a[t].liquidatedCol=this.math.divWithDec(n[i][6],18),a[t].rate=100*this.calRate(n[i][7]);var o=this.math.divWithDec(n[i][8],27);a[t].price=o,a[t].status=r/(s*o),a[t].liquidation=1/this.math.divWithDec(n[i][9],27),a[t].urn=n[i][10]}f(a)}).catch(f=>{t(f)})})}async getCollateralInfo(){var f={protocol:"maker",method:"getColInfo",args:[Object.keys(this.colInfo)]};return new Promise(async(e,t)=>{await this.dsa.read(f).then(f=>{var t={};Object.keys(this.colInfo).forEach((e,n)=>{t[e]={},t[e].token=this.colInfo[e].token,t[e].rate=100*this.calRate(f[n][0]),t[e].price=f[n][1]/1e27,t[e].ratio=1/(f[n][2]/1e27),t[e].debtCeiling=+f[n][3],t[e].totalDebt=f[n][4]/1e18}),e(t)}).catch(f=>{t(f)})})}async getDaiPosition(f){var e={protocol:"maker",method:"getDaiPosition",args:[f]};return new Promise(async(f,t)=>{await this.dsa.read(e).then(e=>{var t={balance:e[0]/1e18,rate:this.calRate(e[1])};f(t)}).catch(f=>{t(f)})})}async getDaiRate(){var f={protocol:"maker",method:"getDsrRate",args:[]};return new Promise(async(e,t)=>{await this.dsa.read(f).then(f=>{e({rate:this.calRate(f)})}).catch(f=>{t(f)})})}}},function(f,e){f.exports=class{constructor(f){this.web3=f.web3,this.address=f.address,this.compound=f.compound,this.dsa=f}async getLiquidity(){return new Promise(async(f,e)=>{await this.compound.getPosition(this.address.core.instapool,"token").then(e=>{var t=.995*e.maxBorrowLimitInEth,n={eth:t,dai:t/e.dai.priceInEth,usdc:t/e.usdc.priceInEth,usdt:t/e.usdt.priceInEth,bat:t/e.bat.priceInEth,zrx:t/e.zrx.priceInEth,wbtc:t/e.wbtc.priceInEth,rep:t/e.rep.priceInEth};f(n)}).catch(f=>{e(f)})})}}},function(f,e){f.exports=class{constructor(f){this.web3=f.web3,this.address=f.address,this.dsa=f,this.internal=f.internal,this.tokens=f.tokens}async getLiquidity(f){let e=[],t=[];if(f)f.forEach(f=>{let n=this.tokens.info[f.toLowerCase()];t.push(n.address),e.push(f.toLowerCase())});else{let f=this.tokens.getTokenByType("atoken");e=Object.values(f).map(f=>f.root);let n=this.tokens.getTokenByType("ctoken"),a=Object.values(n).filter(f=>-1===e.indexOf(f.root)).map(f=>f.root);e=[...e,...a],t=e.map(f=>this.tokens.info[f].address)}var n={protocol:"instapool_v2",method:"getTokensLimit",args:[t]};return new Promise((f,t)=>this.dsa.read(n).then(t=>{let n={};e.forEach((f,e)=>{n[f]={dydx:this.tokens.toDecimal(t[e].dydx,f),aave:t[e].aave/1e18,maker:t[e].maker/1e18,compound:t[e].compound/1e18}}),f(n)}).catch(f=>{t(f)}))}encodeFlashCastData(f){let e=this.internal.encodeSpells(f);return this.web3.eth.abi.encodeParameters(["address[]","bytes[]"],[e[0],e[1]])}}},function(f,e){f.exports=class{constructor(f){this.ABI=f.ABI,this.address=f.address,this.tokens=f.tokens,this.math=f.math,this.web3=f.web3,this.instance=f.instance,this.dsa=f}async getBuyAmount(f,e,t,n){let a=n?n*10**16:10**16;a=this.math.bigNumInString(a)+"";var i={protocol:"oasis",method:"getBuyAmount",args:[this.tokens.info[f.toLowerCase()].address,this.tokens.info[e.toLowerCase()].address,this.tokens.fromDecimal(t,e),this.math.bigNumInString(a)]};return new Promise((e,t)=>this.dsa.read(i).then(t=>{var n={buyAmt:this.tokens.toDecimal(t[0],f),buyAmtRaw:t[0],unitAmt:t[1]};e(n)}).catch(f=>{t(f)}))}async getSellAmount(f,e,t,n){let a=n?n*10**16:10**16;a=this.math.bigNumInString(a)+"";var i={protocol:"oasis",method:"getSellAmount",args:[this.tokens.info[f.toLowerCase()].address,this.tokens.info[e.toLowerCase()].address,this.tokens.fromDecimal(t,f),this.math.bigNumInString(a)]};return new Promise((f,t)=>this.dsa.read(i).then(t=>{var n={sellAmt:this.tokens.toDecimal(t[0],e),sellAmtRaw:t[0],unitAmt:t[1]};f(n)}).catch(f=>{t(f)}))}}},function(f,e){f.exports=class{constructor(f){this.ABI=f.ABI,this.address=f.address,this.tokens=f.tokens,this.web3=f.web3,this.instance=f.instance,this.math=f.math,this.internal=f.internal,this.erc20=f.erc20,this.dsa=f}async getBuyAmount(f,e,t,n){let a=n?n*10**16:10**16;a=this.math.bigNumInString(a)+"";let i=this.tokens.isToken(e),s=i?this.tokens.fromDecimal(t,i):await this.erc20.fromDecimalInternal(t,e);var r={protocol:"kyber",method:"getBuyAmount",args:[this.internal.filterAddress(f),this.internal.filterAddress(e),s,this.math.bigNumInString(a)]};return new Promise((e,t)=>this.dsa.read(r).then(async t=>{let n=this.tokens.isToken(f);var a={buyAmt:n?this.tokens.toDecimal(t[0],n):await this.erc20.toDecimalInternal(t[0],f),buyAmtRaw:t[0],unitAmt:t[1]};e(a)}).catch(f=>{t(f)}))}}},function(f,e){f.exports=class{constructor(f){this.ABI=f.ABI,this.address=f.address,this.tokens=f.tokens,this.web3=f.web3,this.instance=f.instance,this.math=f.math,this.dsa=f}async getPosition(f){var e={protocol:"curve_susd",method:"getPosition",args:[f||this.instance.address]};return new Promise((f,t)=>this.dsa.read(e).then(e=>{let t={};t.curveBalance=this.tokens.toDecimal(e[0],"curvesusd"),t.totalSupply=this.tokens.toDecimal(e[1],"curvesusd"),t.virtualPrice=e[2]/10**18,t.userShare=100*this.tokens.toDecimal(e[3],"curvesusd"),t.daiPoolBalance=this.tokens.toDecimal(e[4],"DAI"),t.usdcPoolBalance=this.tokens.toDecimal(e[5],"USDC"),t.usdtPoolBalance=this.tokens.toDecimal(e[6],"USDT"),t.susdPoolBalance=this.tokens.toDecimal(e[7],"SUSD"),t.stakedCurveBalance=this.tokens.toDecimal(e[8],"curvesusd"),t.rewardsEarned=this.tokens.toDecimal(e[9],"snx"),t.rewardTokenBalance=this.tokens.toDecimal(e[10],"snx"),t.totalCurveBalance=+t.curveBalance+ +t.stakedCurveBalance,f(t)}).catch(f=>{t(f)}))}async getBuyAmount(f,e,t,n){let a=n?n*10**16:10**16;a=this.math.bigNumInString(a)+"";var i={protocol:"curve_susd",method:"getBuyAmount",args:[this.tokens.info[f.toLowerCase()].address,this.tokens.info[e.toLowerCase()].address,this.tokens.fromDecimal(t,e),this.math.bigNumInString(a)]};return new Promise((e,t)=>this.dsa.read(i).then(t=>{var n={buyAmt:this.tokens.toDecimal(t[0],f),buyAmtRaw:t[0],virtualPrice:t[2]/10**18,unitAmt:t[1]};e(n)}).catch(f=>{t(f)}))}async getDepositAmount(f,e,t){let n=t?t*10**16:10**16;n=this.math.bigNumInString(n)+"";var a={protocol:"curve_susd",method:"getDepositAmount",args:[this.tokens.info[f.toLowerCase()].address,this.tokens.fromDecimal(e,f),this.math.bigNumInString(n)]};return new Promise((f,e)=>this.dsa.read(a).then(e=>{var t={curveAmt:this.tokens.toDecimal(e[0],"curvesusd"),curveAmtRaw:e[0],unitAmt:e[1],virtualPrice:e[2]/10**18};f(t)}).catch(f=>{e(f)}))}async getWithdrawAmount(f,e,t){let n=t?t*10**16:10**16;n=this.math.bigNumInString(n)+"";var a={protocol:"curve_susd",method:"getWithdrawCurveAmount",args:[this.tokens.info[f.toLowerCase()].address,this.tokens.fromDecimal(e,f),this.math.bigNumInString(n)]};return new Promise((f,e)=>this.dsa.read(a).then(e=>{var t={curveAmt:this.tokens.toDecimal(e[0],"curvesusd"),curveAmtRaw:e[0],unitAmt:e[1],virtualPrice:e[2]/10**18};f(t)}).catch(f=>{e(f)}))}async getWithdrawTokenAmount(f,e,t){let n=t?t*10**16:10**16;n=this.math.bigNumInString(n)+"";var a={protocol:"curve_susd",method:"getWithdrawTokenAmount",args:[this.tokens.info[f.toLowerCase()].address,this.tokens.fromDecimal(e,"curvesusd"),this.math.bigNumInString(n)]};return new Promise((e,t)=>this.dsa.read(a).then(t=>{var n={amt:this.tokens.toDecimal(t[0],f),amtRaw:t[0],unitAmt:t[1],virtualPrice:t[2]/10**18};e(n)}).catch(f=>{t(f)}))}}},function(f,e){f.exports=class{constructor(f){this.ABI=f.ABI,this.address=f.address,this.tokens=f.tokens,this.web3=f.web3,this.instance=f.instance,this.math=f.math,this.dsa=f}async getPosition(f){var e={protocol:"curve_sbtc",method:"getPosition",args:[f||this.instance.address]};return new Promise((f,t)=>this.dsa.read(e).then(e=>{let t={};t.curveBalance=this.tokens.toDecimal(e[0],"curvesbtc"),t.totalSupply=this.tokens.toDecimal(e[1],"curvesbtc"),t.virtualPrice=e[2]/10**18,t.userShare=100*this.tokens.toDecimal(e[3],"curvesbtc"),t.renBtcPoolBalance=this.tokens.toDecimal(e[4],"renBTC"),t.wBtcPoolBalance=this.tokens.toDecimal(e[5],"WBTC"),t.sBtcPoolBalance=this.tokens.toDecimal(e[6],"sBTC"),t.stakedCurveBalance=this.tokens.toDecimal(e[7],"curvesbtc"),t.rewardsEarned=this.tokens.toDecimal(e[8],"snx_ren"),t.rewardTokenBalance=this.tokens.toDecimal(e[9],"snx_ren"),t.totalCurveBalance=+t.curveBalance+ +t.stakedCurveBalance,f(t)}).catch(f=>{t(f)}))}async getBuyAmount(f,e,t,n){let a=n?n*10**16:10**16;a=this.math.bigNumInString(a)+"";var i={protocol:"curve_sbtc",method:"getBuyAmount",args:[this.tokens.info[f.toLowerCase()].address,this.tokens.info[e.toLowerCase()].address,this.tokens.fromDecimal(t,e),this.math.bigNumInString(a)]};return new Promise((e,t)=>this.dsa.read(i).then(t=>{var n={buyAmt:this.tokens.toDecimal(t[0],f),buyAmtRaw:t[0],virtualPrice:t[2]/10**18,unitAmt:t[1]};e(n)}).catch(f=>{t(f)}))}async getDepositAmount(f,e,t){let n=t?t*10**16:10**16;n=this.math.bigNumInString(n)+"";var a={protocol:"curve_sbtc",method:"getDepositAmount",args:[this.tokens.info[f.toLowerCase()].address,this.tokens.fromDecimal(e,f),this.math.bigNumInString(n)]};return new Promise((f,e)=>this.dsa.read(a).then(e=>{var t={curveAmt:this.tokens.toDecimal(e[0],"curvesbtc"),curveAmtRaw:e[0],unitAmt:e[1],virtualPrice:e[2]/10**18};f(t)}).catch(f=>{e(f)}))}async getWithdrawAmount(f,e,t){let n=t?t*10**16:10**16;n=this.math.bigNumInString(n)+"";var a={protocol:"curve_sbtc",method:"getWithdrawAmount",args:[this.tokens.info[f.toLowerCase()].address,this.tokens.fromDecimal(e,f),this.math.bigNumInString(n)]};return new Promise((f,e)=>this.dsa.read(a).then(e=>{var t={curveAmt:this.tokens.toDecimal(e[0],"curvesbtc"),curveAmtRaw:e[0],unitAmt:e[1],virtualPrice:e[2]/10**18};f(t)}).catch(f=>{e(f)}))}async getWithdrawTokenAmount(f,e,t){let n=t?t*10**16:10**16;n=this.math.bigNumInString(n)+"";var a={protocol:"curve_sbtc",method:"getWithdrawTokenAmount",args:[this.tokens.info[f.toLowerCase()].address,this.tokens.fromDecimal(e,"curvesbtc"),this.math.bigNumInString(n)]};return new Promise((e,t)=>this.dsa.read(a).then(t=>{var n={amt:this.tokens.toDecimal(t[0],f),amtRaw:t[0],unitAmt:t[1],virtualPrice:t[2]/10**18};e(n)}).catch(f=>{t(f)}))}}},function(f,e){f.exports=class{constructor(f){this.ABI=f.ABI,this.address=f.address,this.tokens=f.tokens,this.web3=f.web3,this.instance=f.instance,this.math=f.math,this.dsa=f}async getPosition(f){var e={protocol:"curve_y",method:"getPosition",args:[f||this.instance.address]};return new Promise((f,t)=>this.dsa.read(e).then(e=>{let t={};t.curveBalance=this.tokens.toDecimal(e[0],"curvey"),t.totalSupply=this.tokens.toDecimal(e[1],"curvey"),t.virtualPrice=e[2]/10**18,t.userShare=100*this.tokens.toDecimal(e[3],"curvey"),t.daiPoolBalance=this.tokens.toDecimal(e[4].tokenPoolbal,"DAI"),t.usdcPoolBalance=this.tokens.toDecimal(e[5].tokenPoolbal,"USDC"),t.usdtPoolBalance=this.tokens.toDecimal(e[6].tokenPoolbal,"USDT"),t.tusdPoolBalance=this.tokens.toDecimal(e[7].tokenPoolbal,"TUSD"),t.stakedCurveBalance=this.tokens.toDecimal(e[8],"curvey"),t.rewardsEarned=this.tokens.toDecimal(e[9],"yfi"),t.rewardTokenBalance=this.tokens.toDecimal(e[10],"yfi"),t.totalCurveBalance=+t.curveBalance+ +t.stakedCurveBalance,f(t)}).catch(f=>{t(f)}))}async getBuyAmount(f,e,t,n){let a=n?n*10**16:10**16;a=this.math.bigNumInString(a)+"";var i={protocol:"curve_y",method:"getBuyAmount",args:[this.tokens.info[f.toLowerCase()].address,this.tokens.info[e.toLowerCase()].address,this.tokens.fromDecimal(t,e),this.math.bigNumInString(a)]};return new Promise((e,t)=>this.dsa.read(i).then(t=>{var n={buyAmt:this.tokens.toDecimal(t[0],f),buyAmtRaw:t[0],virtualPrice:t[2]/10**18,unitAmt:t[1]};e(n)}).catch(f=>{t(f)}))}async getDepositAmount(f,e,t){let n=t?t*10**16:10**16;n=this.math.bigNumInString(n)+"";var a={protocol:"curve_y",method:"getDepositAmount",args:[this.tokens.info[f.toLowerCase()].address,this.tokens.fromDecimal(e,f),this.math.bigNumInString(n)]};return new Promise((f,e)=>this.dsa.read(a).then(e=>{var t={curveAmt:this.tokens.toDecimal(e[0],"curvesbtc"),curveAmtRaw:e[0],unitAmt:e[1],virtualPrice:e[2]/10**18};f(t)}).catch(f=>{e(f)}))}async getWithdrawAmount(f,e,t){let n=t?t*10**16:10**16;n=this.math.bigNumInString(n)+"";var a={protocol:"curve_y",method:"getWithdrawAmount",args:[this.tokens.info[f.toLowerCase()].address,this.tokens.fromDecimal(e,f),this.math.bigNumInString(n)]};return new Promise((f,e)=>this.dsa.read(a).then(e=>{var t={curveAmt:this.tokens.toDecimal(e[0],"curvesbtc"),curveAmtRaw:e[0],unitAmt:e[1],virtualPrice:e[2]/10**18};f(t)}).catch(f=>{e(f)}))}async getWithdrawTokenAmount(f,e,t){let n=t?t*10**16:10**16;n=this.math.bigNumInString(n)+"";var a={protocol:"curve_y",method:"getWithdrawTokenAmount",args:[this.tokens.info[f.toLowerCase()].address,this.tokens.fromDecimal(e,"curvey"),this.math.bigNumInString(n)]};return new Promise((e,t)=>this.dsa.read(a).then(t=>{var n={amt:this.tokens.toDecimal(t[0],f),amtRaw:t[0],unitAmt:t[1],virtualPrice:t[2]/10**18};e(n)}).catch(f=>{t(f)}))}}},function(f,e){f.exports=class{constructor(f){this.ABI=f.ABI,this.address=f.address,this.tokens=f.tokens,this.web3=f.web3,this.instance=f.instance,this.math=f.math,this.dsa=f}async getPosition(f){var e={protocol:"curve_claim",method:"getPosition",args:[f||this.instance.address]};return new Promise((f,t)=>this.dsa.read(e).then(e=>{let t={};t.vestedBalance=this.tokens.toDecimal(e[0],"CRV"),t.unclaimedBalance=this.tokens.toDecimal(e[1],"CRV"),t.claimedBalance=e[2]/10**18,t.lockedBalance=this.tokens.toDecimal(e[3],"CRV"),t.crvBalance=this.tokens.toDecimal(e[4],"CRV"),f(t)}).catch(f=>{t(f)}))}}},function(f,e){f.exports=class{constructor(f){this.ABI=f.ABI,this.address=f.address,this.tokens=f.tokens,this.web3=f.web3,this.instance=f.instance,this.math=f.math,this.dsa=f}async getPosition(f){var e=f||this.instance.address,t=["susd","y","sbtc"],n={susd:"snx",sbtc:"snx_ren"},a={protocol:"curve_gauge",method:"getPositions",args:[t.map(f=>`gauge-${f}`),e]};return new Promise((f,e)=>this.dsa.read(a).then(e=>{let a={};e.forEach((f,e)=>{let i=t[e];a[i]={stakedBalance:this.tokens.toDecimal(f[0],`curve${i}`),crvEarned:this.tokens.toDecimal(f[1],"crv"),crvClaimed:this.tokens.toDecimal(f[2],"crv"),crvBalance:this.tokens.toDecimal(f[5],"crv")},a[i].crvUnclaimed=a[i].crvEarned-a[i].crvClaimed,f[7]&&(a[i].rewardClaimed=this.tokens.toDecimal(f[4],n[i]),a[i].rewardEarned=this.tokens.toDecimal(f[3],n[i]),a[i].rewardBalance=this.tokens.toDecimal(f[6],n[i]),a[i].rewardToken=n[i],a[i].rewardsUnclaimed=a[i].rewardEarned-a[i].rewardClaimed)}),f(a)}).catch(f=>{e(f)}))}}},function(f,e){f.exports=class{constructor(f){this.ABI=f.ABI,this.address=f.address,this.tokens=f.tokens,this.web3=f.web3,this.instance=f.instance,this.math=f.math,this.dsa=f}async getPosition(f){var e={protocol:"swerve",method:"getPosition",args:[f||this.instance.address]};return new Promise((f,t)=>this.dsa.read(e).then(e=>{let t={};t.curveBalance=this.tokens.toDecimal(e[0],"curvesusd"),t.totalSupply=this.tokens.toDecimal(e[1],"curvesusd"),t.virtualPrice=e[2]/10**18,t.userShare=100*this.tokens.toDecimal(e[3],"curvesusd"),t.daiPoolBalance=this.tokens.toDecimal(e[4],"DAI"),t.usdcPoolBalance=this.tokens.toDecimal(e[5],"USDC"),t.usdtPoolBalance=this.tokens.toDecimal(e[6],"USDT"),t.tusdPoolBalance=this.tokens.toDecimal(e[7],"TUSD"),f(t)}).catch(f=>{t(f)}))}async getBuyAmount(f,e,t,n){let a=n?n*10**16:10**16;a=this.math.bigNumInString(a)+"";var i={protocol:"swerve",method:"getBuyAmount",args:[this.tokens.info[f.toLowerCase()].address,this.tokens.info[e.toLowerCase()].address,this.tokens.fromDecimal(t,e),this.math.bigNumInString(a)]};return new Promise((e,t)=>this.dsa.read(i).then(t=>{var n={buyAmt:this.tokens.toDecimal(t[0],f),buyAmtRaw:t[0],virtualPrice:t[2]/10**18,unitAmt:t[1]};e(n)}).catch(f=>{t(f)}))}async getDepositAmount(f,e,t){let n=t?t*10**16:10**16;n=this.math.bigNumInString(n)+"";var a={protocol:"swerve",method:"getDepositAmount",args:[this.tokens.info[f.toLowerCase()].address,this.tokens.fromDecimal(e,f),this.math.bigNumInString(n)]};return new Promise((f,e)=>this.dsa.read(a).then(e=>{var t={curveAmt:this.tokens.toDecimal(e[0],"swusd"),curveAmtRaw:e[0],unitAmt:e[1],virtualPrice:e[2]/10**18};f(t)}).catch(f=>{e(f)}))}async getWithdrawAmount(f,e,t){let n=t?t*10**16:10**16;n=this.math.bigNumInString(n)+"";var a={protocol:"swerve",method:"getWithdrawCurveAmount",args:[this.tokens.info[f.toLowerCase()].address,this.tokens.fromDecimal(e,f),this.math.bigNumInString(n)]};return new Promise((f,e)=>this.dsa.read(a).then(e=>{var t={curveAmt:this.tokens.toDecimal(e[0],"swusd"),curveAmtRaw:e[0],unitAmt:e[1],virtualPrice:e[2]/10**18};f(t)}).catch(f=>{e(f)}))}async getWithdrawTokenAmount(f,e,t){let n=t?t*10**16:10**16;n=this.math.bigNumInString(n)+"";var a={protocol:"swerve",method:"getWithdrawTokenAmount",args:[this.tokens.info[f.toLowerCase()].address,this.tokens.fromDecimal(e,"swusd"),this.math.bigNumInString(n)]};return new Promise((e,t)=>this.dsa.read(a).then(t=>{var n={amt:this.tokens.toDecimal(t[0],f),amtRaw:t[0],unitAmt:t[1],virtualPrice:t[2]/10**18};e(n)}).catch(f=>{t(f)}))}}},function(f,e){f.exports=class{constructor(f){this.ABI=f.ABI,this.address=f.address,this.tokens=f.tokens,this.web3=f.web3,this.instance=f.instance,this.math=f.math,this.internal=f.internal,this.erc20=f.erc20,this.dsa=f}async getBuyAmount(f,e,t,n,a,i){let s=n?n*10**16:10**16;s=this.math.bigNumInString(s)+"";let r=a||50,o=i||0,d=this.tokens.isToken(e),u=d?this.tokens.fromDecimal(t,d):await this.erc20.fromDecimalInternal(t,e);var p={protocol:"oneInch",method:"getBuyAmount",args:[this.internal.filterAddress(f),this.internal.filterAddress(e),u,this.math.bigNumInString(s),this.math.bigNumInString(r),this.math.bigNumInString(o)]};return new Promise((e,t)=>this.dsa.read(p).then(async t=>{let n=this.tokens.isToken(f);var a={buyAmt:n?this.tokens.toDecimal(t[0],n):await this.erc20.toDecimalInternal(t[0],f),buyAmtRaw:t[0],unitAmt:t[1],distribution:t[2]};e(a)}).catch(f=>{t(f)}))}async getBuyAmountWithGas(f,e,t,n,a){a||(a={});let i=n?n*10**16:10**16;i=this.math.bigNumInString(i)+"";let s,r,o=a.distribution?a.distribution:20,d=a.disableDex?a.disableDex:0,u=this.tokens.isToken(f);if(a.tokenPrice)s=a.tokenPrice;else{let e=await this.dsa.chainlink.getTokenPrices(),t=Object.fromEntries(Object.keys(e).map(f=>[f,e[f]?e.ETH/e[f]:0]));if(!u&&!t[u.toUpperCase()])throw new Error(`${f} price not found.`);s=t[u.toUpperCase()]}r=a.gasPrice?a.gasPrice:await this.dsa.chainlink.getFastGasPrice()/1e9;let p=u?this.tokens.fromDecimal(s,u):await this.erc20.fromDecimalInternal(s,f);p*=r*10**9;let l=this.tokens.isToken(e),y=l?this.tokens.fromDecimal(t,l):await this.erc20.fromDecimalInternal(t,e);var c={protocol:"oneInch",method:"getBuyAmountWithGas",args:[this.internal.filterAddress(f),this.internal.filterAddress(e),y,this.math.bigNumInString(i),this.math.bigNumInString(o),this.math.bigNumInString(d),this.math.bigNumInString(p)]};return new Promise((e,t)=>this.dsa.read(c).then(async t=>{let n=this.tokens.isToken(f);var a={buyAmt:n?this.tokens.toDecimal(t[0],n):await this.erc20.toDecimalInternal(t[0],f),buyAmtRaw:t[0],unitAmt:t[1],distribution:t[2],gasEstimate:t[3]};e(a)}).catch(f=>{t(f)}))}async getBuyAmountMultiWithGas(f,e,t,n){n||(n={});let a=f.length-1;if(1>a)throw new Error("tokens length is not vaild");let i=f[a],s=f[0],r=f.map(f=>this.internal.filterAddress(f)),o=t?t*10**16:10**16;o=this.math.bigNumInString(o)+"";let d,u,p=n.distributionsArr?n.distributionsArr.map(f=>this.math.bigNumInString(f)):Array(a).fill("5"),l=n.disableDexArr?n.disableDexArr.map(f=>this.math.bigNumInString(f)):Array(a).fill("0");if(d=n.gasPrice?n.gasPrice:await this.dsa.chainlink.getFastGasPrice()/1e9,n.tokenPricesArr)u=n.tokenPrices;else{let f=await this.dsa.chainlink.getTokenPrices();u=Object.fromEntries(Object.keys(f).map(e=>[e,f[e]?f.ETH/f[e]:0]))}let y=[];for(let e=1;e<f.length;e++){let t=f[e].toLowerCase(),n=this.tokens.isToken(t),a=n||t,i=Object.keys(u).filter(f=>f.toLowerCase()==a)[0];if(!i)throw new Error(`${t} price not found.`);let s=n?this.tokens.fromDecimal(u[i],n):await this.erc20.fromDecimalInternal(u[i],t);y.push(this.math.bigNumInString(s*(d*10**9)))}let c=this.tokens.isToken(s);var m={protocol:"oneInch",method:"getBuyAmountMultiWithGas",args:[r,c?this.tokens.fromDecimal(e,c):await this.erc20.fromDecimalInternal(e,s),this.math.bigNumInString(o),p,l,y]};return new Promise((f,e)=>this.dsa.read(m).then(async e=>{let t=this.tokens.isToken(i);var n={buyAmt:t?this.tokens.toDecimal(e[0],t):await this.erc20.toDecimalInternal(e[0],i),buyAmtRaw:e[0],unitAmt:e[1],distribution:e[2],gasEstimate:e[4]};f(n)}).catch(f=>{e(f)}))}async getBuyAmountMultiArr(f,e,t,n,a,i){if(i||(i={}),0==t.length)throw new Error('"tokensArr" is empty');let s,r;if(i.tokenPrices)s=i.tokenPrices;else{let f=await this.dsa.chainlink.getTokenPrices();s=Object.fromEntries(Object.keys(f).map(e=>[e,f[e]?f.ETH/f[e]:0]))}r=i.gasPrice?i.gasPrice:await this.dsa.chainlink.getFastGasPrice()/1e9;let o=a?a*10**16:10**16;o=this.math.bigNumInString(o)+"";let d=i.distribution?i.distribution:"5",u=i.disableDex?i.disableDex:"0",p={},l=[...t,f];for(let f,e=0;e<l.length;e++){if(f=l[e].toLowerCase(),!this.tokens.isToken(f))throw new Error(`${f} not found.`);let t=Object.keys(s).filter(e=>e.toLowerCase()==f)[0];if(!t)throw new Error(`${f} price not found.`);let n=this.tokens.fromDecimal(s[t],f);p[f]=this.math.bigNumInString(n*(r*10**9))}let y=[],c=[],m=[];for(let n,a=0;a<t.length;a++){n=t[a];for(let i=0;i<t.length;i++){let s=[],r=[],o=[],l=t[i];s=a==i?[e,n,f]:[e,n,l,f],s.slice(1).forEach(f=>{o.push(p[f.toLowerCase()])}),r=s.map(f=>this.internal.filterAddress(f)),c.push(s),m.push(r);let b=r.length-1;y.push({tokens:r,destTokenEthPriceTimesGasPrices:o,distribution:Array(b).fill(d),disableDexes:Array(b).fill(u)})}}let b=[e,f],h=b.map(f=>this.internal.filterAddress(f));c.push(b),m.push(h),y.push({tokens:h,destTokenEthPriceTimesGasPrices:b.slice(1).map(f=>p[f.toLowerCase()]),distribution:[,,].fill(d),disableDexes:[,,].fill(u)});let T=this.tokens.isToken(e);var g={protocol:"oneInch",method:"getBuyAmountsMulti",args:[y,T?this.tokens.fromDecimal(n,T):await this.erc20.fromDecimalInternal(n,e),this.math.bigNumInString(o)]};return new Promise((e,t)=>this.dsa.read(g).then(async t=>{let n=[],a=this.tokens.isToken(f);for(let e=0;e<t.length;e++){const i=t[e];let s=a?this.tokens.toDecimal(i[0],a):await this.erc20.toDecimalInternal(i[0],f);n.push({path:c[e],pathAddresses:m[e],buyAmt:s,buyAmtRaw:i[0],unitAmt:i[1],distribution:i[2],gasEstimate:i[4]})}e(n)}).catch(f=>{t(f)}))}}},function(f,e){var t={0:{name:"eth",factor:10/11.5},2:{name:"usdc",factor:10/11.5},3:{name:"dai",factor:10/11.5}};f.exports=class{constructor(f){this.ABI=f.ABI,this.address=f.address,this.tokens=f.tokens,this.web3=f.web3,this.instance=f.instance,this.dsa=f}async getPosition(f,e){var n=f||this.instance.address,a=Object.keys(t),i={protocol:"dydx",method:"getPosition",args:[n,a]};return new Promise((f,n)=>this.dsa.read(i).then(n=>{var i={},s=0,r=0,o=0,d=n[0][0]/10**18;a.forEach((f,a)=>{var u=t[f].name,p=this.tokens.info[u].decimals,l=n[a],y="market"==e?f:"address"==e?this.tokens.info[u].address:u;i[y]={},i[y].price=l[0]/10**(18-p+18);var c=i[y].price/d,m=this.tokens.toDecimal(l[1],u),b=this.tokens.toDecimal(l[2],u);i[y].supply=m,i[y].borrow=b,s+=m*c,o+=m*c*t[f].factor,r+=b*c;var h=l[3]/10**18,T=.1*h+.1*h**32+.3*h**64,g=.95*T*h;i[y].borrowRate=100*T,i[y].borrowYield=100*((1+T/365)**365-1),i[y].SupplyRate=100*g,i[y].supplyYield=100*((1+g/365)**365-1)}),i.totalSupplyInEth=s,i.totalBorrowInEth=r,i.maxBorrowLimitInEth=o;var u=r/s;i.status=u;var p=o/s;i.liquidation=p,f(i)}).catch(f=>{n(f)}))}}},function(f,e){f.exports=class{constructor(f){this.web3=f.web3,this.address=f.address,this.dsa=f,this.internal=f.internal,this.tokens=f.tokens}async getLiquidity(){var f={protocol:"erc20",method:"getBalances",args:["0x1E0447b19BB6EcFdAe1e4AE1694b0C3659614e4e",["0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",this.tokens.info.dai.address,this.tokens.info.usdc.address]]};return new Promise((e,t)=>this.dsa.read(f).then(f=>{var t={eth:.99*this.tokens.toDecimal(f[0],"eth"),dai:.99*this.tokens.toDecimal(f[1],"dai"),usdc:.99*this.tokens.toDecimal(f[2],"usdc")};e(t)}).catch(f=>{t(f)}))}encodeFlashCastData(f,e,t){if(!f)throw new Error("'token' not defined");if(!e)throw new Error("'amount' not defined");let n=this.internal.encodeSpells(t);return this.web3.eth.abi.encodeParameters(["address","uint256","address[]","bytes[]"],[f,e,n[0],n[1]])}}},function(f,e){f.exports=class{constructor(f){this.ABI=f.ABI,this.address=f.address,this.tokens=f.tokens,this.web3=f.web3,this.instance=f.instance,this.dsa=f}getAtokens(){var f=this.tokens.info,e={};return Object.keys(f).forEach(t=>{"atoken"==f[t].type&&(e[t]=f[t])}),e}getAtokensAddresses(f){f||(f=getAtokens());var e=[];return Object.keys(f).forEach(t=>{e.push(f[t].address)}),e}getTokensAddresses(f){var e=this.tokens.info,t=[];return Object.keys(f).forEach(n=>{t.push(e[f[n].root].address)}),t}getPosition(f,e){var t=f||this.instance.address,n=this.getAtokens(),a={protocol:"aave",method:"getPosition",args:[t,this.getTokensAddresses(n)]};return new Promise(async(f,t)=>{await this.dsa.read(a).then(t=>{var a={},i=0,s=0,r=0;Object.keys(n).forEach((f,o)=>{var d,u=n[f].root;d="atoken"==e?f:"address"==e?this.tokens.info[u].address:u;var p=t[0][o],l=this.tokens.info[u].decimals;a[d]={};var y=p[0]/10**18;a[d].priceInEth=y;var c=p[1]/10**l;a[d].supply=c,i+=c*y,a[d].ltv=p[7].ltv/100,a[d].maxRatio=0==p[7].ltv?0:p[7].threshold/100,s+=c*y*a[d].ltv,r+=c*y*a[d].maxRatio;var m=p[2]/10**l;a[d].borrow=m;var b=p[3]/10**l;a[d].borrowFee=b,a[d].borrowYield=p[5]/1e27*100,a[d].supplyYield=p[4]/1e27*100,a[d].isVariableBorrow=2==+p[6]}),a.totalSupplyInEth=i,a.totalBorrowInEth=+t[1][2]/1e18,a.totalFeeInETH=+t[1][3]/1e18,a.totalMaxRatio=+t[1][5]/100,a.maxBorrowLimitInEth=s,a.liquidationLimitInEth=r;var o=0/i;a.status=o;var d=s/i;a.maxBorrowRatio=d;var u=r/i;a.liquidation=u,f(a)}).catch(f=>{t(f)})})}}},function(f,e){f.exports=class{constructor(f){this.ABI=f.ABI,this.address=f.address,this.tokens=f.tokens,this.math=f.math,this.web3=f.web3,this.instance=f.instance,this.internal=f.internal,this.dsa=f}async getPosition(f,e){var t=f||this.instance.address,n=e.map(f=>{if(!f.tokenA)throw new Error("tokenA not found");if(!f.tokenB)throw new Error("tokenB not found");return[this.internal.filterAddress(f.tokenA),this.internal.filterAddress(f.tokenB)]}),a={protocol:"uniswap",method:"getPosition",args:[t,n]};return new Promise((f,e)=>this.dsa.read(a).then(async e=>{let t=[];for(let f=0;f<e.length;f++){let a=n[f][0],i=n[f][1],s=e[f],r=this.tokens.isToken(a),o=r?this.tokens.toDecimal(s[0],r):await this.erc20.toDecimalInternal(s[0],a),d=this.tokens.isToken(i),u=d?this.tokens.toDecimal(s[1],d):await this.erc20.toDecimalInternal(s[1],i);t[f]={amountA:o,amountB:u,uniTokenAmount:s[2]/10**18}}f(t)}).catch(f=>{e(f)}))}async getBuyAmount(f,e,t,n){let a=n?n*10**16:10**16;a=this.math.bigNumInString(a)+"";let i=this.tokens.isToken(e),s=i?this.tokens.fromDecimal(t,i):await this.erc20.fromDecimalInternal(t,e);var r={protocol:"uniswap",method:"getBuyAmount",args:[this.internal.filterAddress(f),this.internal.filterAddress(e),this.math.bigNumInString(s),this.math.bigNumInString(a)]};return new Promise((e,t)=>this.dsa.read(r).then(async t=>{let n=this.tokens.isToken(f);var a={buyAmt:n?this.tokens.toDecimal(t[0],n):await this.erc20.toDecimalInternal(t[0],f),buyAmtRaw:t[0],unitAmt:t[1]};e(a)}).catch(f=>{t(f)}))}async getSellAmount(f,e,t,n){let a=n?n*10**16:10**16;a=this.math.bigNumInString(a)+"";let i=this.tokens.isToken(f),s=i?this.tokens.fromDecimal(t,i):await this.erc20.fromDecimalInternal(t,f);var r={protocol:"uniswap",method:"getSellAmount",args:[this.internal.filterAddress(f),this.internal.filterAddress(e),this.math.bigNumInString(s),this.math.bigNumInString(a)]};return new Promise((f,t)=>this.dsa.read(r).then(async t=>{let n=this.tokens.isToken(e);var a={sellAmt:n?this.tokens.toDecimal(t[0],n):await this.erc20.toDecimalInternal(t[0],e),sellAmtRaw:t[0],unitAmt:t[1]};f(a)}).catch(f=>{t(f)}))}async getDepositAmount(f,e,t){let n=this.tokens.isToken(f),a=n?this.tokens.fromDecimal(t,n):await this.erc20.fromDecimalInternal(t,f);var i={protocol:"uniswap",method:"getDepositAmount",args:[this.internal.filterAddress(f),this.internal.filterAddress(e),this.math.bigNumInString(a)]};return new Promise((f,n)=>this.dsa.read(i).then(async n=>{let a=this.tokens.isToken(e),i=a?this.tokens.toDecimal(n[0],a):await this.erc20.toDecimalInternal(n[0],e);var s={amountA:+t,amountB:i,amountB_Raw:n[0],unitAmt:n[1]};f(s)}).catch(f=>{n(f)}))}async getWithdrawAmount(f,e,t,n){let a=n?n*10**16:10**16;a=this.math.bigNumInString(a)+"";let i=(t*10**18).toFixed(0);var s={protocol:"uniswap",method:"getWithdrawAmounts",args:[this.internal.filterAddress(f),this.internal.filterAddress(e),this.math.bigNumInString(i),this.math.bigNumInString(a)]};return new Promise((t,n)=>this.dsa.read(s).then(async n=>{let a=this.tokens.isToken(f),i=a?this.tokens.toDecimal(n[0],a):await this.erc20.toDecimalInternal(n[0],f),s=this.tokens.isToken(e);var r={amountA:i,amountB:s?this.tokens.toDecimal(n[1],s):await this.erc20.toDecimalInternal(n[1],e),amountA_Raw:n[0],amountB_Raw:n[1],unitAmtA:n[2],unitAmtB:n[3]};t(r)}).catch(f=>{n(f)}))}}},function(f,e,t){f.exports=class{constructor(f){this.info=t(8),this.web3=f.web3,this.math=f.math}fromDecimal(f,e){if(-1==Object.keys(this.info).indexOf(e.toLowerCase()))throw new Error("'token' symbol not found.");var t=this.info[e.toLowerCase()];return this.math.bigNumInString((+f*10**t.decimals).toFixed(0))}toDecimal(f,e){if(-1==Object.keys(this.info).indexOf(e.toLowerCase()))throw new Error("'token' symbol not found.");return+f/10**this.info[e.toLowerCase()].decimals}isToken(f){var e=this.web3.utils.isAddress(f.toLowerCase());let t=this.info;return e?Object.keys(t).filter(e=>t[e].address.toLowerCase()==f.toLowerCase())[0]:-1!=Object.keys(t).indexOf(f.toLowerCase())&&f.toLowerCase()}getTokenByType(f){var e=this.info,t={};return"all"==f?t=e:Object.keys(e).forEach(n=>{e[n].type==f&&(t[n]=e[n])}),t}getTokensField(f,e){e||(e=this.info);var t={};return Object.keys(e).forEach(n=>{t[n]=e[n][f]}),t}getList({type:f=null}){return Object.keys(this.info).reduce((e,t)=>this.info[t].type==f?(e.push(this.info[t]),e):e,[])}getDataList({type:f=null,field:e=null}){return Object.values(this.info).filter(e=>!f||e.type==f).map(f=>e?f[e]:f)}}},function(f,e){f.exports=class{constructor(f){this.ABI=f.ABI,this.address=f.address,this.tokens=f.tokens,this.web3=f.web3,this.math=f.math,this.dsa=f}async getTokenPrices(){var f=Object.values(this.tokens.getTokenByType("token")).map(f=>f.symbol),e={protocol:"chainlink",method:"getPrice",args:[f]};return new Promise((t,n)=>this.dsa.read(e).then(e=>{let n={},a=e.ethPriceInUsd[0]/10**e.ethPriceInUsd[1];n.BTC=e.btcPriceInUsd[0]/10**e.btcPriceInUsd[1],n.ETH=a,f.forEach((f,t)=>{if("ETH"!=f){let i=e.tokensPriceInETH[t];n[f]=i[0]/10**i[1]*a}}),t(n)}).catch(f=>{n(f)}))}async getFastGasPrice(){var f={protocol:"chainlink",method:"getGasPrice",args:[]};return new Promise((e,t)=>this.dsa.read(f).then(f=>{e(+f)}).catch(f=>{t(f)}))}}},function(f,e){f.exports=class{constructor(f){this.ABI=f.ABI,this.address=f.address,this.tokens=f.tokens,this.web3=f.web3,this.instance=f.instance,this.math=f.math,this.dsa=f}async getBuyAmount(f,e,t,n){let a=n?n*10**16:10**16;a=this.math.bigNumInString(a)+"";var i={protocol:"curve_three",method:"getBuyAmount",args:[this.tokens.info[f.toLowerCase()].address,this.tokens.info[e.toLowerCase()].address,this.tokens.fromDecimal(t,e),this.math.bigNumInString(a)]};return new Promise((e,t)=>this.dsa.read(i).then(t=>{var n={buyAmt:this.tokens.toDecimal(t[0],f),buyAmtRaw:t[0],virtualPrice:t[2]/10**18,unitAmt:t[1]};e(n)}).catch(f=>{t(f)}))}}},function(f,e,t){const n=t(101),a=t(111),i=t(128),s=t(129),r=t(131),o=t(134);f.exports=class{constructor(f){var e,t,n;n=async f=>{const e=this.web3,t=this.instance.config.gnosisSafe;if(!t)throw new Error("`safeAddress` is not defined. Run `await dsa.setInstance(dsaId, { gnosisSafe: safeAddr })`");const n=await this.internal.getAddress(),a=this.internal.encodeSpells(f);f.to||(f.to=this.instance.address),f.from||(f.from=n),f.origin||(f.origin=this.origin),f.type=1;let i=new e.eth.Contract(this.ABI.core.account,this.instance.address);f.callData=i.methods.cast(...a,f.origin).encodeABI();let s=await this.internal.getTxObj(f);return new Promise(async(f,e)=>{await this.createTransaction({safeAddress:t,from:s.from,to:s.to,valueInWei:s.value,txData:s.data}).then(e=>{f(e)}).catch(f=>{e(f)})})},(t="submitTx")in(e=this)?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,this.ABI=f.ABI,this.tokens=f.tokens,this.address=f.address,this.math=f.math,this.internal=f.internal,this.web3=f.web3,this.dsa=f,this.instance=f.instance,this.origin=f.origin,this.sendTxn=f.sendTxn,this.internal=f.internal,this.apiHelpers=new a(this),this.web3Helper=new o(this),this.transactionsHelpers=new i(this),this.gasEstimate=new s(this),this.offchainSigner=new r(this)}async getSafeAddresses(f){return await this.apiHelpers.getSafeAddresses(f)}async getSafeOwners(f){let e=f||this.safeAddress;return await this.apiHelpers.getSafeOwners(e)}async estimateGnosisSafeGas(f){if(f.to||(f.to=this.instance.address),f.to==this.address.genesis)throw new Error("Please configure the DSA instance by calling dsa.setInstance(dsaId, {gnosisSafe: Addr}). More details: https://docs.instadapp.io/setup");f.from||(f.from=await this.internal.getAddress()),f.value||(f.value="0");let e=this.dsa.encodeCastABI(f.spells);if("-1"==(await this.apiHelpers.getSafeOwners(this.web3.utils.toChecksumAddress(f.gnosisSafe))).indexOf(this.web3.utils.toChecksumAddress(f.from)))throw new Error("'from' address is not owner of safe address");const t=await this.transactionsHelpers.getGnosisSafeInstanceAt(f.gnosisSafe);return new Promise(async(n,a)=>{await this.gasEstimate.estimateSafeTxGas(t,f.gnosisSafe,e,f.to,f.value,0).then(f=>n(f)).catch(f=>a(f))})}async encodeGnosisCastABI(f){if(f.to||(f.to=this.instance.address),f.to==this.address.genesis)throw new Error("Please configure the DSA instance by calling dsa.setInstance(dsaId, {gnosisSafe: Addr}). More details: https://docs.instadapp.io/setup");f.from||(f.from=await this.internal.getAddress()),f.value||(f.value="0");let e=this.dsa.encodeCastABI(f.spells);const t=new this.web3.eth.Contract(this.ABI.gnosisSafe.abi,"0x34CfAC646f301356fAa8B21e94227e3583Fe3F5F"),n=`0x000000000000000000000000${f.from.replace("0x","")}000000000000000000000000000000000000000000000000000000000000000001`;return t.methods.execTransaction(f.to,f.value,e,0,9e6,0,0,this.address.genesis,this.address.genesis,n).encodeABI()}async createTransaction({safeAddress:f,to:e,from:t,valueInWei:a,txData:i="0x",txNonce:s,operation:r=0,origin:o=null}){return new Promise(async(d,u)=>{if("-1"==(await this.apiHelpers.getSafeOwners(f)).indexOf(this.web3.utils.toChecksumAddress(t)))throw new Error("'from' address is not owner of safe address");const{hardwareWallet:p,smartContractWallet:l}=await this.web3Helper.getProviderInfo(t),y=await this.transactionsHelpers.getGnosisSafeInstanceAt(f),c=await this.transactionsHelpers.getLastTx(f),m=+await this.transactionsHelpers.getNewTxNonce(s,c,y),b=await this.transactionsHelpers.shouldExecuteTransaction(y,m,c),h=await y.methods.VERSION().call(),T=await this.gasEstimate.estimateSafeTxGas(y,f,i,e,a,r),g=`0x000000000000000000000000${t.replace("0x","")}000000000000000000000000000000000000000000000000000000000000000001`,w={safeInstance:y,to:e,valueInWei:a,data:i,operation:r,nonce:m,safeTxGas:T,baseGas:0,gasPrice:0,gasToken:this.address.genesis,refundReceiver:this.address.genesis,sender:t,sigs:g};try{if(!b&&!l&&n(h,this.offchainSigner.SAFE_VERSION_FOR_OFFCHAIN_SIGNATURES)){const e=await this.offchainSigner.tryOffchainSigning({...w,safeAddress:f},p);if(e)return await this.apiHelpers.saveTxToHistory({...w,signature:e,origin:o}),void d({signature:e})}const e=b?await this.transactionsHelpers.getExecutionTransaction(w):await this.transactionsHelpers.getApprovalTransaction(w);await e.send({from:t,value:0}).once("transactionHash",async f=>{try{await Promise.all([this.apiHelpers.saveTxToHistory({...w,hash:f,origin:o})]),d({txHash:f})}catch(f){}}).on("error",f=>{console.error("Tx error: ",f)})}catch(f){u("Error creating the Tx.")}})}}},function(f,e,t){const n=t(10);f.exports=(f,e,t)=>{try{e=new n(e,t)}catch(f){return!1}return e.test(f)}},function(f,e,t){const n=Symbol("SemVer ANY");class a{static get ANY(){return n}constructor(f,e){if(e&&"object"==typeof e||(e={loose:!!e,includePrerelease:!1}),f instanceof a){if(f.loose===!!e.loose)return f;f=f.value}o("comparator",f,e),this.options=e,this.loose=!!e.loose,this.parse(f),this.semver===n?this.value="":this.value=this.operator+this.semver.version,o("comp",this)}parse(f){const e=this.options.loose?i[s.COMPARATORLOOSE]:i[s.COMPARATOR],t=f.match(e);if(!t)throw new TypeError(`Invalid comparator: ${f}`);this.operator=void 0!==t[1]?t[1]:"","="===this.operator&&(this.operator=""),t[2]?this.semver=new d(t[2],this.options.loose):this.semver=n}toString(){return this.value}test(f){if(o("Comparator.test",f,this.options.loose),this.semver===n||f===n)return!0;if("string"==typeof f)try{f=new d(f,this.options)}catch(f){return!1}return r(f,this.operator,this.semver,this.options)}intersects(f,e){if(!(f instanceof a))throw new TypeError("a Comparator is required");if(e&&"object"==typeof e||(e={loose:!!e,includePrerelease:!1}),""===this.operator)return""===this.value||new u(f.value,e).test(this.value);if(""===f.operator)return""===f.value||new u(this.value,e).test(f.semver);const t=!(">="!==this.operator&&">"!==this.operator||">="!==f.operator&&">"!==f.operator),n=!("<="!==this.operator&&"<"!==this.operator||"<="!==f.operator&&"<"!==f.operator),i=this.semver.version===f.semver.version,s=!(">="!==this.operator&&"<="!==this.operator||">="!==f.operator&&"<="!==f.operator),o=r(this.semver,"<",f.semver,e)&&(">="===this.operator||">"===this.operator)&&("<="===f.operator||"<"===f.operator),d=r(this.semver,">",f.semver,e)&&("<="===this.operator||"<"===this.operator)&&(">="===f.operator||">"===f.operator);return t||n||i&&s||o||d}}f.exports=a;const{re:i,t:s}=t(4),r=t(103),o=t(3),d=t(5),u=t(10)},function(f,e,t){const n=t(104),a=t(106),i=t(107),s=t(108),r=t(109),o=t(110);f.exports=(f,e,t,d)=>{switch(e){case"===":return"object"==typeof f&&(f=f.version),"object"==typeof t&&(t=t.version),f===t;case"!==":return"object"==typeof f&&(f=f.version),"object"==typeof t&&(t=t.version),f!==t;case"":case"=":case"==":return n(f,t,d);case"!=":return a(f,t,d);case">":return i(f,t,d);case">=":return s(f,t,d);case"<":return r(f,t,d);case"<=":return o(f,t,d);default:throw new TypeError(`Invalid operator: ${e}`)}}},function(f,e,t){const n=t(1);f.exports=(f,e,t)=>0===n(f,e,t)},function(f,e){const t=/^[0-9]+$/,n=(f,e)=>{const n=t.test(f),a=t.test(e);return n&&a&&(f=+f,e=+e),f===e?0:n&&!a?-1:a&&!n?1:f<e?-1:1};f.exports={compareIdentifiers:n,rcompareIdentifiers:(f,e)=>n(e,f)}},function(f,e,t){const n=t(1);f.exports=(f,e,t)=>0!==n(f,e,t)},function(f,e,t){const n=t(1);f.exports=(f,e,t)=>n(f,e,t)>0},function(f,e,t){const n=t(1);f.exports=(f,e,t)=>n(f,e,t)>=0},function(f,e,t){const n=t(1);f.exports=(f,e,t)=>n(f,e,t)<0},function(f,e,t){const n=t(1);f.exports=(f,e,t)=>n(f,e,t)<=0},function(f,e,t){const n=t(13);f.exports=class{constructor(f){this.web3=f.web3,this.internal=f.internal,this.TX_SERVICE_HOST="tsh",this.SIGNATURES_VIA_METAMASK="svm",this.config={[this.TX_SERVICE_HOST]:"https://safe-transaction.mainnet.gnosis.io/api/v1/"}}getTxServiceHost(){return this.config[this.TX_SERVICE_HOST]}getTxServiceUriFrom(f){return`safes/${f}/transactions/`}getSafeUriFrom(f){return`safes/${f}/`}getOwnersUriFrom(f){return`owners/${f}/`}getIncomingTxServiceUriTo(f){return`safes/${f}/incoming-transfers/`}getSafeCreationTxUri(f){return`safes/${f}/creation/`}signaturesViaMetamask(){return this.config[SIGNATURES_VIA_METAMASK]}async getSafeAddresses(f){let e=f||await this.internal.getAddress();if(!e)throw new Error("Error getting account address");e=this.web3.utils.toChecksumAddress(e);const t=this.getTxServiceHost(),a=this.getOwnersUriFrom(e),i=await n.get(`${t}${a}`);return 200===i.status?i.data.safes:Promise.reject(new Error("Error getting safe addresses"))}async getSafeOwners(f){let e=f;if(!e)throw new Error("`safeAddress` is not defined.");e=this.web3.utils.toChecksumAddress(e);const t=this.getTxServiceHost(),a=this.getSafeUriFrom(e),i=await n.get(`${t}${a}`);return 200===i.status?i.data.owners:Promise.reject(new Error("Error getting safe addresses"))}async calculateBodyFrom(f,e,t,n,a,i,s,r,o,d,u,p,l,y,c){const m=await f.methods.getTransactionHash(e,t,n,a,s,r,o,d,u,i).call(),b=this.web3;return{to:b.utils.toChecksumAddress(e),value:t,data:n,operation:a,nonce:i,safeTxGas:s,baseGas:r,gasPrice:o,gasToken:d,refundReceiver:u,contractTransactionHash:m,transactionHash:p,sender:b.utils.toChecksumAddress(l),origin:y,signature:c}}async buildTxServiceUrl(f){const e=this.getTxServiceHost(),t=this.web3.utils.toChecksumAddress(f);return`${e}${this.getTxServiceUriFrom(t)}?has_confirmations=True`}async saveTxToHistory({baseGas:f,data:e,gasPrice:t,gasToken:a,nonce:i,operation:s,origin:r,refundReceiver:o,safeInstance:d,safeTxGas:u,sender:p,signature:l,to:y,txHash:c,valueInWei:m}){const b=await this.buildTxServiceUrl(d._address),h=await this.calculateBodyFrom(d,y,m,e,s,i,u,f,t,a,o,c||null,p,r||null,l);return 201===(await n.post(b,h)).status?Promise.resolve():Promise.reject(new Error("Error submitting the transaction"))}}},function(f,e,t){"use strict";var n=t(0),a=t(14),i=t(113),s=t(20);function r(f){var e=new i(f),t=a(i.prototype.request,e);return n.extend(t,i.prototype,e),n.extend(t,e),t}var o=r(t(17));o.Axios=i,o.create=function(f){return r(s(o.defaults,f))},o.Cancel=t(21),o.CancelToken=t(126),o.isCancel=t(16),o.all=function(f){return Promise.all(f)},o.spread=t(127),f.exports=o,f.exports.default=o},function(f,e,t){"use strict";var n=t(0),a=t(15),i=t(114),s=t(115),r=t(20);function o(f){this.defaults=f,this.interceptors={request:new i,response:new i}}o.prototype.request=function(f){"string"==typeof f?(f=arguments[1]||{}).url=arguments[0]:f=f||{},(f=r(this.defaults,f)).method?f.method=f.method.toLowerCase():this.defaults.method?f.method=this.defaults.method.toLowerCase():f.method="get";var e=[s,void 0],t=Promise.resolve(f);for(this.interceptors.request.forEach((function(f){e.unshift(f.fulfilled,f.rejected)})),this.interceptors.response.forEach((function(f){e.push(f.fulfilled,f.rejected)}));e.length;)t=t.then(e.shift(),e.shift());return t},o.prototype.getUri=function(f){return f=r(this.defaults,f),a(f.url,f.params,f.paramsSerializer).replace(/^\?/,"")},n.forEach(["delete","get","head","options"],(function(f){o.prototype[f]=function(e,t){return this.request(n.merge(t||{},{method:f,url:e}))}})),n.forEach(["post","put","patch"],(function(f){o.prototype[f]=function(e,t,a){return this.request(n.merge(a||{},{method:f,url:e,data:t}))}})),f.exports=o},function(f,e,t){"use strict";var n=t(0);function a(){this.handlers=[]}a.prototype.use=function(f,e){return this.handlers.push({fulfilled:f,rejected:e}),this.handlers.length-1},a.prototype.eject=function(f){this.handlers[f]&&(this.handlers[f]=null)},a.prototype.forEach=function(f){n.forEach(this.handlers,(function(e){null!==e&&f(e)}))},f.exports=a},function(f,e,t){"use strict";var n=t(0),a=t(116),i=t(16),s=t(17);function r(f){f.cancelToken&&f.cancelToken.throwIfRequested()}f.exports=function(f){return r(f),f.headers=f.headers||{},f.data=a(f.data,f.headers,f.transformRequest),f.headers=n.merge(f.headers.common||{},f.headers[f.method]||{},f.headers),n.forEach(["delete","get","head","post","put","patch","common"],(function(e){delete f.headers[e]})),(f.adapter||s.adapter)(f).then((function(e){return r(f),e.data=a(e.data,e.headers,f.transformResponse),e}),(function(e){return i(e)||(r(f),e&&e.response&&(e.response.data=a(e.response.data,e.response.headers,f.transformResponse))),Promise.reject(e)}))}},function(f,e,t){"use strict";var n=t(0);f.exports=function(f,e,t){return n.forEach(t,(function(t){f=t(f,e)})),f}},function(f,e,t){"use strict";var n=t(0);f.exports=function(f,e){n.forEach(f,(function(t,n){n!==e&&n.toUpperCase()===e.toUpperCase()&&(f[e]=t,delete f[n])}))}},function(f,e,t){"use strict";var n=t(19);f.exports=function(f,e,t){var a=t.config.validateStatus;!a||a(t.status)?f(t):e(n("Request failed with status code "+t.status,t.config,null,t.request,t))}},function(f,e,t){"use strict";f.exports=function(f,e,t,n,a){return f.config=e,t&&(f.code=t),f.request=n,f.response=a,f.isAxiosError=!0,f.toJSON=function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:this.config,code:this.code}},f}},function(f,e,t){"use strict";var n=t(121),a=t(122);f.exports=function(f,e){return f&&!n(e)?a(f,e):e}},function(f,e,t){"use strict";f.exports=function(f){return/^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(f)}},function(f,e,t){"use strict";f.exports=function(f,e){return e?f.replace(/\/+$/,"")+"/"+e.replace(/^\/+/,""):f}},function(f,e,t){"use strict";var n=t(0),a=["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"];f.exports=function(f){var e,t,i,s={};return f?(n.forEach(f.split("\n"),(function(f){if(i=f.indexOf(":"),e=n.trim(f.substr(0,i)).toLowerCase(),t=n.trim(f.substr(i+1)),e){if(s[e]&&a.indexOf(e)>=0)return;s[e]="set-cookie"===e?(s[e]?s[e]:[]).concat([t]):s[e]?s[e]+", "+t:t}})),s):s}},function(f,e,t){"use strict";var n=t(0);f.exports=n.isStandardBrowserEnv()?function(){var f,e=/(msie|trident)/i.test(navigator.userAgent),t=document.createElement("a");function a(f){var n=f;return e&&(t.setAttribute("href",n),n=t.href),t.setAttribute("href",n),{href:t.href,protocol:t.protocol?t.protocol.replace(/:$/,""):"",host:t.host,search:t.search?t.search.replace(/^\?/,""):"",hash:t.hash?t.hash.replace(/^#/,""):"",hostname:t.hostname,port:t.port,pathname:"/"===t.pathname.charAt(0)?t.pathname:"/"+t.pathname}}return f=a(window.location.href),function(e){var t=n.isString(e)?a(e):e;return t.protocol===f.protocol&&t.host===f.host}}():function(){return!0}},function(f,e,t){"use strict";var n=t(0);f.exports=n.isStandardBrowserEnv()?{write:function(f,e,t,a,i,s){var r=[];r.push(f+"="+encodeURIComponent(e)),n.isNumber(t)&&r.push("expires="+new Date(t).toGMTString()),n.isString(a)&&r.push("path="+a),n.isString(i)&&r.push("domain="+i),!0===s&&r.push("secure"),document.cookie=r.join("; ")},read:function(f){var e=document.cookie.match(new RegExp("(^|;\\s*)("+f+")=([^;]*)"));return e?decodeURIComponent(e[3]):null},remove:function(f){this.write(f,"",Date.now()-864e5)}}:{write:function(){},read:function(){return null},remove:function(){}}},function(f,e,t){"use strict";var n=t(21);function a(f){if("function"!=typeof f)throw new TypeError("executor must be a function.");var e;this.promise=new Promise((function(f){e=f}));var t=this;f((function(f){t.reason||(t.reason=new n(f),e(t.reason))}))}a.prototype.throwIfRequested=function(){if(this.reason)throw this.reason},a.source=function(){var f;return{token:new a((function(e){f=e})),cancel:f}},f.exports=a},function(f,e,t){"use strict";f.exports=function(f){return function(e){return f.apply(null,e)}}},function(f,e,t){const n=t(13);f.exports=class{constructor(f){this.internal=f.internal,this.web3=f.web3,this.ABI=f.ABI,this.apiHelpers=f.apiHelpers}async getGnosisSafeInstanceAt(f){return await new this.web3.eth.Contract(this.ABI.gnosisSafe.abi,f)}async getLastTx(f){try{const e=await this.apiHelpers.buildTxServiceUrl(f);return(await n.get(e,{params:{limit:1}})).data.results[0]||null}catch(f){return console.error("failed to retrieve last Tx from server",f),null}}async getNewTxNonce(f,e,t){return Number.isInteger(Number.parseInt(f,10))?f:null===e?(await t.methods.nonce().call()).toString():`${e.nonce+1}`}async shouldExecuteTransaction(f,e,t){if(1==+await f.methods.getThreshold().call()){const f=0===Number.parseInt(e),n=t&&t.isExecuted;return f||n}return!1}async getApprovalTransaction({baseGas:f,data:e,gasPrice:t,gasToken:n,nonce:a,operation:i,refundReceiver:s,safeInstance:r,safeTxGas:o,sender:d,to:u,valueInWei:p}){const l=await r.methods.getTransactionHash(u,p,e,i,o,f,t,n,s,a).call({from:d});try{return r.methods.approveHash(l)}catch(f){throw console.error(`Error while approving transaction: ${f}`),f}}async getExecutionTransaction({baseGas:f,data:e,gasPrice:t,gasToken:n,operation:a,refundReceiver:i,safeInstance:s,safeTxGas:r,sigs:o,to:d,valueInWei:u}){try{return new this.web3.eth.Contract(this.ABI.gnosisSafe.abi,s._address).methods.execTransaction(d,u,e,a,r,f,t,n,i,o)}catch(f){throw console.error(`Error while creating transaction: ${f}`),f}}}},function(f,e,t){const n=t(130);f.exports=class{constructor(f){this.web3=f.web3,this.transactionsHelpers=f.transactionsHelpers}estimateDataGasCosts(f){return f.match(/.{2}/g).reduce((f,e)=>"0x"===e?f+0:"00"===e?f+4:f+16,0)}async estimateSafeTxGas(f,e,t,a,i,s){return new Promise(async(r,o)=>{try{let d=f;d||(d=await this.transactionsHelpers.getGnosisSafeInstanceAt(e));const u=d.methods.requiredTxGas(a,i,t,s).encodeABI(),p=await this.web3.eth.call({to:e,from:e,data:u}),l=new n(p.substring(138),16).toNumber()+1e4,y=this.estimateDataGasCosts(u)+21e3,c=new this.web3.BatchRequest,m=[1e4,2e4,4e4,8e4,16e4,32e4,64e4,128e4,256e4,512e4].map(f=>new Promise(t=>{const n=this.web3.eth.call.request({to:e,from:e,data:u,gasPrice:0,gasLimit:l+y+f},(e,n)=>{const a=n&&"string"==typeof n.data,i=!e&&("string"==typeof n&&"0x"!==n||a&&"0x"!==n.data.slice(9));t({success:i,estimation:l+f})});c.add(n)}));c.execute();const b=(await Promise.all(m)).find(f=>f.success);if(b)return r(b.estimation);o("Transaction might fail.")}catch(f){o("Error calculating tx gas estimation",f)}})}}},function(f,e,t){var n;!function(a){"use strict";var i,s=/^-?(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?$/i,r=Math.ceil,o=Math.floor,d="[BigNumber Error] ",u=d+"Number primitive has more than 15 significant digits: ",p=1e14,l=[1,10,100,1e3,1e4,1e5,1e6,1e7,1e8,1e9,1e10,1e11,1e12,1e13],y=1e9;function c(f){var e=0|f;return f>0||f===e?e:e-1}function m(f){for(var e,t,n=1,a=f.length,i=f[0]+"";n<a;){for(t=14-(e=f[n++]+"").length;t--;e="0"+e);i+=e}for(a=i.length;48===i.charCodeAt(--a););return i.slice(0,a+1||1)}function b(f,e){var t,n,a=f.c,i=e.c,s=f.s,r=e.s,o=f.e,d=e.e;if(!s||!r)return null;if(t=a&&!a[0],n=i&&!i[0],t||n)return t?n?0:-r:s;if(s!=r)return s;if(t=s<0,n=o==d,!a||!i)return n?0:!a^t?1:-1;if(!n)return o>d^t?1:-1;for(r=(o=a.length)<(d=i.length)?o:d,s=0;s<r;s++)if(a[s]!=i[s])return a[s]>i[s]^t?1:-1;return o==d?0:o>d^t?1:-1}function h(f,e,t,n){if(f<e||f>t||f!==o(f))throw Error(d+(n||"Argument")+("number"==typeof f?f<e||f>t?" out of range: ":" not an integer: ":" not a primitive number: ")+String(f))}function T(f){var e=f.c.length-1;return c(f.e/14)==e&&f.c[e]%2!=0}function g(f,e){return(f.length>1?f.charAt(0)+"."+f.slice(1):f)+(e<0?"e":"e+")+e}function w(f,e,t){var n,a;if(e<0){for(a=t+".";++e;a+=t);f=a+f}else if(++e>(n=f.length)){for(a=t,e-=n;--e;a+=t);f+=a}else e<n&&(f=f.slice(0,e)+"."+f.slice(e));return f}(i=function f(e){var t,n,a,i,v,A,k,x,E,I=G.prototype={constructor:G,toString:null,valueOf:null},S=new G(1),D=20,M=4,C=-7,P=21,R=-1e7,B=1e7,O=!1,N=1,L=0,_={prefix:"",groupSize:3,secondaryGroupSize:0,groupSeparator:",",decimalSeparator:".",fractionGroupSize:0,fractionGroupSeparator:" ",suffix:""},F="0123456789abcdefghijklmnopqrstuvwxyz";function G(f,e){var t,i,r,d,p,l,y,c,m=this;if(!(m instanceof G))return new G(f,e);if(null==e){if(f&&!0===f._isBigNumber)return m.s=f.s,void(!f.c||f.e>B?m.c=m.e=null:f.e<R?m.c=[m.e=0]:(m.e=f.e,m.c=f.c.slice()));if((l="number"==typeof f)&&0*f==0){if(m.s=1/f<0?(f=-f,-1):1,f===~~f){for(d=0,p=f;p>=10;p/=10,d++);return void(d>B?m.c=m.e=null:(m.e=d,m.c=[f]))}c=String(f)}else{if(!s.test(c=String(f)))return a(m,c,l);m.s=45==c.charCodeAt(0)?(c=c.slice(1),-1):1}(d=c.indexOf("."))>-1&&(c=c.replace(".","")),(p=c.search(/e/i))>0?(d<0&&(d=p),d+=+c.slice(p+1),c=c.substring(0,p)):d<0&&(d=c.length)}else{if(h(e,2,F.length,"Base"),10==e)return j(m=new G(f),D+m.e+1,M);if(c=String(f),l="number"==typeof f){if(0*f!=0)return a(m,c,l,e);if(m.s=1/f<0?(c=c.slice(1),-1):1,G.DEBUG&&c.replace(/^0\.0*|\./,"").length>15)throw Error(u+f)}else m.s=45===c.charCodeAt(0)?(c=c.slice(1),-1):1;for(t=F.slice(0,e),d=p=0,y=c.length;p<y;p++)if(t.indexOf(i=c.charAt(p))<0){if("."==i){if(p>d){d=y;continue}}else if(!r&&(c==c.toUpperCase()&&(c=c.toLowerCase())||c==c.toLowerCase()&&(c=c.toUpperCase()))){r=!0,p=-1,d=0;continue}return a(m,String(f),l,e)}l=!1,(d=(c=n(c,e,10,m.s)).indexOf("."))>-1?c=c.replace(".",""):d=c.length}for(p=0;48===c.charCodeAt(p);p++);for(y=c.length;48===c.charCodeAt(--y););if(c=c.slice(p,++y)){if(y-=p,l&&G.DEBUG&&y>15&&(f>9007199254740991||f!==o(f)))throw Error(u+m.s*f);if((d=d-p-1)>B)m.c=m.e=null;else if(d<R)m.c=[m.e=0];else{if(m.e=d,m.c=[],p=(d+1)%14,d<0&&(p+=14),p<y){for(p&&m.c.push(+c.slice(0,p)),y-=14;p<y;)m.c.push(+c.slice(p,p+=14));p=14-(c=c.slice(p)).length}else p-=y;for(;p--;c+="0");m.c.push(+c)}}else m.c=[m.e=0]}function H(f,e,t,n){var a,i,s,r,o;if(null==t?t=M:h(t,0,8),!f.c)return f.toString();if(a=f.c[0],s=f.e,null==e)o=m(f.c),o=1==n||2==n&&(s<=C||s>=P)?g(o,s):w(o,s,"0");else if(i=(f=j(new G(f),e,t)).e,r=(o=m(f.c)).length,1==n||2==n&&(e<=i||i<=C)){for(;r<e;o+="0",r++);o=g(o,i)}else if(e-=s,o=w(o,i,"0"),i+1>r){if(--e>0)for(o+=".";e--;o+="0");}else if((e+=i-r)>0)for(i+1==r&&(o+=".");e--;o+="0");return f.s<0&&a?"-"+o:o}function $(f,e){for(var t,n=1,a=new G(f[0]);n<f.length;n++){if(!(t=new G(f[n])).s){a=t;break}e.call(a,t)&&(a=t)}return a}function U(f,e,t){for(var n=1,a=e.length;!e[--a];e.pop());for(a=e[0];a>=10;a/=10,n++);return(t=n+14*t-1)>B?f.c=f.e=null:t<R?f.c=[f.e=0]:(f.e=t,f.c=e),f}function j(f,e,t,n){var a,i,s,d,u,y,c,m=f.c,b=l;if(m){f:{for(a=1,d=m[0];d>=10;d/=10,a++);if((i=e-a)<0)i+=14,s=e,c=(u=m[y=0])/b[a-s-1]%10|0;else if((y=r((i+1)/14))>=m.length){if(!n)break f;for(;m.length<=y;m.push(0));u=c=0,a=1,s=(i%=14)-14+1}else{for(u=d=m[y],a=1;d>=10;d/=10,a++);c=(s=(i%=14)-14+a)<0?0:u/b[a-s-1]%10|0}if(n=n||e<0||null!=m[y+1]||(s<0?u:u%b[a-s-1]),n=t<4?(c||n)&&(0==t||t==(f.s<0?3:2)):c>5||5==c&&(4==t||n||6==t&&(i>0?s>0?u/b[a-s]:0:m[y-1])%10&1||t==(f.s<0?8:7)),e<1||!m[0])return m.length=0,n?(e-=f.e+1,m[0]=b[(14-e%14)%14],f.e=-e||0):m[0]=f.e=0,f;if(0==i?(m.length=y,d=1,y--):(m.length=y+1,d=b[14-i],m[y]=s>0?o(u/b[a-s]%b[s])*d:0),n)for(;;){if(0==y){for(i=1,s=m[0];s>=10;s/=10,i++);for(s=m[0]+=d,d=1;s>=10;s/=10,d++);i!=d&&(f.e++,m[0]==p&&(m[0]=1));break}if(m[y]+=d,m[y]!=p)break;m[y--]=0,d=1}for(i=m.length;0===m[--i];m.pop());}f.e>B?f.c=f.e=null:f.e<R&&(f.c=[f.e=0])}return f}function W(f){var e,t=f.e;return null===t?f.toString():(e=m(f.c),e=t<=C||t>=P?g(e,t):w(e,t,"0"),f.s<0?"-"+e:e)}return G.clone=f,G.ROUND_UP=0,G.ROUND_DOWN=1,G.ROUND_CEIL=2,G.ROUND_FLOOR=3,G.ROUND_HALF_UP=4,G.ROUND_HALF_DOWN=5,G.ROUND_HALF_EVEN=6,G.ROUND_HALF_CEIL=7,G.ROUND_HALF_FLOOR=8,G.EUCLID=9,G.config=G.set=function(f){var e,t;if(null!=f){if("object"!=typeof f)throw Error(d+"Object expected: "+f);if(f.hasOwnProperty(e="DECIMAL_PLACES")&&(h(t=f[e],0,y,e),D=t),f.hasOwnProperty(e="ROUNDING_MODE")&&(h(t=f[e],0,8,e),M=t),f.hasOwnProperty(e="EXPONENTIAL_AT")&&((t=f[e])&&t.pop?(h(t[0],-y,0,e),h(t[1],0,y,e),C=t[0],P=t[1]):(h(t,-y,y,e),C=-(P=t<0?-t:t))),f.hasOwnProperty(e="RANGE"))if((t=f[e])&&t.pop)h(t[0],-y,-1,e),h(t[1],1,y,e),R=t[0],B=t[1];else{if(h(t,-y,y,e),!t)throw Error(d+e+" cannot be zero: "+t);R=-(B=t<0?-t:t)}if(f.hasOwnProperty(e="CRYPTO")){if((t=f[e])!==!!t)throw Error(d+e+" not true or false: "+t);if(t){if("undefined"==typeof crypto||!crypto||!crypto.getRandomValues&&!crypto.randomBytes)throw O=!t,Error(d+"crypto unavailable");O=t}else O=t}if(f.hasOwnProperty(e="MODULO_MODE")&&(h(t=f[e],0,9,e),N=t),f.hasOwnProperty(e="POW_PRECISION")&&(h(t=f[e],0,y,e),L=t),f.hasOwnProperty(e="FORMAT")){if("object"!=typeof(t=f[e]))throw Error(d+e+" not an object: "+t);_=t}if(f.hasOwnProperty(e="ALPHABET")){if("string"!=typeof(t=f[e])||/^.$|[+-.\s]|(.).*\1/.test(t))throw Error(d+e+" invalid: "+t);F=t}}return{DECIMAL_PLACES:D,ROUNDING_MODE:M,EXPONENTIAL_AT:[C,P],RANGE:[R,B],CRYPTO:O,MODULO_MODE:N,POW_PRECISION:L,FORMAT:_,ALPHABET:F}},G.isBigNumber=function(f){if(!f||!0!==f._isBigNumber)return!1;if(!G.DEBUG)return!0;var e,t,n=f.c,a=f.e,i=f.s;f:if("[object Array]"=={}.toString.call(n)){if((1===i||-1===i)&&a>=-y&&a<=y&&a===o(a)){if(0===n[0]){if(0===a&&1===n.length)return!0;break f}if((e=(a+1)%14)<1&&(e+=14),String(n[0]).length==e){for(e=0;e<n.length;e++)if((t=n[e])<0||t>=p||t!==o(t))break f;if(0!==t)return!0}}}else if(null===n&&null===a&&(null===i||1===i||-1===i))return!0;throw Error(d+"Invalid BigNumber: "+f)},G.maximum=G.max=function(){return $(arguments,I.lt)},G.minimum=G.min=function(){return $(arguments,I.gt)},G.random=(i=9007199254740992*Math.random()&2097151?function(){return o(9007199254740992*Math.random())}:function(){return 8388608*(1073741824*Math.random()|0)+(8388608*Math.random()|0)},function(f){var e,t,n,a,s,u=0,p=[],c=new G(S);if(null==f?f=D:h(f,0,y),a=r(f/14),O)if(crypto.getRandomValues){for(e=crypto.getRandomValues(new Uint32Array(a*=2));u<a;)(s=131072*e[u]+(e[u+1]>>>11))>=9e15?(t=crypto.getRandomValues(new Uint32Array(2)),e[u]=t[0],e[u+1]=t[1]):(p.push(s%1e14),u+=2);u=a/2}else{if(!crypto.randomBytes)throw O=!1,Error(d+"crypto unavailable");for(e=crypto.randomBytes(a*=7);u<a;)(s=281474976710656*(31&e[u])+1099511627776*e[u+1]+4294967296*e[u+2]+16777216*e[u+3]+(e[u+4]<<16)+(e[u+5]<<8)+e[u+6])>=9e15?crypto.randomBytes(7).copy(e,u):(p.push(s%1e14),u+=7);u=a/7}if(!O)for(;u<a;)(s=i())<9e15&&(p[u++]=s%1e14);for(f%=14,(a=p[--u])&&f&&(s=l[14-f],p[u]=o(a/s)*s);0===p[u];p.pop(),u--);if(u<0)p=[n=0];else{for(n=-1;0===p[0];p.splice(0,1),n-=14);for(u=1,s=p[0];s>=10;s/=10,u++);u<14&&(n-=14-u)}return c.e=n,c.c=p,c}),G.sum=function(){for(var f=1,e=arguments,t=new G(e[0]);f<e.length;)t=t.plus(e[f++]);return t},n=function(){function f(f,e,t,n){for(var a,i,s=[0],r=0,o=f.length;r<o;){for(i=s.length;i--;s[i]*=e);for(s[0]+=n.indexOf(f.charAt(r++)),a=0;a<s.length;a++)s[a]>t-1&&(null==s[a+1]&&(s[a+1]=0),s[a+1]+=s[a]/t|0,s[a]%=t)}return s.reverse()}return function(e,n,a,i,s){var r,o,d,u,p,l,y,c,b=e.indexOf("."),h=D,T=M;for(b>=0&&(u=L,L=0,e=e.replace(".",""),l=(c=new G(n)).pow(e.length-b),L=u,c.c=f(w(m(l.c),l.e,"0"),10,a,"0123456789"),c.e=c.c.length),d=u=(y=f(e,n,a,s?(r=F,"0123456789"):(r="0123456789",F))).length;0==y[--u];y.pop());if(!y[0])return r.charAt(0);if(b<0?--d:(l.c=y,l.e=d,l.s=i,y=(l=t(l,c,h,T,a)).c,p=l.r,d=l.e),b=y[o=d+h+1],u=a/2,p=p||o<0||null!=y[o+1],p=T<4?(null!=b||p)&&(0==T||T==(l.s<0?3:2)):b>u||b==u&&(4==T||p||6==T&&1&y[o-1]||T==(l.s<0?8:7)),o<1||!y[0])e=p?w(r.charAt(1),-h,r.charAt(0)):r.charAt(0);else{if(y.length=o,p)for(--a;++y[--o]>a;)y[o]=0,o||(++d,y=[1].concat(y));for(u=y.length;!y[--u];);for(b=0,e="";b<=u;e+=r.charAt(y[b++]));e=w(e,d,r.charAt(0))}return e}}(),t=function(){function f(f,e,t){var n,a,i,s,r=0,o=f.length,d=e%1e7,u=e/1e7|0;for(f=f.slice();o--;)r=((a=d*(i=f[o]%1e7)+(n=u*i+(s=f[o]/1e7|0)*d)%1e7*1e7+r)/t|0)+(n/1e7|0)+u*s,f[o]=a%t;return r&&(f=[r].concat(f)),f}function e(f,e,t,n){var a,i;if(t!=n)i=t>n?1:-1;else for(a=i=0;a<t;a++)if(f[a]!=e[a]){i=f[a]>e[a]?1:-1;break}return i}function t(f,e,t,n){for(var a=0;t--;)f[t]-=a,a=f[t]<e[t]?1:0,f[t]=a*n+f[t]-e[t];for(;!f[0]&&f.length>1;f.splice(0,1));}return function(n,a,i,s,r){var d,u,l,y,m,b,h,T,g,w,v,A,k,x,E,I,S,D=n.s==a.s?1:-1,M=n.c,C=a.c;if(!(M&&M[0]&&C&&C[0]))return new G(n.s&&a.s&&(M?!C||M[0]!=C[0]:C)?M&&0==M[0]||!C?0*D:D/0:NaN);for(g=(T=new G(D)).c=[],D=i+(u=n.e-a.e)+1,r||(r=p,u=c(n.e/14)-c(a.e/14),D=D/14|0),l=0;C[l]==(M[l]||0);l++);if(C[l]>(M[l]||0)&&u--,D<0)g.push(1),y=!0;else{for(x=M.length,I=C.length,l=0,D+=2,(m=o(r/(C[0]+1)))>1&&(C=f(C,m,r),M=f(M,m,r),I=C.length,x=M.length),k=I,v=(w=M.slice(0,I)).length;v<I;w[v++]=0);S=C.slice(),S=[0].concat(S),E=C[0],C[1]>=r/2&&E++;do{if(m=0,(d=e(C,w,I,v))<0){if(A=w[0],I!=v&&(A=A*r+(w[1]||0)),(m=o(A/E))>1)for(m>=r&&(m=r-1),h=(b=f(C,m,r)).length,v=w.length;1==e(b,w,h,v);)m--,t(b,I<h?S:C,h,r),h=b.length,d=1;else 0==m&&(d=m=1),h=(b=C.slice()).length;if(h<v&&(b=[0].concat(b)),t(w,b,v,r),v=w.length,-1==d)for(;e(C,w,I,v)<1;)m++,t(w,I<v?S:C,v,r),v=w.length}else 0===d&&(m++,w=[0]);g[l++]=m,w[0]?w[v++]=M[k]||0:(w=[M[k]],v=1)}while((k++<x||null!=w[0])&&D--);y=null!=w[0],g[0]||g.splice(0,1)}if(r==p){for(l=1,D=g[0];D>=10;D/=10,l++);j(T,i+(T.e=l+14*u-1)+1,s,y)}else T.e=u,T.r=+y;return T}}(),v=/^(-?)0([xbo])(?=\w[\w.]*$)/i,A=/^([^.]+)\.$/,k=/^\.([^.]+)$/,x=/^-?(Infinity|NaN)$/,E=/^\s*\+(?=[\w.])|^\s+|\s+$/g,a=function(f,e,t,n){var a,i=t?e:e.replace(E,"");if(x.test(i))f.s=isNaN(i)?null:i<0?-1:1;else{if(!t&&(i=i.replace(v,(function(f,e,t){return a="x"==(t=t.toLowerCase())?16:"b"==t?2:8,n&&n!=a?f:e})),n&&(a=n,i=i.replace(A,"$1").replace(k,"0.$1")),e!=i))return new G(i,a);if(G.DEBUG)throw Error(d+"Not a"+(n?" base "+n:"")+" number: "+e);f.s=null}f.c=f.e=null},I.absoluteValue=I.abs=function(){var f=new G(this);return f.s<0&&(f.s=1),f},I.comparedTo=function(f,e){return b(this,new G(f,e))},I.decimalPlaces=I.dp=function(f,e){var t,n,a,i=this;if(null!=f)return h(f,0,y),null==e?e=M:h(e,0,8),j(new G(i),f+i.e+1,e);if(!(t=i.c))return null;if(n=14*((a=t.length-1)-c(this.e/14)),a=t[a])for(;a%10==0;a/=10,n--);return n<0&&(n=0),n},I.dividedBy=I.div=function(f,e){return t(this,new G(f,e),D,M)},I.dividedToIntegerBy=I.idiv=function(f,e){return t(this,new G(f,e),0,1)},I.exponentiatedBy=I.pow=function(f,e){var t,n,a,i,s,u,p,l,y=this;if((f=new G(f)).c&&!f.isInteger())throw Error(d+"Exponent not an integer: "+W(f));if(null!=e&&(e=new G(e)),s=f.e>14,!y.c||!y.c[0]||1==y.c[0]&&!y.e&&1==y.c.length||!f.c||!f.c[0])return l=new G(Math.pow(+W(y),s?2-T(f):+W(f))),e?l.mod(e):l;if(u=f.s<0,e){if(e.c?!e.c[0]:!e.s)return new G(NaN);(n=!u&&y.isInteger()&&e.isInteger())&&(y=y.mod(e))}else{if(f.e>9&&(y.e>0||y.e<-1||(0==y.e?y.c[0]>1||s&&y.c[1]>=24e7:y.c[0]<8e13||s&&y.c[0]<=9999975e7)))return i=y.s<0&&T(f)?-0:0,y.e>-1&&(i=1/i),new G(u?1/i:i);L&&(i=r(L/14+2))}for(s?(t=new G(.5),u&&(f.s=1),p=T(f)):p=(a=Math.abs(+W(f)))%2,l=new G(S);;){if(p){if(!(l=l.times(y)).c)break;i?l.c.length>i&&(l.c.length=i):n&&(l=l.mod(e))}if(a){if(0===(a=o(a/2)))break;p=a%2}else if(j(f=f.times(t),f.e+1,1),f.e>14)p=T(f);else{if(0===(a=+W(f)))break;p=a%2}y=y.times(y),i?y.c&&y.c.length>i&&(y.c.length=i):n&&(y=y.mod(e))}return n?l:(u&&(l=S.div(l)),e?l.mod(e):i?j(l,L,M,void 0):l)},I.integerValue=function(f){var e=new G(this);return null==f?f=M:h(f,0,8),j(e,e.e+1,f)},I.isEqualTo=I.eq=function(f,e){return 0===b(this,new G(f,e))},I.isFinite=function(){return!!this.c},I.isGreaterThan=I.gt=function(f,e){return b(this,new G(f,e))>0},I.isGreaterThanOrEqualTo=I.gte=function(f,e){return 1===(e=b(this,new G(f,e)))||0===e},I.isInteger=function(){return!!this.c&&c(this.e/14)>this.c.length-2},I.isLessThan=I.lt=function(f,e){return b(this,new G(f,e))<0},I.isLessThanOrEqualTo=I.lte=function(f,e){return-1===(e=b(this,new G(f,e)))||0===e},I.isNaN=function(){return!this.s},I.isNegative=function(){return this.s<0},I.isPositive=function(){return this.s>0},I.isZero=function(){return!!this.c&&0==this.c[0]},I.minus=function(f,e){var t,n,a,i,s=this,r=s.s;if(e=(f=new G(f,e)).s,!r||!e)return new G(NaN);if(r!=e)return f.s=-e,s.plus(f);var o=s.e/14,d=f.e/14,u=s.c,l=f.c;if(!o||!d){if(!u||!l)return u?(f.s=-e,f):new G(l?s:NaN);if(!u[0]||!l[0])return l[0]?(f.s=-e,f):new G(u[0]?s:3==M?-0:0)}if(o=c(o),d=c(d),u=u.slice(),r=o-d){for((i=r<0)?(r=-r,a=u):(d=o,a=l),a.reverse(),e=r;e--;a.push(0));a.reverse()}else for(n=(i=(r=u.length)<(e=l.length))?r:e,r=e=0;e<n;e++)if(u[e]!=l[e]){i=u[e]<l[e];break}if(i&&(a=u,u=l,l=a,f.s=-f.s),(e=(n=l.length)-(t=u.length))>0)for(;e--;u[t++]=0);for(e=p-1;n>r;){if(u[--n]<l[n]){for(t=n;t&&!u[--t];u[t]=e);--u[t],u[n]+=p}u[n]-=l[n]}for(;0==u[0];u.splice(0,1),--d);return u[0]?U(f,u,d):(f.s=3==M?-1:1,f.c=[f.e=0],f)},I.modulo=I.mod=function(f,e){var n,a,i=this;return f=new G(f,e),!i.c||!f.s||f.c&&!f.c[0]?new G(NaN):!f.c||i.c&&!i.c[0]?new G(i):(9==N?(a=f.s,f.s=1,n=t(i,f,0,3),f.s=a,n.s*=a):n=t(i,f,0,N),(f=i.minus(n.times(f))).c[0]||1!=N||(f.s=i.s),f)},I.multipliedBy=I.times=function(f,e){var t,n,a,i,s,r,o,d,u,l,y,m,b,h,T=this,g=T.c,w=(f=new G(f,e)).c;if(!(g&&w&&g[0]&&w[0]))return!T.s||!f.s||g&&!g[0]&&!w||w&&!w[0]&&!g?f.c=f.e=f.s=null:(f.s*=T.s,g&&w?(f.c=[0],f.e=0):f.c=f.e=null),f;for(n=c(T.e/14)+c(f.e/14),f.s*=T.s,(o=g.length)<(l=w.length)&&(b=g,g=w,w=b,a=o,o=l,l=a),a=o+l,b=[];a--;b.push(0));for(h=p,1e7,a=l;--a>=0;){for(t=0,y=w[a]%1e7,m=w[a]/1e7|0,i=a+(s=o);i>a;)t=((d=y*(d=g[--s]%1e7)+(r=m*d+(u=g[s]/1e7|0)*y)%1e7*1e7+b[i]+t)/h|0)+(r/1e7|0)+m*u,b[i--]=d%h;b[i]=t}return t?++n:b.splice(0,1),U(f,b,n)},I.negated=function(){var f=new G(this);return f.s=-f.s||null,f},I.plus=function(f,e){var t,n=this,a=n.s;if(e=(f=new G(f,e)).s,!a||!e)return new G(NaN);if(a!=e)return f.s=-e,n.minus(f);var i=n.e/14,s=f.e/14,r=n.c,o=f.c;if(!i||!s){if(!r||!o)return new G(a/0);if(!r[0]||!o[0])return o[0]?f:new G(r[0]?n:0*a)}if(i=c(i),s=c(s),r=r.slice(),a=i-s){for(a>0?(s=i,t=o):(a=-a,t=r),t.reverse();a--;t.push(0));t.reverse()}for((a=r.length)-(e=o.length)<0&&(t=o,o=r,r=t,e=a),a=0;e;)a=(r[--e]=r[e]+o[e]+a)/p|0,r[e]=p===r[e]?0:r[e]%p;return a&&(r=[a].concat(r),++s),U(f,r,s)},I.precision=I.sd=function(f,e){var t,n,a,i=this;if(null!=f&&f!==!!f)return h(f,1,y),null==e?e=M:h(e,0,8),j(new G(i),f,e);if(!(t=i.c))return null;if(n=14*(a=t.length-1)+1,a=t[a]){for(;a%10==0;a/=10,n--);for(a=t[0];a>=10;a/=10,n++);}return f&&i.e+1>n&&(n=i.e+1),n},I.shiftedBy=function(f){return h(f,-9007199254740991,9007199254740991),this.times("1e"+f)},I.squareRoot=I.sqrt=function(){var f,e,n,a,i,s=this,r=s.c,o=s.s,d=s.e,u=D+4,p=new G("0.5");if(1!==o||!r||!r[0])return new G(!o||o<0&&(!r||r[0])?NaN:r?s:1/0);if(0==(o=Math.sqrt(+W(s)))||o==1/0?(((e=m(r)).length+d)%2==0&&(e+="0"),o=Math.sqrt(+e),d=c((d+1)/2)-(d<0||d%2),n=new G(e=o==1/0?"1e"+d:(e=o.toExponential()).slice(0,e.indexOf("e")+1)+d)):n=new G(o+""),n.c[0])for((o=(d=n.e)+u)<3&&(o=0);;)if(i=n,n=p.times(i.plus(t(s,i,u,1))),m(i.c).slice(0,o)===(e=m(n.c)).slice(0,o)){if(n.e<d&&--o,"9999"!=(e=e.slice(o-3,o+1))&&(a||"4999"!=e)){+e&&(+e.slice(1)||"5"!=e.charAt(0))||(j(n,n.e+D+2,1),f=!n.times(n).eq(s));break}if(!a&&(j(i,i.e+D+2,0),i.times(i).eq(s))){n=i;break}u+=4,o+=4,a=1}return j(n,n.e+D+1,M,f)},I.toExponential=function(f,e){return null!=f&&(h(f,0,y),f++),H(this,f,e,1)},I.toFixed=function(f,e){return null!=f&&(h(f,0,y),f=f+this.e+1),H(this,f,e)},I.toFormat=function(f,e,t){var n,a=this;if(null==t)null!=f&&e&&"object"==typeof e?(t=e,e=null):f&&"object"==typeof f?(t=f,f=e=null):t=_;else if("object"!=typeof t)throw Error(d+"Argument not an object: "+t);if(n=a.toFixed(f,e),a.c){var i,s=n.split("."),r=+t.groupSize,o=+t.secondaryGroupSize,u=t.groupSeparator||"",p=s[0],l=s[1],y=a.s<0,c=y?p.slice(1):p,m=c.length;if(o&&(i=r,r=o,o=i,m-=i),r>0&&m>0){for(i=m%r||r,p=c.substr(0,i);i<m;i+=r)p+=u+c.substr(i,r);o>0&&(p+=u+c.slice(i)),y&&(p="-"+p)}n=l?p+(t.decimalSeparator||"")+((o=+t.fractionGroupSize)?l.replace(new RegExp("\\d{"+o+"}\\B","g"),"$&"+(t.fractionGroupSeparator||"")):l):p}return(t.prefix||"")+n+(t.suffix||"")},I.toFraction=function(f){var e,n,a,i,s,r,o,u,p,y,c,b,h=this,T=h.c;if(null!=f&&(!(o=new G(f)).isInteger()&&(o.c||1!==o.s)||o.lt(S)))throw Error(d+"Argument "+(o.isInteger()?"out of range: ":"not an integer: ")+W(o));if(!T)return new G(h);for(e=new G(S),p=n=new G(S),a=u=new G(S),b=m(T),s=e.e=b.length-h.e-1,e.c[0]=l[(r=s%14)<0?14+r:r],f=!f||o.comparedTo(e)>0?s>0?e:p:o,r=B,B=1/0,o=new G(b),u.c[0]=0;y=t(o,e,0,1),1!=(i=n.plus(y.times(a))).comparedTo(f);)n=a,a=i,p=u.plus(y.times(i=p)),u=i,e=o.minus(y.times(i=e)),o=i;return i=t(f.minus(n),a,0,1),u=u.plus(i.times(p)),n=n.plus(i.times(a)),u.s=p.s=h.s,c=t(p,a,s*=2,M).minus(h).abs().comparedTo(t(u,n,s,M).minus(h).abs())<1?[p,a]:[u,n],B=r,c},I.toNumber=function(){return+W(this)},I.toPrecision=function(f,e){return null!=f&&h(f,1,y),H(this,f,e,2)},I.toString=function(f){var e,t=this,a=t.s,i=t.e;return null===i?a?(e="Infinity",a<0&&(e="-"+e)):e="NaN":(null==f?e=i<=C||i>=P?g(m(t.c),i):w(m(t.c),i,"0"):10===f?e=w(m((t=j(new G(t),D+i+1,M)).c),t.e,"0"):(h(f,2,F.length,"Base"),e=n(w(m(t.c),i,"0"),10,f,a,!0)),a<0&&t.c[0]&&(e="-"+e)),e},I.valueOf=I.toJSON=function(){return W(this)},I._isBigNumber=!0,null!=e&&G.set(e),G}()).default=i.BigNumber=i,void 0===(n=function(){return i}.call(e,t,e,f))||(f.exports=n)}()},function(f,e,t){const n=t(132),a=t(133);f.exports=class{constructor(f){this.web3=f.web3,this.SAFE_VERSION_FOR_OFFCHAIN_SIGNATURES=">=1.1.1",this.ethSigner=new n(this),this.eip712Signer=new a(this),this.SIGNERS={EIP712_V3:this.eip712Signer.getEIP712Signer("v3"),EIP712_V4:this.eip712Signer.getEIP712Signer("v4"),EIP712:this.eip712Signer.getEIP712Signer(),ETH_SIGN:this.ethSigner.ethSigner}}getSignersByWallet(f){return f?[this.SIGNERS.ETH_SIGN]:[this.SIGNERS.EIP712_V3,this.SIGNERS.EIP712_V4,this.SIGNERS.EIP712,this.SIGNERS.ETH_SIGN]}async tryOffchainSigning(f,e){let t;const n=this.getSignersByWallet(e);for(const e of n)try{t=await e(f);break}catch(f){if(console.error(f),4001===f.code)throw new Error("User denied sign request")}return t}}},function(f,e){f.exports=class{constructor(f){this.web3=f.web3,this.ETH_SIGN_NOT_SUPPORTED_ERROR_MSG="ETH_SIGN_NOT_SUPPORTED"}async ethSigner({baseGas:f,data:e,gasPrice:t,gasToken:n,nonce:a,operation:i,refundReceiver:s,safeInstance:r,safeTxGas:o,sender:d,to:u,valueInWei:p}){const l=await r.methods.getTransactionHash(u,p,e,i,o,f,t,n,s,a,{from:d}).call(),y=this.web3;return new Promise((function(f,e){y.currentProvider.sendAsync({jsonrpc:"2.0",method:"eth_sign",params:[d,l],id:(new Date).getTime()},(async function(t,n){if(t)return e(t);if(null==n.result)return void e(new Error(this.ETH_SIGN_NOT_SUPPORTED_ERROR_MSG));const a=n.result.replace("0x","");let i=parseInt(a.slice(-2),16);switch(i){case 0:case 1:i+=31;break;case 27:case 28:i+=4;break;default:throw new Error("Invalid signature")}f(a.slice(0,-2)+i.toString(16))}))}))}}},function(f,e){f.exports=class{constructor(f){this.web3=f.web3,this.EIP712_NOT_SUPPORTED_ERROR_MSG="ETH_SIGN_NOT_SUPPORTED"}async generateTypedDataFrom({baseGas:f,data:e,gasPrice:t,gasToken:n,nonce:a,operation:i,refundReceiver:s,safeAddress:r,safeTxGas:o,to:d,valueInWei:u}){return{types:{EIP712Domain:[{type:"address",name:"verifyingContract"}],SafeTx:[{type:"address",name:"to"},{type:"uint256",name:"value"},{type:"bytes",name:"data"},{type:"uint8",name:"operation"},{type:"uint256",name:"safeTxGas"},{type:"uint256",name:"baseGas"},{type:"uint256",name:"gasPrice"},{type:"address",name:"gasToken"},{type:"address",name:"refundReceiver"},{type:"uint256",name:"nonce"}]},domain:{verifyingContract:r},primaryType:"SafeTx",message:{to:d,value:u,data:e,operation:i,safeTxGas:o,baseGas:f,gasPrice:t,gasToken:n,refundReceiver:s,nonce:+a}}}getEIP712Signer(f){return async e=>{const t=await this.generateTypedDataFrom(e);let n="eth_signTypedData_v3";"v4"===f&&(n="eth_signTypedData_v4"),f||(n="eth_signTypedData");const a=JSON.stringify(t),i={jsonrpc:"2.0",method:n,params:"v3"===f||"v4"===f?[e.sender,a]:[a,e.sender],from:e.sender,id:(new Date).getTime()},s=this.web3;return new Promise((f,e)=>{s.currentProvider.sendAsync(i,(t,n)=>t?void e(t):null==n.result?void e(new Error(EIP712_NOT_SUPPORTED_ERROR_MSG)):void f(n.result.replace("0x","")))})}}}},function(f,e){f.exports=class{constructor(f){this.internal=f.internal,this.web3=f.web3,this.WALLET_PROVIDER={SAFE:"SAFE",METAMASK:"METAMASK",REMOTE:"REMOTE",TORUS:"TORUS",PORTIS:"PORTIS",FORTMATIC:"FORTMATIC",SQUARELINK:"SQUARELINK",UNILOGIN:"UNILOGIN",WALLETCONNECT:"WALLETCONNECT",OPERA:"OPERA",DAPPER:"DAPPER",WALLETLINK:"WALLETLINK",AUTHEREUM:"AUTHEREUM",LEDGER:"LEDGER",TREZOR:"TREZOR"}}sameAddress(f,e){return!!f&&!!e&&f.toLowerCase()===e.toLowerCase()}isHardwareWallet(f){return this.sameAddress(this.WALLET_PROVIDER.LEDGER,f)||this.sameAddress(this.WALLET_PROVIDER.TREZOR,f)}async isSmartContractWallet(f){return""!==(await web3.eth.getCode(f)).replace("0x","").replace(/0/g,"")}async getProviderInfo(f,e="Wallet"){const t=f||await this.internal.getAddress();return{smartContractWallet:await this.isSmartContractWallet(t),hardwareWallet:this.isHardwareWallet(e)}}}}])}));